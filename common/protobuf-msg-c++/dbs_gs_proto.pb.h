// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dbs_gs_proto.proto

#ifndef PROTOBUF_dbs_5fgs_5fproto_2eproto__INCLUDED
#define PROTOBUF_dbs_5fgs_5fproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "gs_c_proto.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

class db_user_sub_task;
class db_user_sub_task_array;
class db_user_hero_equip;
class db_user_hero_skill;
class db_user_hero;
class db_user_hero_array;
class db_mail_attach;
class db_user_mail;
class db_user_mail_array;
class db_user_shop_buy;
class db_user_shop_buy_array;
class db_user_shop_item;
class db_user_shop;
class db_user_shop_array;
class db_user_mission_event;
class db_user_arena_log;
class db_user_arena_log_db_user_arena_log_hero;
class db_user_mission_event_array;
class db_user_mission_chain;
class db_user_mission_chain_array;
class db_user_arena;
class db_user_base_info;
class db_user_sign;
class db_user_novice_guide_array;
class db_user_friend;
class db_user_friend_friend_info;
class db_user_crusade;
class db_user_guild_info;
class db_user_guild_info_struct_apply;
class db_user_guild_info_struct_boss_info;
class db_user_guild_info_struct_boss_info_struct_dead_hero;
class db_user_info;
class gs_dbs_user_info_req;
class dbs_gs_user_info_res;
class gs_dbs_user_info_new_create_req;
class dbs_gs_user_info_new_create_res;
class gs_dbs_user_info_op_req;
class gs_dbs_user_info_op_req_struct_op_base_info;
class gs_dbs_user_info_op_req_struct_op_sub_task;
class gs_dbs_user_info_op_req_struct_op_mail;
class gs_dbs_user_info_op_req_struct_new_hero;
class gs_dbs_user_info_op_req_struct_op_hero_base;
class gs_dbs_user_info_op_req_struct_op_hero_equip;
class gs_dbs_user_info_op_req_struct_op_hero_skill;
class gs_dbs_user_info_op_req_struct_op_shop;
class gs_dbs_user_info_op_req_struct_op_shop_item;
class gs_dbs_user_info_op_req_struct_op_mission;
class gs_dbs_user_info_op_req_struct_new_arena;
class gs_dbs_user_info_op_req_struct_op_arena;
class gs_dbs_user_info_op_req_struct_clear_arena_team;
class gs_dbs_user_info_op_req_struct_op_arena_challenge;
class gs_dbs_user_info_op_req_struct_op_sign;
class gs_dbs_user_info_op_req_struct_new_sign;
class gs_dbs_user_info_op_req_struct_op_novice_guide;
class gs_dbs_user_info_op_req_struct_new_user_statis;
class gs_dbs_user_info_op_req_struct_new_mail;
class gs_dbs_user_info_op_req_struct_op_friend;
class gs_dbs_user_info_op_req_struct_op_crusade;
class gs_dbs_user_info_op_req_struct_op_crusade_crusade_end;
class dbs_gs_user_info_op_res;
class gs_dbs_user_new_mail_req;
class dbs_gs_user_new_mail_res;
class arena_mail;
class gs_dbs_user_new_arena_mail_req;
class dbs_gs_user_new_arena_mail_res;
class gs_dbs_edit_name_req;
class dbs_gs_edit_name_res;
class gs_dbs_user_friend_op_req;
class dbs_gs_user_friend_op_res;
class gs_dbs_search_user_req;
class dbs_gs_search_user_res;
class gs_dbs_friend_offline_req;
class dbs_gs_friend_offline_res;
class gs_dbs_rank_req;
class dbs_gs_rank_res;
class dbs_gs_rank_res_rank_brief_info;
class dbs_gs_rank_res_rank_info;
class gs_dbs_guild_op_req;
class gs_dbs_guild_op_req_struct_new_guild;
class gs_dbs_guild_op_req_struct_update_guild;
class gs_dbs_guild_op_req_struct_delete_guild;
class gs_dbs_guild_op_req_struct_new_apply;
class gs_dbs_guild_op_req_struct_delete_apply;
class gs_dbs_guild_op_req_struct_new_member;
class gs_dbs_guild_op_req_struct_update_member;
class gs_dbs_guild_op_req_struct_new_boss;
class gs_dbs_guild_op_req_struct_update_boss;
class gs_dbs_guild_op_req_struct_new_boss_attacker;
class gs_dbs_guild_op_req_struct_delete_boss_attacker;
class gs_dbs_guild_op_req_struct_new_dead_hero;
class gs_dbs_guild_op_req_struct_delete_dead_hero;
class dbs_gs_guild_op_res;

enum db_user_mission_event_MISSION_EVENT_TYPE {
  db_user_mission_event_MISSION_EVENT_TYPE_min = 0,
  db_user_mission_event_MISSION_EVENT_TYPE_SKILL_LEVEL_UP = 1,
  db_user_mission_event_MISSION_EVENT_TYPE_RECHARGE = 2,
  db_user_mission_event_MISSION_EVENT_TYPE_COMMON_FB_COMPLETE = 3,
  db_user_mission_event_MISSION_EVENT_TYPE_COMMON_FB_ALL_THROUGH = 4,
  db_user_mission_event_MISSION_EVENT_TYPE_COMMON_FB_ALL_THROUGH_THREE_STAR = 5,
  db_user_mission_event_MISSION_EVENT_TYPE_EQUIP_LEVEL_UP = 6,
  db_user_mission_event_MISSION_EVENT_TYPE_RECHARGE_MISSION_MONTH_CARD1 = 7,
  db_user_mission_event_MISSION_EVENT_TYPE_GIVE_FRIEND_HEALTH = 8,
  db_user_mission_event_MISSION_EVENT_TYPE_HERO_COLLECT = 9,
  db_user_mission_event_MISSION_EVENT_TYPE_HEALTH_MEAL = 10,
  db_user_mission_event_MISSION_EVENT_TYPE_GET_REWARD = 11,
  db_user_mission_event_MISSION_EVENT_TYPE_RECHARGE_MISSION_MONTH_CARD2 = 12,
  db_user_mission_event_MISSION_EVENT_TYPE_MISSION_MAIN = 13,
  db_user_mission_event_MISSION_EVENT_TYPE_MISSION_FREE = 14,
  db_user_mission_event_MISSION_EVENT_TYPE_ACTIVITY = 15,
  db_user_mission_event_MISSION_EVENT_TYPE_JI_TAN = 16,
  db_user_mission_event_MISSION_EVENT_TYPE_ARENA_CHALLENGE = 17,
  db_user_mission_event_MISSION_EVENT_TYPE_SHI_LIAN_TA = 18,
  db_user_mission_event_MISSION_EVENT_TYPE_CRUSADE = 19,
  db_user_mission_event_MISSION_EVENT_TYPE_LEVEL_UP = 20,
  db_user_mission_event_MISSION_EVENT_TYPE_BUY_GOLD = 21,
  db_user_mission_event_MISSION_EVENT_TYPE_FB_FAIL = 22,
  db_user_mission_event_MISSION_EVENT_TYPE_COMPLETE_CHAPTER_ALL_FB_THREE_STAR = 23,
  db_user_mission_event_MISSION_EVENT_TYPE_ARENA_RANK_TOP = 24,
  db_user_mission_event_MISSION_EVENT_TYPE_COMPLETE_CHAPTER_FB = 25,
  db_user_mission_event_MISSION_EVENT_TYPE_Buy_Health = 1000,
  db_user_mission_event_MISSION_EVENT_TYPE_Buy_Skill_Point = 1001,
  db_user_mission_event_MISSION_EVENT_TYPE_Login = 1002,
  db_user_mission_event_MISSION_EVENT_TYPE_Del_Friend = 1003,
  db_user_mission_event_MISSION_EVENT_TYPE_Hero_Life = 1004,
  db_user_mission_event_MISSION_EVENT_TYPE_Crusade_Reset = 1005,
  db_user_mission_event_MISSION_EVENT_TYPE_Crusade_Promote_Reward = 1006,
  db_user_mission_event_MISSION_EVENT_TYPE_Crusade_Refresh_Buff = 1007,
  db_user_mission_event_MISSION_EVENT_TYPE_max = 1008
};
bool db_user_mission_event_MISSION_EVENT_TYPE_IsValid(int value);
const db_user_mission_event_MISSION_EVENT_TYPE db_user_mission_event_MISSION_EVENT_TYPE_MISSION_EVENT_TYPE_MIN = db_user_mission_event_MISSION_EVENT_TYPE_min;
const db_user_mission_event_MISSION_EVENT_TYPE db_user_mission_event_MISSION_EVENT_TYPE_MISSION_EVENT_TYPE_MAX = db_user_mission_event_MISSION_EVENT_TYPE_max;
const int db_user_mission_event_MISSION_EVENT_TYPE_MISSION_EVENT_TYPE_ARRAYSIZE = db_user_mission_event_MISSION_EVENT_TYPE_MISSION_EVENT_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* db_user_mission_event_MISSION_EVENT_TYPE_descriptor();
inline const ::std::string& db_user_mission_event_MISSION_EVENT_TYPE_Name(db_user_mission_event_MISSION_EVENT_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    db_user_mission_event_MISSION_EVENT_TYPE_descriptor(), value);
}
inline bool db_user_mission_event_MISSION_EVENT_TYPE_Parse(
    const ::std::string& name, db_user_mission_event_MISSION_EVENT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<db_user_mission_event_MISSION_EVENT_TYPE>(
    db_user_mission_event_MISSION_EVENT_TYPE_descriptor(), name, value);
}
enum db_user_mission_event_MISSION_EVENT_SUB_TYPE {
  db_user_mission_event_MISSION_EVENT_SUB_TYPE_MIN = 0,
  db_user_mission_event_MISSION_EVENT_SUB_TYPE_NONE = 1,
  db_user_mission_event_MISSION_EVENT_SUB_TYPE_HERO_QUALITY_GREEN = 2,
  db_user_mission_event_MISSION_EVENT_SUB_TYPE_HERO_QUALITY_BLUE = 3,
  db_user_mission_event_MISSION_EVENT_SUB_TYPE_HERO_STAR_FOUR = 4,
  db_user_mission_event_MISSION_EVENT_SUB_TYPE_HERO_STAR_THREE = 5,
  db_user_mission_event_MISSION_EVENT_SUB_TYPE_PLAYER_LEVEL = 6,
  db_user_mission_event_MISSION_EVENT_SUB_TYPE_VIP_LEVEL = 7,
  db_user_mission_event_MISSION_EVENT_SUB_TYPE_HUAXIA = 8,
  db_user_mission_event_MISSION_EVENT_SUB_TYPE_MAX = 9
};
bool db_user_mission_event_MISSION_EVENT_SUB_TYPE_IsValid(int value);
const db_user_mission_event_MISSION_EVENT_SUB_TYPE db_user_mission_event_MISSION_EVENT_SUB_TYPE_MISSION_EVENT_SUB_TYPE_MIN = db_user_mission_event_MISSION_EVENT_SUB_TYPE_MIN;
const db_user_mission_event_MISSION_EVENT_SUB_TYPE db_user_mission_event_MISSION_EVENT_SUB_TYPE_MISSION_EVENT_SUB_TYPE_MAX = db_user_mission_event_MISSION_EVENT_SUB_TYPE_MAX;
const int db_user_mission_event_MISSION_EVENT_SUB_TYPE_MISSION_EVENT_SUB_TYPE_ARRAYSIZE = db_user_mission_event_MISSION_EVENT_SUB_TYPE_MISSION_EVENT_SUB_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* db_user_mission_event_MISSION_EVENT_SUB_TYPE_descriptor();
inline const ::std::string& db_user_mission_event_MISSION_EVENT_SUB_TYPE_Name(db_user_mission_event_MISSION_EVENT_SUB_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    db_user_mission_event_MISSION_EVENT_SUB_TYPE_descriptor(), value);
}
inline bool db_user_mission_event_MISSION_EVENT_SUB_TYPE_Parse(
    const ::std::string& name, db_user_mission_event_MISSION_EVENT_SUB_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<db_user_mission_event_MISSION_EVENT_SUB_TYPE>(
    db_user_mission_event_MISSION_EVENT_SUB_TYPE_descriptor(), name, value);
}
enum gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType {
  gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_min = 0,
  gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_CREATE = 1,
  gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_AUTO_REFRESH = 2,
  gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_MANUAL_REFRESH = 3,
  gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_RANDOM_REFRESH = 4,
  gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_max = 5
};
bool gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_IsValid(int value);
const gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_ESHOPOPType_MIN = gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_min;
const gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_ESHOPOPType_MAX = gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_max;
const int gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_ESHOPOPType_ARRAYSIZE = gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_ESHOPOPType_MAX + 1;

const ::google::protobuf::EnumDescriptor* gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_descriptor();
inline const ::std::string& gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_Name(gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType value) {
  return ::google::protobuf::internal::NameOfEnum(
    gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_descriptor(), value);
}
inline bool gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_Parse(
    const ::std::string& name, gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType>(
    gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_descriptor(), name, value);
}
enum gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE {
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GET_ELEMENT1 = 1,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GET_ELEMENTN = 2,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GIVE_ELEMENT1 = 3,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GIVE_ELEMENTN = 4,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GIVE_UP_APPLY1 = 5,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GIVE_UP_APPLYN = 6,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_AFFIRM_AGREE1 = 7,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_AFFIRM_AGREEN = 8,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_AFFIRM_REFUSE1 = 9,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_AFFIRM_REFUSEN = 10,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_ADD_FRIEND_GS_ONLINE = 11,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_DEL_FRIEND = 12,
  gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_DEL_RECOMMEND_FRIEND = 13
};
bool gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_IsValid(int value);
const gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_OP_TYPE_MIN = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GET_ELEMENT1;
const gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_OP_TYPE_MAX = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_DEL_RECOMMEND_FRIEND;
const int gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_OP_TYPE_ARRAYSIZE = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_OP_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_descriptor();
inline const ::std::string& gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_Name(gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_descriptor(), value);
}
inline bool gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_Parse(
    const ::std::string& name, gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE>(
    gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_descriptor(), name, value);
}
enum gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE {
  gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_CRUSADE_END = 1,
  gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_HERO_LIFE = 2,
  gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_RESET = 3
};
bool gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_IsValid(int value);
const gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_CRUSADE_OP_TYPE_MIN = gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_CRUSADE_END;
const gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_CRUSADE_OP_TYPE_MAX = gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_RESET;
const int gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_CRUSADE_OP_TYPE_ARRAYSIZE = gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_CRUSADE_OP_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_descriptor();
inline const ::std::string& gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_Name(gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_descriptor(), value);
}
inline bool gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_Parse(
    const ::std::string& name, gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE>(
    gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_descriptor(), name, value);
}
enum gs_dbs_user_info_op_req_EOPType {
  gs_dbs_user_info_op_req_EOPType_Add_Or_Update = 1,
  gs_dbs_user_info_op_req_EOPType_Delete = 2,
  gs_dbs_user_info_op_req_EOPType_Add = 3,
  gs_dbs_user_info_op_req_EOPType_Update = 4
};
bool gs_dbs_user_info_op_req_EOPType_IsValid(int value);
const gs_dbs_user_info_op_req_EOPType gs_dbs_user_info_op_req_EOPType_EOPType_MIN = gs_dbs_user_info_op_req_EOPType_Add_Or_Update;
const gs_dbs_user_info_op_req_EOPType gs_dbs_user_info_op_req_EOPType_EOPType_MAX = gs_dbs_user_info_op_req_EOPType_Update;
const int gs_dbs_user_info_op_req_EOPType_EOPType_ARRAYSIZE = gs_dbs_user_info_op_req_EOPType_EOPType_MAX + 1;

const ::google::protobuf::EnumDescriptor* gs_dbs_user_info_op_req_EOPType_descriptor();
inline const ::std::string& gs_dbs_user_info_op_req_EOPType_Name(gs_dbs_user_info_op_req_EOPType value) {
  return ::google::protobuf::internal::NameOfEnum(
    gs_dbs_user_info_op_req_EOPType_descriptor(), value);
}
inline bool gs_dbs_user_info_op_req_EOPType_Parse(
    const ::std::string& name, gs_dbs_user_info_op_req_EOPType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gs_dbs_user_info_op_req_EOPType>(
    gs_dbs_user_info_op_req_EOPType_descriptor(), name, value);
}
enum gs_dbs_user_friend_op_req_OP_TYPE {
  gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_GIVE_ELEMENT = 1,
  gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_GIVE_UP_APPLY = 2,
  gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_AFFIRM_AGREE = 3,
  gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_AFFIRM_REFUSE = 4,
  gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_DEL_FRIEND = 5,
  gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_ADD_FRIEND = 6
};
bool gs_dbs_user_friend_op_req_OP_TYPE_IsValid(int value);
const gs_dbs_user_friend_op_req_OP_TYPE gs_dbs_user_friend_op_req_OP_TYPE_OP_TYPE_MIN = gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_GIVE_ELEMENT;
const gs_dbs_user_friend_op_req_OP_TYPE gs_dbs_user_friend_op_req_OP_TYPE_OP_TYPE_MAX = gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_ADD_FRIEND;
const int gs_dbs_user_friend_op_req_OP_TYPE_OP_TYPE_ARRAYSIZE = gs_dbs_user_friend_op_req_OP_TYPE_OP_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* gs_dbs_user_friend_op_req_OP_TYPE_descriptor();
inline const ::std::string& gs_dbs_user_friend_op_req_OP_TYPE_Name(gs_dbs_user_friend_op_req_OP_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    gs_dbs_user_friend_op_req_OP_TYPE_descriptor(), value);
}
inline bool gs_dbs_user_friend_op_req_OP_TYPE_Parse(
    const ::std::string& name, gs_dbs_user_friend_op_req_OP_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gs_dbs_user_friend_op_req_OP_TYPE>(
    gs_dbs_user_friend_op_req_OP_TYPE_descriptor(), name, value);
}
enum gs_dbs_friend_offline_req_OP_TYPE {
  gs_dbs_friend_offline_req_OP_TYPE_ADD_FRIEND = 1,
  gs_dbs_friend_offline_req_OP_TYPE_AFFIRM_AGREE1 = 2,
  gs_dbs_friend_offline_req_OP_TYPE_AFFIRM_AGREEN = 3
};
bool gs_dbs_friend_offline_req_OP_TYPE_IsValid(int value);
const gs_dbs_friend_offline_req_OP_TYPE gs_dbs_friend_offline_req_OP_TYPE_OP_TYPE_MIN = gs_dbs_friend_offline_req_OP_TYPE_ADD_FRIEND;
const gs_dbs_friend_offline_req_OP_TYPE gs_dbs_friend_offline_req_OP_TYPE_OP_TYPE_MAX = gs_dbs_friend_offline_req_OP_TYPE_AFFIRM_AGREEN;
const int gs_dbs_friend_offline_req_OP_TYPE_OP_TYPE_ARRAYSIZE = gs_dbs_friend_offline_req_OP_TYPE_OP_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* gs_dbs_friend_offline_req_OP_TYPE_descriptor();
inline const ::std::string& gs_dbs_friend_offline_req_OP_TYPE_Name(gs_dbs_friend_offline_req_OP_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    gs_dbs_friend_offline_req_OP_TYPE_descriptor(), value);
}
inline bool gs_dbs_friend_offline_req_OP_TYPE_Parse(
    const ::std::string& name, gs_dbs_friend_offline_req_OP_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gs_dbs_friend_offline_req_OP_TYPE>(
    gs_dbs_friend_offline_req_OP_TYPE_descriptor(), name, value);
}
enum gs_dbs_guild_op_req_struct_delete_apply_EOPType {
  gs_dbs_guild_op_req_struct_delete_apply_EOPType_G1_A1 = 1,
  gs_dbs_guild_op_req_struct_delete_apply_EOPType_G1_AN = 2,
  gs_dbs_guild_op_req_struct_delete_apply_EOPType_A1_GN = 3
};
bool gs_dbs_guild_op_req_struct_delete_apply_EOPType_IsValid(int value);
const gs_dbs_guild_op_req_struct_delete_apply_EOPType gs_dbs_guild_op_req_struct_delete_apply_EOPType_EOPType_MIN = gs_dbs_guild_op_req_struct_delete_apply_EOPType_G1_A1;
const gs_dbs_guild_op_req_struct_delete_apply_EOPType gs_dbs_guild_op_req_struct_delete_apply_EOPType_EOPType_MAX = gs_dbs_guild_op_req_struct_delete_apply_EOPType_A1_GN;
const int gs_dbs_guild_op_req_struct_delete_apply_EOPType_EOPType_ARRAYSIZE = gs_dbs_guild_op_req_struct_delete_apply_EOPType_EOPType_MAX + 1;

const ::google::protobuf::EnumDescriptor* gs_dbs_guild_op_req_struct_delete_apply_EOPType_descriptor();
inline const ::std::string& gs_dbs_guild_op_req_struct_delete_apply_EOPType_Name(gs_dbs_guild_op_req_struct_delete_apply_EOPType value) {
  return ::google::protobuf::internal::NameOfEnum(
    gs_dbs_guild_op_req_struct_delete_apply_EOPType_descriptor(), value);
}
inline bool gs_dbs_guild_op_req_struct_delete_apply_EOPType_Parse(
    const ::std::string& name, gs_dbs_guild_op_req_struct_delete_apply_EOPType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gs_dbs_guild_op_req_struct_delete_apply_EOPType>(
    gs_dbs_guild_op_req_struct_delete_apply_EOPType_descriptor(), name, value);
}
enum gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType {
  gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_M1_B1 = 1,
  gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_M1_BN = 2,
  gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_MN_B1 = 3,
  gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_MN_BN = 4
};
bool gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_IsValid(int value);
const gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_EOPType_MIN = gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_M1_B1;
const gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_EOPType_MAX = gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_MN_BN;
const int gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_EOPType_ARRAYSIZE = gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_EOPType_MAX + 1;

const ::google::protobuf::EnumDescriptor* gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_descriptor();
inline const ::std::string& gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_Name(gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType value) {
  return ::google::protobuf::internal::NameOfEnum(
    gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_descriptor(), value);
}
inline bool gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_Parse(
    const ::std::string& name, gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType>(
    gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_descriptor(), name, value);
}
enum gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType {
  gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_M1 = 1,
  gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_MN = 2
};
bool gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_IsValid(int value);
const gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_EOPType_MIN = gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_M1;
const gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_EOPType_MAX = gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_MN;
const int gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_EOPType_ARRAYSIZE = gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_EOPType_MAX + 1;

const ::google::protobuf::EnumDescriptor* gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_descriptor();
inline const ::std::string& gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_Name(gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType value) {
  return ::google::protobuf::internal::NameOfEnum(
    gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_descriptor(), value);
}
inline bool gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_Parse(
    const ::std::string& name, gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType>(
    gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_descriptor(), name, value);
}
enum e_msg_gs_dbs {
  e_msg_gs_dbs_min = 0,
  e_msg_gs_dbs_user_info_req = 1,
  e_msg_gs_dbs_user_info_op_req = 2,
  e_msg_gs_dbs_user_info_new_create_req = 3,
  e_msg_gs_dbs_user_new_mail_req = 4,
  e_msg_gs_dbs_edit_name_req = 5,
  e_msg_gs_dbs_user_new_arena_mail_req = 6,
  e_msg_gs_dbs_user_friend_op_req = 7,
  e_msg_gs_dbs_search_user_req = 8,
  e_msg_gs_dbs_friend_offline_req = 9,
  e_msg_gs_dbs_rank_req = 10,
  e_msg_gs_dbs_guild_op_req = 11,
  e_msg_gs_dbs_max = 12
};
bool e_msg_gs_dbs_IsValid(int value);
const e_msg_gs_dbs e_msg_gs_dbs_MIN = e_msg_gs_dbs_min;
const e_msg_gs_dbs e_msg_gs_dbs_MAX = e_msg_gs_dbs_max;
const int e_msg_gs_dbs_ARRAYSIZE = e_msg_gs_dbs_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_msg_gs_dbs_descriptor();
inline const ::std::string& e_msg_gs_dbs_Name(e_msg_gs_dbs value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_msg_gs_dbs_descriptor(), value);
}
inline bool e_msg_gs_dbs_Parse(
    const ::std::string& name, e_msg_gs_dbs* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_msg_gs_dbs>(
    e_msg_gs_dbs_descriptor(), name, value);
}
enum e_msg_dbs_gs {
  e_msg_dbs_gs_min = 0,
  e_msg_dbs_gs_user_info_res = 1,
  e_msg_dbs_gs_user_info_op_res = 2,
  e_msg_dbs_gs_user_info_new_create_res = 3,
  e_msg_dbs_gs_user_new_mail_res = 4,
  e_msg_dbs_gs_edit_name_res = 5,
  e_msg_dbs_gs_user_new_arena_mail_res = 6,
  e_msg_dbs_gs_user_friend_op_res = 7,
  e_msg_dbs_gs_search_user_res = 8,
  e_msg_dbs_gs_friend_offline_res = 9,
  e_msg_dbs_gs_rank_res = 10,
  e_msg_dbs_gs_guild_op_res = 11,
  e_msg_dbs_gs_max = 12
};
bool e_msg_dbs_gs_IsValid(int value);
const e_msg_dbs_gs e_msg_dbs_gs_MIN = e_msg_dbs_gs_min;
const e_msg_dbs_gs e_msg_dbs_gs_MAX = e_msg_dbs_gs_max;
const int e_msg_dbs_gs_ARRAYSIZE = e_msg_dbs_gs_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_msg_dbs_gs_descriptor();
inline const ::std::string& e_msg_dbs_gs_Name(e_msg_dbs_gs value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_msg_dbs_gs_descriptor(), value);
}
inline bool e_msg_dbs_gs_Parse(
    const ::std::string& name, e_msg_dbs_gs* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_msg_dbs_gs>(
    e_msg_dbs_gs_descriptor(), name, value);
}
enum e_dbsgs_errorcode {
  e_dbsgs_errorcode_min = 0,
  e_dbsgs_errorcode_success = 1,
  e_dbsgs_errorcode_unkown_error = 2,
  e_dbsgs_errorcode_user_info_not_exsit = 3,
  e_dbsgs_errorcode_user_info_has_error = 4,
  e_dbsgs_errorcode_user_edit_same_name = 5,
  e_dbsgs_errorcode_friend_add_confirm_reach_max = 6,
  e_dbsgs_errorcode_friend_num_reach_max = 7,
  e_dbsgs_errorcode_max = 8
};
bool e_dbsgs_errorcode_IsValid(int value);
const e_dbsgs_errorcode e_dbsgs_errorcode_MIN = e_dbsgs_errorcode_min;
const e_dbsgs_errorcode e_dbsgs_errorcode_MAX = e_dbsgs_errorcode_max;
const int e_dbsgs_errorcode_ARRAYSIZE = e_dbsgs_errorcode_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_dbsgs_errorcode_descriptor();
inline const ::std::string& e_dbsgs_errorcode_Name(e_dbsgs_errorcode value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_dbsgs_errorcode_descriptor(), value);
}
inline bool e_dbsgs_errorcode_Parse(
    const ::std::string& name, e_dbsgs_errorcode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_dbsgs_errorcode>(
    e_dbsgs_errorcode_descriptor(), name, value);
}
// ===================================================================

class db_user_sub_task : public ::google::protobuf::Message {
 public:
  db_user_sub_task();
  virtual ~db_user_sub_task();

  db_user_sub_task(const db_user_sub_task& from);

  inline db_user_sub_task& operator=(const db_user_sub_task& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_sub_task& default_instance();

  void Swap(db_user_sub_task* other);

  // implements Message ----------------------------------------------

  db_user_sub_task* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_sub_task& from);
  void MergeFrom(const db_user_sub_task& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sub_task_id = 1 [default = 0];
  inline bool has_sub_task_id() const;
  inline void clear_sub_task_id();
  static const int kSubTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 sub_task_id() const;
  inline void set_sub_task_id(::google::protobuf::uint32 value);

  // required uint32 star = 2 [default = 0];
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint32 last_enter_timestamp = 3 [default = 0];
  inline bool has_last_enter_timestamp() const;
  inline void clear_last_enter_timestamp();
  static const int kLastEnterTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 last_enter_timestamp() const;
  inline void set_last_enter_timestamp(::google::protobuf::uint32 value);

  // required uint32 last_day_enter_num = 4 [default = 0];
  inline bool has_last_day_enter_num() const;
  inline void clear_last_day_enter_num();
  static const int kLastDayEnterNumFieldNumber = 4;
  inline ::google::protobuf::uint32 last_day_enter_num() const;
  inline void set_last_day_enter_num(::google::protobuf::uint32 value);

  // required uint32 total_enter_num = 5 [default = 0];
  inline bool has_total_enter_num() const;
  inline void clear_total_enter_num();
  static const int kTotalEnterNumFieldNumber = 5;
  inline ::google::protobuf::uint32 total_enter_num() const;
  inline void set_total_enter_num(::google::protobuf::uint32 value);

  // required uint32 last_reset_time = 6;
  inline bool has_last_reset_time() const;
  inline void clear_last_reset_time();
  static const int kLastResetTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 last_reset_time() const;
  inline void set_last_reset_time(::google::protobuf::uint32 value);

  // required uint32 last_day_reset_num = 7;
  inline bool has_last_day_reset_num() const;
  inline void clear_last_day_reset_num();
  static const int kLastDayResetNumFieldNumber = 7;
  inline ::google::protobuf::uint32 last_day_reset_num() const;
  inline void set_last_day_reset_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_sub_task)
 private:
  inline void set_has_sub_task_id();
  inline void clear_has_sub_task_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_last_enter_timestamp();
  inline void clear_has_last_enter_timestamp();
  inline void set_has_last_day_enter_num();
  inline void clear_has_last_day_enter_num();
  inline void set_has_total_enter_num();
  inline void clear_has_total_enter_num();
  inline void set_has_last_reset_time();
  inline void clear_has_last_reset_time();
  inline void set_has_last_day_reset_num();
  inline void clear_has_last_day_reset_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 sub_task_id_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 last_enter_timestamp_;
  ::google::protobuf::uint32 last_day_enter_num_;
  ::google::protobuf::uint32 total_enter_num_;
  ::google::protobuf::uint32 last_reset_time_;
  ::google::protobuf::uint32 last_day_reset_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_sub_task* default_instance_;
};
// -------------------------------------------------------------------

class db_user_sub_task_array : public ::google::protobuf::Message {
 public:
  db_user_sub_task_array();
  virtual ~db_user_sub_task_array();

  db_user_sub_task_array(const db_user_sub_task_array& from);

  inline db_user_sub_task_array& operator=(const db_user_sub_task_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_sub_task_array& default_instance();

  void Swap(db_user_sub_task_array* other);

  // implements Message ----------------------------------------------

  db_user_sub_task_array* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_sub_task_array& from);
  void MergeFrom(const db_user_sub_task_array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db_user_sub_task items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::db_user_sub_task& items(int index) const;
  inline ::db_user_sub_task* mutable_items(int index);
  inline ::db_user_sub_task* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_sub_task >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_sub_task >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:db_user_sub_task_array)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::db_user_sub_task > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_sub_task_array* default_instance_;
};
// -------------------------------------------------------------------

class db_user_hero_equip : public ::google::protobuf::Message {
 public:
  db_user_hero_equip();
  virtual ~db_user_hero_equip();

  db_user_hero_equip(const db_user_hero_equip& from);

  inline db_user_hero_equip& operator=(const db_user_hero_equip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_hero_equip& default_instance();

  void Swap(db_user_hero_equip* other);

  // implements Message ----------------------------------------------

  db_user_hero_equip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_hero_equip& from);
  void MergeFrom(const db_user_hero_equip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 equip_id = 1 [default = 0];
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 1;
  inline ::google::protobuf::uint32 equip_id() const;
  inline void set_equip_id(::google::protobuf::uint32 value);

  // required uint32 level = 2 [default = 0];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_hero_equip)
 private:
  inline void set_has_equip_id();
  inline void clear_has_equip_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 equip_id_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_hero_equip* default_instance_;
};
// -------------------------------------------------------------------

class db_user_hero_skill : public ::google::protobuf::Message {
 public:
  db_user_hero_skill();
  virtual ~db_user_hero_skill();

  db_user_hero_skill(const db_user_hero_skill& from);

  inline db_user_hero_skill& operator=(const db_user_hero_skill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_hero_skill& default_instance();

  void Swap(db_user_hero_skill* other);

  // implements Message ----------------------------------------------

  db_user_hero_skill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_hero_skill& from);
  void MergeFrom(const db_user_hero_skill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .user_hero_skill.e_skill_type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::user_hero_skill_e_skill_type type() const;
  inline void set_type(::user_hero_skill_e_skill_type value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_hero_skill)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_hero_skill* default_instance_;
};
// -------------------------------------------------------------------

class db_user_hero : public ::google::protobuf::Message {
 public:
  db_user_hero();
  virtual ~db_user_hero();

  db_user_hero(const db_user_hero& from);

  inline db_user_hero& operator=(const db_user_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_hero& default_instance();

  void Swap(db_user_hero* other);

  // implements Message ----------------------------------------------

  db_user_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_hero& from);
  void MergeFrom(const db_user_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 cur_exp = 5;
  inline bool has_cur_exp() const;
  inline void clear_cur_exp();
  static const int kCurExpFieldNumber = 5;
  inline ::google::protobuf::uint32 cur_exp() const;
  inline void set_cur_exp(::google::protobuf::uint32 value);

  // required uint32 got_timestamp = 6;
  inline bool has_got_timestamp() const;
  inline void clear_got_timestamp();
  static const int kGotTimestampFieldNumber = 6;
  inline ::google::protobuf::uint32 got_timestamp() const;
  inline void set_got_timestamp(::google::protobuf::uint32 value);

  // repeated .db_user_hero_equip equips = 7;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 7;
  inline const ::db_user_hero_equip& equips(int index) const;
  inline ::db_user_hero_equip* mutable_equips(int index);
  inline ::db_user_hero_equip* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_hero_equip >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_hero_equip >*
      mutable_equips();

  // repeated .db_user_hero_skill skills = 8;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 8;
  inline const ::db_user_hero_skill& skills(int index) const;
  inline ::db_user_hero_skill* mutable_skills(int index);
  inline ::db_user_hero_skill* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_hero_skill >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_hero_skill >*
      mutable_skills();

  // @@protoc_insertion_point(class_scope:db_user_hero)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_cur_exp();
  inline void clear_has_cur_exp();
  inline void set_has_got_timestamp();
  inline void clear_has_got_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 cur_exp_;
  ::google::protobuf::uint32 got_timestamp_;
  ::google::protobuf::RepeatedPtrField< ::db_user_hero_equip > equips_;
  ::google::protobuf::RepeatedPtrField< ::db_user_hero_skill > skills_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_hero* default_instance_;
};
// -------------------------------------------------------------------

class db_user_hero_array : public ::google::protobuf::Message {
 public:
  db_user_hero_array();
  virtual ~db_user_hero_array();

  db_user_hero_array(const db_user_hero_array& from);

  inline db_user_hero_array& operator=(const db_user_hero_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_hero_array& default_instance();

  void Swap(db_user_hero_array* other);

  // implements Message ----------------------------------------------

  db_user_hero_array* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_hero_array& from);
  void MergeFrom(const db_user_hero_array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db_user_hero items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::db_user_hero& items(int index) const;
  inline ::db_user_hero* mutable_items(int index);
  inline ::db_user_hero* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_hero >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_hero >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:db_user_hero_array)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::db_user_hero > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_hero_array* default_instance_;
};
// -------------------------------------------------------------------

class db_mail_attach : public ::google::protobuf::Message {
 public:
  db_mail_attach();
  virtual ~db_mail_attach();

  db_mail_attach(const db_mail_attach& from);

  inline db_mail_attach& operator=(const db_mail_attach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_mail_attach& default_instance();

  void Swap(db_mail_attach* other);

  // implements Message ----------------------------------------------

  db_mail_attach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_mail_attach& from);
  void MergeFrom(const db_mail_attach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 attach_id = 1;
  inline bool has_attach_id() const;
  inline void clear_attach_id();
  static const int kAttachIdFieldNumber = 1;
  inline ::google::protobuf::uint32 attach_id() const;
  inline void set_attach_id(::google::protobuf::uint32 value);

  // required .struct_game_element element = 2;
  inline bool has_element() const;
  inline void clear_element();
  static const int kElementFieldNumber = 2;
  inline const ::struct_game_element& element() const;
  inline ::struct_game_element* mutable_element();
  inline ::struct_game_element* release_element();
  inline void set_allocated_element(::struct_game_element* element);

  // @@protoc_insertion_point(class_scope:db_mail_attach)
 private:
  inline void set_has_attach_id();
  inline void clear_has_attach_id();
  inline void set_has_element();
  inline void clear_has_element();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::struct_game_element* element_;
  ::google::protobuf::uint32 attach_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_mail_attach* default_instance_;
};
// -------------------------------------------------------------------

class db_user_mail : public ::google::protobuf::Message {
 public:
  db_user_mail();
  virtual ~db_user_mail();

  db_user_mail(const db_user_mail& from);

  inline db_user_mail& operator=(const db_user_mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_mail& default_instance();

  void Swap(db_user_mail* other);

  // implements Message ----------------------------------------------

  db_user_mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_mail& from);
  void MergeFrom(const db_user_mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint32 value);

  // required uint32 send_time = 2;
  inline bool has_send_time() const;
  inline void clear_send_time();
  static const int kSendTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 send_time() const;
  inline void set_send_time(::google::protobuf::uint32 value);

  // required .MAIL_TYPE type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::MAIL_TYPE type() const;
  inline void set_type(::MAIL_TYPE value);

  // optional string content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // required .MAIL_STATUS status = 5;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 5;
  inline ::MAIL_STATUS status() const;
  inline void set_status(::MAIL_STATUS value);

  // repeated .db_mail_attach attachs = 6;
  inline int attachs_size() const;
  inline void clear_attachs();
  static const int kAttachsFieldNumber = 6;
  inline const ::db_mail_attach& attachs(int index) const;
  inline ::db_mail_attach* mutable_attachs(int index);
  inline ::db_mail_attach* add_attachs();
  inline const ::google::protobuf::RepeatedPtrField< ::db_mail_attach >&
      attachs() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_mail_attach >*
      mutable_attachs();

  // @@protoc_insertion_point(class_scope:db_user_mail)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  inline void set_has_send_time();
  inline void clear_has_send_time();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mail_id_;
  ::google::protobuf::uint32 send_time_;
  ::std::string* content_;
  int type_;
  int status_;
  ::google::protobuf::RepeatedPtrField< ::db_mail_attach > attachs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_mail* default_instance_;
};
// -------------------------------------------------------------------

class db_user_mail_array : public ::google::protobuf::Message {
 public:
  db_user_mail_array();
  virtual ~db_user_mail_array();

  db_user_mail_array(const db_user_mail_array& from);

  inline db_user_mail_array& operator=(const db_user_mail_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_mail_array& default_instance();

  void Swap(db_user_mail_array* other);

  // implements Message ----------------------------------------------

  db_user_mail_array* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_mail_array& from);
  void MergeFrom(const db_user_mail_array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db_user_mail mails = 1;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 1;
  inline const ::db_user_mail& mails(int index) const;
  inline ::db_user_mail* mutable_mails(int index);
  inline ::db_user_mail* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_mail >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_mail >*
      mutable_mails();

  // @@protoc_insertion_point(class_scope:db_user_mail_array)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::db_user_mail > mails_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_mail_array* default_instance_;
};
// -------------------------------------------------------------------

class db_user_shop_buy : public ::google::protobuf::Message {
 public:
  db_user_shop_buy();
  virtual ~db_user_shop_buy();

  db_user_shop_buy(const db_user_shop_buy& from);

  inline db_user_shop_buy& operator=(const db_user_shop_buy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_shop_buy& default_instance();

  void Swap(db_user_shop_buy* other);

  // implements Message ----------------------------------------------

  db_user_shop_buy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_shop_buy& from);
  void MergeFrom(const db_user_shop_buy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .struct_game_element.EELEMENTTYPE element_type = 1;
  inline bool has_element_type() const;
  inline void clear_element_type();
  static const int kElementTypeFieldNumber = 1;
  inline ::struct_game_element_EELEMENTTYPE element_type() const;
  inline void set_element_type(::struct_game_element_EELEMENTTYPE value);

  // required uint32 element_id = 2;
  inline bool has_element_id() const;
  inline void clear_element_id();
  static const int kElementIdFieldNumber = 2;
  inline ::google::protobuf::uint32 element_id() const;
  inline void set_element_id(::google::protobuf::uint32 value);

  // required uint32 last_day_buy_num = 3;
  inline bool has_last_day_buy_num() const;
  inline void clear_last_day_buy_num();
  static const int kLastDayBuyNumFieldNumber = 3;
  inline ::google::protobuf::uint32 last_day_buy_num() const;
  inline void set_last_day_buy_num(::google::protobuf::uint32 value);

  // required uint32 last_buy_time = 4;
  inline bool has_last_buy_time() const;
  inline void clear_last_buy_time();
  static const int kLastBuyTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 last_buy_time() const;
  inline void set_last_buy_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_shop_buy)
 private:
  inline void set_has_element_type();
  inline void clear_has_element_type();
  inline void set_has_element_id();
  inline void clear_has_element_id();
  inline void set_has_last_day_buy_num();
  inline void clear_has_last_day_buy_num();
  inline void set_has_last_buy_time();
  inline void clear_has_last_buy_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int element_type_;
  ::google::protobuf::uint32 element_id_;
  ::google::protobuf::uint32 last_day_buy_num_;
  ::google::protobuf::uint32 last_buy_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_shop_buy* default_instance_;
};
// -------------------------------------------------------------------

class db_user_shop_buy_array : public ::google::protobuf::Message {
 public:
  db_user_shop_buy_array();
  virtual ~db_user_shop_buy_array();

  db_user_shop_buy_array(const db_user_shop_buy_array& from);

  inline db_user_shop_buy_array& operator=(const db_user_shop_buy_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_shop_buy_array& default_instance();

  void Swap(db_user_shop_buy_array* other);

  // implements Message ----------------------------------------------

  db_user_shop_buy_array* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_shop_buy_array& from);
  void MergeFrom(const db_user_shop_buy_array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db_user_shop_buy items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::db_user_shop_buy& items(int index) const;
  inline ::db_user_shop_buy* mutable_items(int index);
  inline ::db_user_shop_buy* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_shop_buy >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_shop_buy >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:db_user_shop_buy_array)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::db_user_shop_buy > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_shop_buy_array* default_instance_;
};
// -------------------------------------------------------------------

class db_user_shop_item : public ::google::protobuf::Message {
 public:
  db_user_shop_item();
  virtual ~db_user_shop_item();

  db_user_shop_item(const db_user_shop_item& from);

  inline db_user_shop_item& operator=(const db_user_shop_item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_shop_item& default_instance();

  void Swap(db_user_shop_item* other);

  // implements Message ----------------------------------------------

  db_user_shop_item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_shop_item& from);
  void MergeFrom(const db_user_shop_item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required .struct_game_element.EELEMENTTYPE element_type = 2;
  inline bool has_element_type() const;
  inline void clear_element_type();
  static const int kElementTypeFieldNumber = 2;
  inline ::struct_game_element_EELEMENTTYPE element_type() const;
  inline void set_element_type(::struct_game_element_EELEMENTTYPE value);

  // required uint32 element_id = 3;
  inline bool has_element_id() const;
  inline void clear_element_id();
  static const int kElementIdFieldNumber = 3;
  inline ::google::protobuf::uint32 element_id() const;
  inline void set_element_id(::google::protobuf::uint32 value);

  // required uint32 element_num = 4;
  inline bool has_element_num() const;
  inline void clear_element_num();
  static const int kElementNumFieldNumber = 4;
  inline ::google::protobuf::uint32 element_num() const;
  inline void set_element_num(::google::protobuf::uint32 value);

  // required .struct_game_element.EELEMENTTYPE consume_type = 5;
  inline bool has_consume_type() const;
  inline void clear_consume_type();
  static const int kConsumeTypeFieldNumber = 5;
  inline ::struct_game_element_EELEMENTTYPE consume_type() const;
  inline void set_consume_type(::struct_game_element_EELEMENTTYPE value);

  // required uint32 consume_id = 6;
  inline bool has_consume_id() const;
  inline void clear_consume_id();
  static const int kConsumeIdFieldNumber = 6;
  inline ::google::protobuf::uint32 consume_id() const;
  inline void set_consume_id(::google::protobuf::uint32 value);

  // required uint32 consume_num = 7;
  inline bool has_consume_num() const;
  inline void clear_consume_num();
  static const int kConsumeNumFieldNumber = 7;
  inline ::google::protobuf::uint32 consume_num() const;
  inline void set_consume_num(::google::protobuf::uint32 value);

  // required .user_shop_item.ESHOPITEMFLAG flag = 8;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 8;
  inline ::user_shop_item_ESHOPITEMFLAG flag() const;
  inline void set_flag(::user_shop_item_ESHOPITEMFLAG value);

  // required uint32 is_sold = 9;
  inline bool has_is_sold() const;
  inline void clear_is_sold();
  static const int kIsSoldFieldNumber = 9;
  inline ::google::protobuf::uint32 is_sold() const;
  inline void set_is_sold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_shop_item)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_element_type();
  inline void clear_has_element_type();
  inline void set_has_element_id();
  inline void clear_has_element_id();
  inline void set_has_element_num();
  inline void clear_has_element_num();
  inline void set_has_consume_type();
  inline void clear_has_consume_type();
  inline void set_has_consume_id();
  inline void clear_has_consume_id();
  inline void set_has_consume_num();
  inline void clear_has_consume_num();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_is_sold();
  inline void clear_has_is_sold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;
  int element_type_;
  ::google::protobuf::uint32 element_id_;
  ::google::protobuf::uint32 element_num_;
  int consume_type_;
  ::google::protobuf::uint32 consume_id_;
  ::google::protobuf::uint32 consume_num_;
  int flag_;
  ::google::protobuf::uint32 is_sold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_shop_item* default_instance_;
};
// -------------------------------------------------------------------

class db_user_shop : public ::google::protobuf::Message {
 public:
  db_user_shop();
  virtual ~db_user_shop();

  db_user_shop(const db_user_shop& from);

  inline db_user_shop& operator=(const db_user_shop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_shop& default_instance();

  void Swap(db_user_shop* other);

  // implements Message ----------------------------------------------

  db_user_shop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_shop& from);
  void MergeFrom(const db_user_shop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .user_shop.ESHOPTYPE shop_type = 1;
  inline bool has_shop_type() const;
  inline void clear_shop_type();
  static const int kShopTypeFieldNumber = 1;
  inline ::user_shop_ESHOPTYPE shop_type() const;
  inline void set_shop_type(::user_shop_ESHOPTYPE value);

  // required uint32 last_auto_refresh_time = 2;
  inline bool has_last_auto_refresh_time() const;
  inline void clear_last_auto_refresh_time();
  static const int kLastAutoRefreshTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 last_auto_refresh_time() const;
  inline void set_last_auto_refresh_time(::google::protobuf::uint32 value);

  // required uint32 last_manual_refresh_time = 3;
  inline bool has_last_manual_refresh_time() const;
  inline void clear_last_manual_refresh_time();
  static const int kLastManualRefreshTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 last_manual_refresh_time() const;
  inline void set_last_manual_refresh_time(::google::protobuf::uint32 value);

  // required uint32 last_day_manual_refresh_num = 4;
  inline bool has_last_day_manual_refresh_num() const;
  inline void clear_last_day_manual_refresh_num();
  static const int kLastDayManualRefreshNumFieldNumber = 4;
  inline ::google::protobuf::uint32 last_day_manual_refresh_num() const;
  inline void set_last_day_manual_refresh_num(::google::protobuf::uint32 value);

  // required uint32 random_open_start_timestamp = 5;
  inline bool has_random_open_start_timestamp() const;
  inline void clear_random_open_start_timestamp();
  static const int kRandomOpenStartTimestampFieldNumber = 5;
  inline ::google::protobuf::uint32 random_open_start_timestamp() const;
  inline void set_random_open_start_timestamp(::google::protobuf::uint32 value);

  // required uint32 random_open_end_timestamp = 6;
  inline bool has_random_open_end_timestamp() const;
  inline void clear_random_open_end_timestamp();
  static const int kRandomOpenEndTimestampFieldNumber = 6;
  inline ::google::protobuf::uint32 random_open_end_timestamp() const;
  inline void set_random_open_end_timestamp(::google::protobuf::uint32 value);

  // repeated .db_user_shop_item items = 7;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 7;
  inline const ::db_user_shop_item& items(int index) const;
  inline ::db_user_shop_item* mutable_items(int index);
  inline ::db_user_shop_item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_shop_item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_shop_item >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:db_user_shop)
 private:
  inline void set_has_shop_type();
  inline void clear_has_shop_type();
  inline void set_has_last_auto_refresh_time();
  inline void clear_has_last_auto_refresh_time();
  inline void set_has_last_manual_refresh_time();
  inline void clear_has_last_manual_refresh_time();
  inline void set_has_last_day_manual_refresh_num();
  inline void clear_has_last_day_manual_refresh_num();
  inline void set_has_random_open_start_timestamp();
  inline void clear_has_random_open_start_timestamp();
  inline void set_has_random_open_end_timestamp();
  inline void clear_has_random_open_end_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int shop_type_;
  ::google::protobuf::uint32 last_auto_refresh_time_;
  ::google::protobuf::uint32 last_manual_refresh_time_;
  ::google::protobuf::uint32 last_day_manual_refresh_num_;
  ::google::protobuf::uint32 random_open_start_timestamp_;
  ::google::protobuf::uint32 random_open_end_timestamp_;
  ::google::protobuf::RepeatedPtrField< ::db_user_shop_item > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_shop* default_instance_;
};
// -------------------------------------------------------------------

class db_user_shop_array : public ::google::protobuf::Message {
 public:
  db_user_shop_array();
  virtual ~db_user_shop_array();

  db_user_shop_array(const db_user_shop_array& from);

  inline db_user_shop_array& operator=(const db_user_shop_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_shop_array& default_instance();

  void Swap(db_user_shop_array* other);

  // implements Message ----------------------------------------------

  db_user_shop_array* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_shop_array& from);
  void MergeFrom(const db_user_shop_array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db_user_shop items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::db_user_shop& items(int index) const;
  inline ::db_user_shop* mutable_items(int index);
  inline ::db_user_shop* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_shop >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_shop >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:db_user_shop_array)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::db_user_shop > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_shop_array* default_instance_;
};
// -------------------------------------------------------------------

class db_user_mission_event : public ::google::protobuf::Message {
 public:
  db_user_mission_event();
  virtual ~db_user_mission_event();

  db_user_mission_event(const db_user_mission_event& from);

  inline db_user_mission_event& operator=(const db_user_mission_event& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_mission_event& default_instance();

  void Swap(db_user_mission_event* other);

  // implements Message ----------------------------------------------

  db_user_mission_event* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_mission_event& from);
  void MergeFrom(const db_user_mission_event& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef db_user_mission_event_MISSION_EVENT_TYPE MISSION_EVENT_TYPE;
  static const MISSION_EVENT_TYPE min = db_user_mission_event_MISSION_EVENT_TYPE_min;
  static const MISSION_EVENT_TYPE SKILL_LEVEL_UP = db_user_mission_event_MISSION_EVENT_TYPE_SKILL_LEVEL_UP;
  static const MISSION_EVENT_TYPE RECHARGE = db_user_mission_event_MISSION_EVENT_TYPE_RECHARGE;
  static const MISSION_EVENT_TYPE COMMON_FB_COMPLETE = db_user_mission_event_MISSION_EVENT_TYPE_COMMON_FB_COMPLETE;
  static const MISSION_EVENT_TYPE COMMON_FB_ALL_THROUGH = db_user_mission_event_MISSION_EVENT_TYPE_COMMON_FB_ALL_THROUGH;
  static const MISSION_EVENT_TYPE COMMON_FB_ALL_THROUGH_THREE_STAR = db_user_mission_event_MISSION_EVENT_TYPE_COMMON_FB_ALL_THROUGH_THREE_STAR;
  static const MISSION_EVENT_TYPE EQUIP_LEVEL_UP = db_user_mission_event_MISSION_EVENT_TYPE_EQUIP_LEVEL_UP;
  static const MISSION_EVENT_TYPE RECHARGE_MISSION_MONTH_CARD1 = db_user_mission_event_MISSION_EVENT_TYPE_RECHARGE_MISSION_MONTH_CARD1;
  static const MISSION_EVENT_TYPE GIVE_FRIEND_HEALTH = db_user_mission_event_MISSION_EVENT_TYPE_GIVE_FRIEND_HEALTH;
  static const MISSION_EVENT_TYPE HERO_COLLECT = db_user_mission_event_MISSION_EVENT_TYPE_HERO_COLLECT;
  static const MISSION_EVENT_TYPE HEALTH_MEAL = db_user_mission_event_MISSION_EVENT_TYPE_HEALTH_MEAL;
  static const MISSION_EVENT_TYPE GET_REWARD = db_user_mission_event_MISSION_EVENT_TYPE_GET_REWARD;
  static const MISSION_EVENT_TYPE RECHARGE_MISSION_MONTH_CARD2 = db_user_mission_event_MISSION_EVENT_TYPE_RECHARGE_MISSION_MONTH_CARD2;
  static const MISSION_EVENT_TYPE MISSION_MAIN = db_user_mission_event_MISSION_EVENT_TYPE_MISSION_MAIN;
  static const MISSION_EVENT_TYPE MISSION_FREE = db_user_mission_event_MISSION_EVENT_TYPE_MISSION_FREE;
  static const MISSION_EVENT_TYPE ACTIVITY = db_user_mission_event_MISSION_EVENT_TYPE_ACTIVITY;
  static const MISSION_EVENT_TYPE JI_TAN = db_user_mission_event_MISSION_EVENT_TYPE_JI_TAN;
  static const MISSION_EVENT_TYPE ARENA_CHALLENGE = db_user_mission_event_MISSION_EVENT_TYPE_ARENA_CHALLENGE;
  static const MISSION_EVENT_TYPE SHI_LIAN_TA = db_user_mission_event_MISSION_EVENT_TYPE_SHI_LIAN_TA;
  static const MISSION_EVENT_TYPE CRUSADE = db_user_mission_event_MISSION_EVENT_TYPE_CRUSADE;
  static const MISSION_EVENT_TYPE LEVEL_UP = db_user_mission_event_MISSION_EVENT_TYPE_LEVEL_UP;
  static const MISSION_EVENT_TYPE BUY_GOLD = db_user_mission_event_MISSION_EVENT_TYPE_BUY_GOLD;
  static const MISSION_EVENT_TYPE FB_FAIL = db_user_mission_event_MISSION_EVENT_TYPE_FB_FAIL;
  static const MISSION_EVENT_TYPE COMPLETE_CHAPTER_ALL_FB_THREE_STAR = db_user_mission_event_MISSION_EVENT_TYPE_COMPLETE_CHAPTER_ALL_FB_THREE_STAR;
  static const MISSION_EVENT_TYPE ARENA_RANK_TOP = db_user_mission_event_MISSION_EVENT_TYPE_ARENA_RANK_TOP;
  static const MISSION_EVENT_TYPE COMPLETE_CHAPTER_FB = db_user_mission_event_MISSION_EVENT_TYPE_COMPLETE_CHAPTER_FB;
  static const MISSION_EVENT_TYPE Buy_Health = db_user_mission_event_MISSION_EVENT_TYPE_Buy_Health;
  static const MISSION_EVENT_TYPE Buy_Skill_Point = db_user_mission_event_MISSION_EVENT_TYPE_Buy_Skill_Point;
  static const MISSION_EVENT_TYPE Login = db_user_mission_event_MISSION_EVENT_TYPE_Login;
  static const MISSION_EVENT_TYPE Del_Friend = db_user_mission_event_MISSION_EVENT_TYPE_Del_Friend;
  static const MISSION_EVENT_TYPE Hero_Life = db_user_mission_event_MISSION_EVENT_TYPE_Hero_Life;
  static const MISSION_EVENT_TYPE Crusade_Reset = db_user_mission_event_MISSION_EVENT_TYPE_Crusade_Reset;
  static const MISSION_EVENT_TYPE Crusade_Promote_Reward = db_user_mission_event_MISSION_EVENT_TYPE_Crusade_Promote_Reward;
  static const MISSION_EVENT_TYPE Crusade_Refresh_Buff = db_user_mission_event_MISSION_EVENT_TYPE_Crusade_Refresh_Buff;
  static const MISSION_EVENT_TYPE max = db_user_mission_event_MISSION_EVENT_TYPE_max;
  static inline bool MISSION_EVENT_TYPE_IsValid(int value) {
    return db_user_mission_event_MISSION_EVENT_TYPE_IsValid(value);
  }
  static const MISSION_EVENT_TYPE MISSION_EVENT_TYPE_MIN =
    db_user_mission_event_MISSION_EVENT_TYPE_MISSION_EVENT_TYPE_MIN;
  static const MISSION_EVENT_TYPE MISSION_EVENT_TYPE_MAX =
    db_user_mission_event_MISSION_EVENT_TYPE_MISSION_EVENT_TYPE_MAX;
  static const int MISSION_EVENT_TYPE_ARRAYSIZE =
    db_user_mission_event_MISSION_EVENT_TYPE_MISSION_EVENT_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MISSION_EVENT_TYPE_descriptor() {
    return db_user_mission_event_MISSION_EVENT_TYPE_descriptor();
  }
  static inline const ::std::string& MISSION_EVENT_TYPE_Name(MISSION_EVENT_TYPE value) {
    return db_user_mission_event_MISSION_EVENT_TYPE_Name(value);
  }
  static inline bool MISSION_EVENT_TYPE_Parse(const ::std::string& name,
      MISSION_EVENT_TYPE* value) {
    return db_user_mission_event_MISSION_EVENT_TYPE_Parse(name, value);
  }

  typedef db_user_mission_event_MISSION_EVENT_SUB_TYPE MISSION_EVENT_SUB_TYPE;
  static const MISSION_EVENT_SUB_TYPE MIN = db_user_mission_event_MISSION_EVENT_SUB_TYPE_MIN;
  static const MISSION_EVENT_SUB_TYPE NONE = db_user_mission_event_MISSION_EVENT_SUB_TYPE_NONE;
  static const MISSION_EVENT_SUB_TYPE HERO_QUALITY_GREEN = db_user_mission_event_MISSION_EVENT_SUB_TYPE_HERO_QUALITY_GREEN;
  static const MISSION_EVENT_SUB_TYPE HERO_QUALITY_BLUE = db_user_mission_event_MISSION_EVENT_SUB_TYPE_HERO_QUALITY_BLUE;
  static const MISSION_EVENT_SUB_TYPE HERO_STAR_FOUR = db_user_mission_event_MISSION_EVENT_SUB_TYPE_HERO_STAR_FOUR;
  static const MISSION_EVENT_SUB_TYPE HERO_STAR_THREE = db_user_mission_event_MISSION_EVENT_SUB_TYPE_HERO_STAR_THREE;
  static const MISSION_EVENT_SUB_TYPE PLAYER_LEVEL = db_user_mission_event_MISSION_EVENT_SUB_TYPE_PLAYER_LEVEL;
  static const MISSION_EVENT_SUB_TYPE VIP_LEVEL = db_user_mission_event_MISSION_EVENT_SUB_TYPE_VIP_LEVEL;
  static const MISSION_EVENT_SUB_TYPE HUAXIA = db_user_mission_event_MISSION_EVENT_SUB_TYPE_HUAXIA;
  static const MISSION_EVENT_SUB_TYPE MAX = db_user_mission_event_MISSION_EVENT_SUB_TYPE_MAX;
  static inline bool MISSION_EVENT_SUB_TYPE_IsValid(int value) {
    return db_user_mission_event_MISSION_EVENT_SUB_TYPE_IsValid(value);
  }
  static const MISSION_EVENT_SUB_TYPE MISSION_EVENT_SUB_TYPE_MIN =
    db_user_mission_event_MISSION_EVENT_SUB_TYPE_MISSION_EVENT_SUB_TYPE_MIN;
  static const MISSION_EVENT_SUB_TYPE MISSION_EVENT_SUB_TYPE_MAX =
    db_user_mission_event_MISSION_EVENT_SUB_TYPE_MISSION_EVENT_SUB_TYPE_MAX;
  static const int MISSION_EVENT_SUB_TYPE_ARRAYSIZE =
    db_user_mission_event_MISSION_EVENT_SUB_TYPE_MISSION_EVENT_SUB_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MISSION_EVENT_SUB_TYPE_descriptor() {
    return db_user_mission_event_MISSION_EVENT_SUB_TYPE_descriptor();
  }
  static inline const ::std::string& MISSION_EVENT_SUB_TYPE_Name(MISSION_EVENT_SUB_TYPE value) {
    return db_user_mission_event_MISSION_EVENT_SUB_TYPE_Name(value);
  }
  static inline bool MISSION_EVENT_SUB_TYPE_Parse(const ::std::string& name,
      MISSION_EVENT_SUB_TYPE* value) {
    return db_user_mission_event_MISSION_EVENT_SUB_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .db_user_mission_event.MISSION_EVENT_TYPE mission_event_type = 1;
  inline bool has_mission_event_type() const;
  inline void clear_mission_event_type();
  static const int kMissionEventTypeFieldNumber = 1;
  inline ::db_user_mission_event_MISSION_EVENT_TYPE mission_event_type() const;
  inline void set_mission_event_type(::db_user_mission_event_MISSION_EVENT_TYPE value);

  // required uint32 mission_event_sub_type = 2;
  inline bool has_mission_event_sub_type() const;
  inline void clear_mission_event_sub_type();
  static const int kMissionEventSubTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 mission_event_sub_type() const;
  inline void set_mission_event_sub_type(::google::protobuf::uint32 value);

  // optional uint32 last_update_timestamp = 3;
  inline bool has_last_update_timestamp() const;
  inline void clear_last_update_timestamp();
  static const int kLastUpdateTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 last_update_timestamp() const;
  inline void set_last_update_timestamp(::google::protobuf::uint32 value);

  // optional uint32 last_day_value = 4;
  inline bool has_last_day_value() const;
  inline void clear_last_day_value();
  static const int kLastDayValueFieldNumber = 4;
  inline ::google::protobuf::uint32 last_day_value() const;
  inline void set_last_day_value(::google::protobuf::uint32 value);

  // optional uint32 total_value = 5;
  inline bool has_total_value() const;
  inline void clear_total_value();
  static const int kTotalValueFieldNumber = 5;
  inline ::google::protobuf::uint32 total_value() const;
  inline void set_total_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_mission_event)
 private:
  inline void set_has_mission_event_type();
  inline void clear_has_mission_event_type();
  inline void set_has_mission_event_sub_type();
  inline void clear_has_mission_event_sub_type();
  inline void set_has_last_update_timestamp();
  inline void clear_has_last_update_timestamp();
  inline void set_has_last_day_value();
  inline void clear_has_last_day_value();
  inline void set_has_total_value();
  inline void clear_has_total_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int mission_event_type_;
  ::google::protobuf::uint32 mission_event_sub_type_;
  ::google::protobuf::uint32 last_update_timestamp_;
  ::google::protobuf::uint32 last_day_value_;
  ::google::protobuf::uint32 total_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_mission_event* default_instance_;
};
// -------------------------------------------------------------------

class db_user_arena_log_db_user_arena_log_hero : public ::google::protobuf::Message {
 public:
  db_user_arena_log_db_user_arena_log_hero();
  virtual ~db_user_arena_log_db_user_arena_log_hero();

  db_user_arena_log_db_user_arena_log_hero(const db_user_arena_log_db_user_arena_log_hero& from);

  inline db_user_arena_log_db_user_arena_log_hero& operator=(const db_user_arena_log_db_user_arena_log_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_arena_log_db_user_arena_log_hero& default_instance();

  void Swap(db_user_arena_log_db_user_arena_log_hero* other);

  // implements Message ----------------------------------------------

  db_user_arena_log_db_user_arena_log_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_arena_log_db_user_arena_log_hero& from);
  void MergeFrom(const db_user_arena_log_db_user_arena_log_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required uint32 quality = 2;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 2;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 star = 4;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 4;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_arena_log.db_user_arena_log_hero)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_arena_log_db_user_arena_log_hero* default_instance_;
};
// -------------------------------------------------------------------

class db_user_arena_log : public ::google::protobuf::Message {
 public:
  db_user_arena_log();
  virtual ~db_user_arena_log();

  db_user_arena_log(const db_user_arena_log& from);

  inline db_user_arena_log& operator=(const db_user_arena_log& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_arena_log& default_instance();

  void Swap(db_user_arena_log* other);

  // implements Message ----------------------------------------------

  db_user_arena_log* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_arena_log& from);
  void MergeFrom(const db_user_arena_log& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef db_user_arena_log_db_user_arena_log_hero db_user_arena_log_hero;

  // accessors -------------------------------------------------------

  // required bool is_attacker_win = 1;
  inline bool has_is_attacker_win() const;
  inline void clear_is_attacker_win();
  static const int kIsAttackerWinFieldNumber = 1;
  inline bool is_attacker_win() const;
  inline void set_is_attacker_win(bool value);

  // required uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // required bool is_me_attacker = 3;
  inline bool has_is_me_attacker() const;
  inline void clear_is_me_attacker();
  static const int kIsMeAttackerFieldNumber = 3;
  inline bool is_me_attacker() const;
  inline void set_is_me_attacker(bool value);

  // required uint32 me_rank = 4;
  inline bool has_me_rank() const;
  inline void clear_me_rank();
  static const int kMeRankFieldNumber = 4;
  inline ::google::protobuf::uint32 me_rank() const;
  inline void set_me_rank(::google::protobuf::uint32 value);

  // required uint32 match_user_id = 5;
  inline bool has_match_user_id() const;
  inline void clear_match_user_id();
  static const int kMatchUserIdFieldNumber = 5;
  inline ::google::protobuf::uint32 match_user_id() const;
  inline void set_match_user_id(::google::protobuf::uint32 value);

  // required uint32 match_rank = 6;
  inline bool has_match_rank() const;
  inline void clear_match_rank();
  static const int kMatchRankFieldNumber = 6;
  inline ::google::protobuf::uint32 match_rank() const;
  inline void set_match_rank(::google::protobuf::uint32 value);

  // required uint32 match_power = 7;
  inline bool has_match_power() const;
  inline void clear_match_power();
  static const int kMatchPowerFieldNumber = 7;
  inline ::google::protobuf::uint32 match_power() const;
  inline void set_match_power(::google::protobuf::uint32 value);

  // required string match_name = 8;
  inline bool has_match_name() const;
  inline void clear_match_name();
  static const int kMatchNameFieldNumber = 8;
  inline const ::std::string& match_name() const;
  inline void set_match_name(const ::std::string& value);
  inline void set_match_name(const char* value);
  inline void set_match_name(const char* value, size_t size);
  inline ::std::string* mutable_match_name();
  inline ::std::string* release_match_name();
  inline void set_allocated_match_name(::std::string* match_name);

  // required uint32 match_level = 9;
  inline bool has_match_level() const;
  inline void clear_match_level();
  static const int kMatchLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 match_level() const;
  inline void set_match_level(::google::protobuf::uint32 value);

  // repeated .db_user_arena_log.db_user_arena_log_hero match_heros = 10;
  inline int match_heros_size() const;
  inline void clear_match_heros();
  static const int kMatchHerosFieldNumber = 10;
  inline const ::db_user_arena_log_db_user_arena_log_hero& match_heros(int index) const;
  inline ::db_user_arena_log_db_user_arena_log_hero* mutable_match_heros(int index);
  inline ::db_user_arena_log_db_user_arena_log_hero* add_match_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >&
      match_heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >*
      mutable_match_heros();

  // @@protoc_insertion_point(class_scope:db_user_arena_log)
 private:
  inline void set_has_is_attacker_win();
  inline void clear_has_is_attacker_win();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_is_me_attacker();
  inline void clear_has_is_me_attacker();
  inline void set_has_me_rank();
  inline void clear_has_me_rank();
  inline void set_has_match_user_id();
  inline void clear_has_match_user_id();
  inline void set_has_match_rank();
  inline void clear_has_match_rank();
  inline void set_has_match_power();
  inline void clear_has_match_power();
  inline void set_has_match_name();
  inline void clear_has_match_name();
  inline void set_has_match_level();
  inline void clear_has_match_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 time_;
  bool is_attacker_win_;
  bool is_me_attacker_;
  ::google::protobuf::uint32 me_rank_;
  ::google::protobuf::uint32 match_user_id_;
  ::google::protobuf::uint32 match_rank_;
  ::google::protobuf::uint32 match_power_;
  ::std::string* match_name_;
  ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero > match_heros_;
  ::google::protobuf::uint32 match_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_arena_log* default_instance_;
};
// -------------------------------------------------------------------

class db_user_mission_event_array : public ::google::protobuf::Message {
 public:
  db_user_mission_event_array();
  virtual ~db_user_mission_event_array();

  db_user_mission_event_array(const db_user_mission_event_array& from);

  inline db_user_mission_event_array& operator=(const db_user_mission_event_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_mission_event_array& default_instance();

  void Swap(db_user_mission_event_array* other);

  // implements Message ----------------------------------------------

  db_user_mission_event_array* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_mission_event_array& from);
  void MergeFrom(const db_user_mission_event_array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db_user_mission_event events = 1;
  inline int events_size() const;
  inline void clear_events();
  static const int kEventsFieldNumber = 1;
  inline const ::db_user_mission_event& events(int index) const;
  inline ::db_user_mission_event* mutable_events(int index);
  inline ::db_user_mission_event* add_events();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_mission_event >&
      events() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_mission_event >*
      mutable_events();

  // @@protoc_insertion_point(class_scope:db_user_mission_event_array)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::db_user_mission_event > events_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_mission_event_array* default_instance_;
};
// -------------------------------------------------------------------

class db_user_mission_chain : public ::google::protobuf::Message {
 public:
  db_user_mission_chain();
  virtual ~db_user_mission_chain();

  db_user_mission_chain(const db_user_mission_chain& from);

  inline db_user_mission_chain& operator=(const db_user_mission_chain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_mission_chain& default_instance();

  void Swap(db_user_mission_chain* other);

  // implements Message ----------------------------------------------

  db_user_mission_chain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_mission_chain& from);
  void MergeFrom(const db_user_mission_chain& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mission_chain_id = 1;
  inline bool has_mission_chain_id() const;
  inline void clear_mission_chain_id();
  static const int kMissionChainIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mission_chain_id() const;
  inline void set_mission_chain_id(::google::protobuf::uint32 value);

  // required uint32 last_get_reward_mission_id = 2;
  inline bool has_last_get_reward_mission_id() const;
  inline void clear_last_get_reward_mission_id();
  static const int kLastGetRewardMissionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 last_get_reward_mission_id() const;
  inline void set_last_get_reward_mission_id(::google::protobuf::uint32 value);

  // required uint32 last_get_reward_timestamp = 3;
  inline bool has_last_get_reward_timestamp() const;
  inline void clear_last_get_reward_timestamp();
  static const int kLastGetRewardTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 last_get_reward_timestamp() const;
  inline void set_last_get_reward_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_mission_chain)
 private:
  inline void set_has_mission_chain_id();
  inline void clear_has_mission_chain_id();
  inline void set_has_last_get_reward_mission_id();
  inline void clear_has_last_get_reward_mission_id();
  inline void set_has_last_get_reward_timestamp();
  inline void clear_has_last_get_reward_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mission_chain_id_;
  ::google::protobuf::uint32 last_get_reward_mission_id_;
  ::google::protobuf::uint32 last_get_reward_timestamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_mission_chain* default_instance_;
};
// -------------------------------------------------------------------

class db_user_mission_chain_array : public ::google::protobuf::Message {
 public:
  db_user_mission_chain_array();
  virtual ~db_user_mission_chain_array();

  db_user_mission_chain_array(const db_user_mission_chain_array& from);

  inline db_user_mission_chain_array& operator=(const db_user_mission_chain_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_mission_chain_array& default_instance();

  void Swap(db_user_mission_chain_array* other);

  // implements Message ----------------------------------------------

  db_user_mission_chain_array* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_mission_chain_array& from);
  void MergeFrom(const db_user_mission_chain_array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db_user_mission_chain chains = 1;
  inline int chains_size() const;
  inline void clear_chains();
  static const int kChainsFieldNumber = 1;
  inline const ::db_user_mission_chain& chains(int index) const;
  inline ::db_user_mission_chain* mutable_chains(int index);
  inline ::db_user_mission_chain* add_chains();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_mission_chain >&
      chains() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_mission_chain >*
      mutable_chains();

  // @@protoc_insertion_point(class_scope:db_user_mission_chain_array)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::db_user_mission_chain > chains_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_mission_chain_array* default_instance_;
};
// -------------------------------------------------------------------

class db_user_arena : public ::google::protobuf::Message {
 public:
  db_user_arena();
  virtual ~db_user_arena();

  db_user_arena(const db_user_arena& from);

  inline db_user_arena& operator=(const db_user_arena& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_arena& default_instance();

  void Swap(db_user_arena* other);

  // implements Message ----------------------------------------------

  db_user_arena* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_arena& from);
  void MergeFrom(const db_user_arena& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required uint32 last_challenge_time = 3;
  inline bool has_last_challenge_time() const;
  inline void clear_last_challenge_time();
  static const int kLastChallengeTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 last_challenge_time() const;
  inline void set_last_challenge_time(::google::protobuf::uint32 value);

  // required uint32 last_day_challenge_num = 4;
  inline bool has_last_day_challenge_num() const;
  inline void clear_last_day_challenge_num();
  static const int kLastDayChallengeNumFieldNumber = 4;
  inline ::google::protobuf::uint32 last_day_challenge_num() const;
  inline void set_last_day_challenge_num(::google::protobuf::uint32 value);

  // required uint32 history_highest_rank = 5;
  inline bool has_history_highest_rank() const;
  inline void clear_history_highest_rank();
  static const int kHistoryHighestRankFieldNumber = 5;
  inline ::google::protobuf::uint32 history_highest_rank() const;
  inline void set_history_highest_rank(::google::protobuf::uint32 value);

  // repeated uint32 heros = 6;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 6;
  inline ::google::protobuf::uint32 heros(int index) const;
  inline void set_heros(int index, ::google::protobuf::uint32 value);
  inline void add_heros(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heros() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heros();

  // required uint32 last_time_buy_arena_challenge = 7;
  inline bool has_last_time_buy_arena_challenge() const;
  inline void clear_last_time_buy_arena_challenge();
  static const int kLastTimeBuyArenaChallengeFieldNumber = 7;
  inline ::google::protobuf::uint32 last_time_buy_arena_challenge() const;
  inline void set_last_time_buy_arena_challenge(::google::protobuf::uint32 value);

  // required uint32 last_day_buy_arena_challenge_num = 8;
  inline bool has_last_day_buy_arena_challenge_num() const;
  inline void clear_last_day_buy_arena_challenge_num();
  static const int kLastDayBuyArenaChallengeNumFieldNumber = 8;
  inline ::google::protobuf::uint32 last_day_buy_arena_challenge_num() const;
  inline void set_last_day_buy_arena_challenge_num(::google::protobuf::uint32 value);

  // repeated .db_user_arena_log logs = 9;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 9;
  inline const ::db_user_arena_log& logs(int index) const;
  inline ::db_user_arena_log* mutable_logs(int index);
  inline ::db_user_arena_log* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_arena_log >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_arena_log >*
      mutable_logs();

  // @@protoc_insertion_point(class_scope:db_user_arena)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_last_challenge_time();
  inline void clear_has_last_challenge_time();
  inline void set_has_last_day_challenge_num();
  inline void clear_has_last_day_challenge_num();
  inline void set_has_history_highest_rank();
  inline void clear_has_history_highest_rank();
  inline void set_has_last_time_buy_arena_challenge();
  inline void clear_has_last_time_buy_arena_challenge();
  inline void set_has_last_day_buy_arena_challenge_num();
  inline void clear_has_last_day_buy_arena_challenge_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 last_challenge_time_;
  ::google::protobuf::uint32 last_day_challenge_num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heros_;
  ::google::protobuf::uint32 history_highest_rank_;
  ::google::protobuf::uint32 last_time_buy_arena_challenge_;
  ::google::protobuf::RepeatedPtrField< ::db_user_arena_log > logs_;
  ::google::protobuf::uint32 last_day_buy_arena_challenge_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_arena* default_instance_;
};
// -------------------------------------------------------------------

class db_user_base_info : public ::google::protobuf::Message {
 public:
  db_user_base_info();
  virtual ~db_user_base_info();

  db_user_base_info(const db_user_base_info& from);

  inline db_user_base_info& operator=(const db_user_base_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_base_info& default_instance();

  void Swap(db_user_base_info* other);

  // implements Message ----------------------------------------------

  db_user_base_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_base_info& from);
  void MergeFrom(const db_user_base_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 vip = 5;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 5;
  inline ::google::protobuf::uint32 vip() const;
  inline void set_vip(::google::protobuf::uint32 value);

  // required uint32 diamond = 6;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 6;
  inline ::google::protobuf::uint32 diamond() const;
  inline void set_diamond(::google::protobuf::uint32 value);

  // required uint32 gold = 7;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 7;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // required uint32 health_cur = 8;
  inline bool has_health_cur() const;
  inline void clear_health_cur();
  static const int kHealthCurFieldNumber = 8;
  inline ::google::protobuf::uint32 health_cur() const;
  inline void set_health_cur(::google::protobuf::uint32 value);

  // required uint32 health_last_update_timestamp = 9;
  inline bool has_health_last_update_timestamp() const;
  inline void clear_health_last_update_timestamp();
  static const int kHealthLastUpdateTimestampFieldNumber = 9;
  inline ::google::protobuf::uint32 health_last_update_timestamp() const;
  inline void set_health_last_update_timestamp(::google::protobuf::uint32 value);

  // required uint32 skill_point = 10;
  inline bool has_skill_point() const;
  inline void clear_skill_point();
  static const int kSkillPointFieldNumber = 10;
  inline ::google::protobuf::uint32 skill_point() const;
  inline void set_skill_point(::google::protobuf::uint32 value);

  // required uint32 skill_point_last_update_timestamp = 11;
  inline bool has_skill_point_last_update_timestamp() const;
  inline void clear_skill_point_last_update_timestamp();
  static const int kSkillPointLastUpdateTimestampFieldNumber = 11;
  inline ::google::protobuf::uint32 skill_point_last_update_timestamp() const;
  inline void set_skill_point_last_update_timestamp(::google::protobuf::uint32 value);

  // required uint32 invoke_gold_free_left_num = 12;
  inline bool has_invoke_gold_free_left_num() const;
  inline void clear_invoke_gold_free_left_num();
  static const int kInvokeGoldFreeLeftNumFieldNumber = 12;
  inline ::google::protobuf::uint32 invoke_gold_free_left_num() const;
  inline void set_invoke_gold_free_left_num(::google::protobuf::uint32 value);

  // required uint32 invoke_gold_free_update_timestamp = 13;
  inline bool has_invoke_gold_free_update_timestamp() const;
  inline void clear_invoke_gold_free_update_timestamp();
  static const int kInvokeGoldFreeUpdateTimestampFieldNumber = 13;
  inline ::google::protobuf::uint32 invoke_gold_free_update_timestamp() const;
  inline void set_invoke_gold_free_update_timestamp(::google::protobuf::uint32 value);

  // required uint32 invoke_gold_n_total_num = 14;
  inline bool has_invoke_gold_n_total_num() const;
  inline void clear_invoke_gold_n_total_num();
  static const int kInvokeGoldNTotalNumFieldNumber = 14;
  inline ::google::protobuf::uint32 invoke_gold_n_total_num() const;
  inline void set_invoke_gold_n_total_num(::google::protobuf::uint32 value);

  // required uint32 invoke_diamond_free_left_num = 15;
  inline bool has_invoke_diamond_free_left_num() const;
  inline void clear_invoke_diamond_free_left_num();
  static const int kInvokeDiamondFreeLeftNumFieldNumber = 15;
  inline ::google::protobuf::uint32 invoke_diamond_free_left_num() const;
  inline void set_invoke_diamond_free_left_num(::google::protobuf::uint32 value);

  // required uint32 invoke_diamond_free_update_timestamp = 16;
  inline bool has_invoke_diamond_free_update_timestamp() const;
  inline void clear_invoke_diamond_free_update_timestamp();
  static const int kInvokeDiamondFreeUpdateTimestampFieldNumber = 16;
  inline ::google::protobuf::uint32 invoke_diamond_free_update_timestamp() const;
  inline void set_invoke_diamond_free_update_timestamp(::google::protobuf::uint32 value);

  // required uint32 invoke_diamond_n_total_num = 17;
  inline bool has_invoke_diamond_n_total_num() const;
  inline void clear_invoke_diamond_n_total_num();
  static const int kInvokeDiamondNTotalNumFieldNumber = 17;
  inline ::google::protobuf::uint32 invoke_diamond_n_total_num() const;
  inline void set_invoke_diamond_n_total_num(::google::protobuf::uint32 value);

  // required uint32 head_id = 18;
  inline bool has_head_id() const;
  inline void clear_head_id();
  static const int kHeadIdFieldNumber = 18;
  inline ::google::protobuf::uint32 head_id() const;
  inline void set_head_id(::google::protobuf::uint32 value);

  // required uint32 head_frame_id = 19;
  inline bool has_head_frame_id() const;
  inline void clear_head_frame_id();
  static const int kHeadFrameIdFieldNumber = 19;
  inline ::google::protobuf::uint32 head_frame_id() const;
  inline void set_head_frame_id(::google::protobuf::uint32 value);

  // required uint32 friend_point = 20;
  inline bool has_friend_point() const;
  inline void clear_friend_point();
  static const int kFriendPointFieldNumber = 20;
  inline ::google::protobuf::uint32 friend_point() const;
  inline void set_friend_point(::google::protobuf::uint32 value);

  // required string signature = 21;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 21;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const char* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  inline void set_allocated_signature(::std::string* signature);

  // required uint32 fight_power = 22;
  inline bool has_fight_power() const;
  inline void clear_fight_power();
  static const int kFightPowerFieldNumber = 22;
  inline ::google::protobuf::uint32 fight_power() const;
  inline void set_fight_power(::google::protobuf::uint32 value);

  // required uint32 crusade_point = 23;
  inline bool has_crusade_point() const;
  inline void clear_crusade_point();
  static const int kCrusadePointFieldNumber = 23;
  inline ::google::protobuf::uint32 crusade_point() const;
  inline void set_crusade_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_base_info)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_health_cur();
  inline void clear_has_health_cur();
  inline void set_has_health_last_update_timestamp();
  inline void clear_has_health_last_update_timestamp();
  inline void set_has_skill_point();
  inline void clear_has_skill_point();
  inline void set_has_skill_point_last_update_timestamp();
  inline void clear_has_skill_point_last_update_timestamp();
  inline void set_has_invoke_gold_free_left_num();
  inline void clear_has_invoke_gold_free_left_num();
  inline void set_has_invoke_gold_free_update_timestamp();
  inline void clear_has_invoke_gold_free_update_timestamp();
  inline void set_has_invoke_gold_n_total_num();
  inline void clear_has_invoke_gold_n_total_num();
  inline void set_has_invoke_diamond_free_left_num();
  inline void clear_has_invoke_diamond_free_left_num();
  inline void set_has_invoke_diamond_free_update_timestamp();
  inline void clear_has_invoke_diamond_free_update_timestamp();
  inline void set_has_invoke_diamond_n_total_num();
  inline void clear_has_invoke_diamond_n_total_num();
  inline void set_has_head_id();
  inline void clear_has_head_id();
  inline void set_has_head_frame_id();
  inline void clear_has_head_frame_id();
  inline void set_has_friend_point();
  inline void clear_has_friend_point();
  inline void set_has_signature();
  inline void clear_has_signature();
  inline void set_has_fight_power();
  inline void clear_has_fight_power();
  inline void set_has_crusade_point();
  inline void clear_has_crusade_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 vip_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 health_cur_;
  ::google::protobuf::uint32 health_last_update_timestamp_;
  ::google::protobuf::uint32 skill_point_;
  ::google::protobuf::uint32 skill_point_last_update_timestamp_;
  ::google::protobuf::uint32 invoke_gold_free_left_num_;
  ::google::protobuf::uint32 invoke_gold_free_update_timestamp_;
  ::google::protobuf::uint32 invoke_gold_n_total_num_;
  ::google::protobuf::uint32 invoke_diamond_free_left_num_;
  ::google::protobuf::uint32 invoke_diamond_free_update_timestamp_;
  ::google::protobuf::uint32 invoke_diamond_n_total_num_;
  ::google::protobuf::uint32 head_id_;
  ::google::protobuf::uint32 head_frame_id_;
  ::std::string* signature_;
  ::google::protobuf::uint32 friend_point_;
  ::google::protobuf::uint32 fight_power_;
  ::google::protobuf::uint32 crusade_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_base_info* default_instance_;
};
// -------------------------------------------------------------------

class db_user_sign : public ::google::protobuf::Message {
 public:
  db_user_sign();
  virtual ~db_user_sign();

  db_user_sign(const db_user_sign& from);

  inline db_user_sign& operator=(const db_user_sign& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_sign& default_instance();

  void Swap(db_user_sign* other);

  // implements Message ----------------------------------------------

  db_user_sign* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_sign& from);
  void MergeFrom(const db_user_sign& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sign_1_times = 1;
  inline bool has_sign_1_times() const;
  inline void clear_sign_1_times();
  static const int kSign1TimesFieldNumber = 1;
  inline ::google::protobuf::uint32 sign_1_times() const;
  inline void set_sign_1_times(::google::protobuf::uint32 value);

  // required string sign_n_reward_status = 2;
  inline bool has_sign_n_reward_status() const;
  inline void clear_sign_n_reward_status();
  static const int kSignNRewardStatusFieldNumber = 2;
  inline const ::std::string& sign_n_reward_status() const;
  inline void set_sign_n_reward_status(const ::std::string& value);
  inline void set_sign_n_reward_status(const char* value);
  inline void set_sign_n_reward_status(const char* value, size_t size);
  inline ::std::string* mutable_sign_n_reward_status();
  inline ::std::string* release_sign_n_reward_status();
  inline void set_allocated_sign_n_reward_status(::std::string* sign_n_reward_status);

  // required uint32 last_sign_time = 3;
  inline bool has_last_sign_time() const;
  inline void clear_last_sign_time();
  static const int kLastSignTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 last_sign_time() const;
  inline void set_last_sign_time(::google::protobuf::uint32 value);

  // required uint32 add_signed_times = 4;
  inline bool has_add_signed_times() const;
  inline void clear_add_signed_times();
  static const int kAddSignedTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 add_signed_times() const;
  inline void set_add_signed_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_sign)
 private:
  inline void set_has_sign_1_times();
  inline void clear_has_sign_1_times();
  inline void set_has_sign_n_reward_status();
  inline void clear_has_sign_n_reward_status();
  inline void set_has_last_sign_time();
  inline void clear_has_last_sign_time();
  inline void set_has_add_signed_times();
  inline void clear_has_add_signed_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sign_n_reward_status_;
  ::google::protobuf::uint32 sign_1_times_;
  ::google::protobuf::uint32 last_sign_time_;
  ::google::protobuf::uint32 add_signed_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_sign* default_instance_;
};
// -------------------------------------------------------------------

class db_user_novice_guide_array : public ::google::protobuf::Message {
 public:
  db_user_novice_guide_array();
  virtual ~db_user_novice_guide_array();

  db_user_novice_guide_array(const db_user_novice_guide_array& from);

  inline db_user_novice_guide_array& operator=(const db_user_novice_guide_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_novice_guide_array& default_instance();

  void Swap(db_user_novice_guide_array* other);

  // implements Message ----------------------------------------------

  db_user_novice_guide_array* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_novice_guide_array& from);
  void MergeFrom(const db_user_novice_guide_array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 guide_ids = 14;
  inline int guide_ids_size() const;
  inline void clear_guide_ids();
  static const int kGuideIdsFieldNumber = 14;
  inline ::google::protobuf::uint32 guide_ids(int index) const;
  inline void set_guide_ids(int index, ::google::protobuf::uint32 value);
  inline void add_guide_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      guide_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_guide_ids();

  // @@protoc_insertion_point(class_scope:db_user_novice_guide_array)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > guide_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_novice_guide_array* default_instance_;
};
// -------------------------------------------------------------------

class db_user_friend_friend_info : public ::google::protobuf::Message {
 public:
  db_user_friend_friend_info();
  virtual ~db_user_friend_friend_info();

  db_user_friend_friend_info(const db_user_friend_friend_info& from);

  inline db_user_friend_friend_info& operator=(const db_user_friend_friend_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_friend_friend_info& default_instance();

  void Swap(db_user_friend_friend_info* other);

  // implements Message ----------------------------------------------

  db_user_friend_friend_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_friend_friend_info& from);
  void MergeFrom(const db_user_friend_friend_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .friend_base_info base_info = 1;
  inline bool has_base_info() const;
  inline void clear_base_info();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::friend_base_info& base_info() const;
  inline ::friend_base_info* mutable_base_info();
  inline ::friend_base_info* release_base_info();
  inline void set_allocated_base_info(::friend_base_info* base_info);

  // required uint32 friend_give_timestamp = 2;
  inline bool has_friend_give_timestamp() const;
  inline void clear_friend_give_timestamp();
  static const int kFriendGiveTimestampFieldNumber = 2;
  inline ::google::protobuf::uint32 friend_give_timestamp() const;
  inline void set_friend_give_timestamp(::google::protobuf::uint32 value);

  // required uint32 me_give_timestamp = 3;
  inline bool has_me_give_timestamp() const;
  inline void clear_me_give_timestamp();
  static const int kMeGiveTimestampFieldNumber = 3;
  inline ::google::protobuf::uint32 me_give_timestamp() const;
  inline void set_me_give_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_friend.friend_info)
 private:
  inline void set_has_base_info();
  inline void clear_has_base_info();
  inline void set_has_friend_give_timestamp();
  inline void clear_has_friend_give_timestamp();
  inline void set_has_me_give_timestamp();
  inline void clear_has_me_give_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::friend_base_info* base_info_;
  ::google::protobuf::uint32 friend_give_timestamp_;
  ::google::protobuf::uint32 me_give_timestamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_friend_friend_info* default_instance_;
};
// -------------------------------------------------------------------

class db_user_friend : public ::google::protobuf::Message {
 public:
  db_user_friend();
  virtual ~db_user_friend();

  db_user_friend(const db_user_friend& from);

  inline db_user_friend& operator=(const db_user_friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_friend& default_instance();

  void Swap(db_user_friend* other);

  // implements Message ----------------------------------------------

  db_user_friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_friend& from);
  void MergeFrom(const db_user_friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef db_user_friend_friend_info friend_info;

  // accessors -------------------------------------------------------

  // repeated .db_user_friend.friend_info friends = 1;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 1;
  inline const ::db_user_friend_friend_info& friends(int index) const;
  inline ::db_user_friend_friend_info* mutable_friends(int index);
  inline ::db_user_friend_friend_info* add_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_friend_friend_info >&
      friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_friend_friend_info >*
      mutable_friends();

  // repeated .friend_base_info applies = 2;
  inline int applies_size() const;
  inline void clear_applies();
  static const int kAppliesFieldNumber = 2;
  inline const ::friend_base_info& applies(int index) const;
  inline ::friend_base_info* mutable_applies(int index);
  inline ::friend_base_info* add_applies();
  inline const ::google::protobuf::RepeatedPtrField< ::friend_base_info >&
      applies() const;
  inline ::google::protobuf::RepeatedPtrField< ::friend_base_info >*
      mutable_applies();

  // repeated .friend_base_info confirms = 3;
  inline int confirms_size() const;
  inline void clear_confirms();
  static const int kConfirmsFieldNumber = 3;
  inline const ::friend_base_info& confirms(int index) const;
  inline ::friend_base_info* mutable_confirms(int index);
  inline ::friend_base_info* add_confirms();
  inline const ::google::protobuf::RepeatedPtrField< ::friend_base_info >&
      confirms() const;
  inline ::google::protobuf::RepeatedPtrField< ::friend_base_info >*
      mutable_confirms();

  // repeated .friend_base_info recommends = 4;
  inline int recommends_size() const;
  inline void clear_recommends();
  static const int kRecommendsFieldNumber = 4;
  inline const ::friend_base_info& recommends(int index) const;
  inline ::friend_base_info* mutable_recommends(int index);
  inline ::friend_base_info* add_recommends();
  inline const ::google::protobuf::RepeatedPtrField< ::friend_base_info >&
      recommends() const;
  inline ::google::protobuf::RepeatedPtrField< ::friend_base_info >*
      mutable_recommends();

  // @@protoc_insertion_point(class_scope:db_user_friend)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::db_user_friend_friend_info > friends_;
  ::google::protobuf::RepeatedPtrField< ::friend_base_info > applies_;
  ::google::protobuf::RepeatedPtrField< ::friend_base_info > confirms_;
  ::google::protobuf::RepeatedPtrField< ::friend_base_info > recommends_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_friend* default_instance_;
};
// -------------------------------------------------------------------

class db_user_crusade : public ::google::protobuf::Message {
 public:
  db_user_crusade();
  virtual ~db_user_crusade();

  db_user_crusade(const db_user_crusade& from);

  inline db_user_crusade& operator=(const db_user_crusade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_crusade& default_instance();

  void Swap(db_user_crusade* other);

  // implements Message ----------------------------------------------

  db_user_crusade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_crusade& from);
  void MergeFrom(const db_user_crusade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .user_crusade.crusade_hero me_heros = 1;
  inline int me_heros_size() const;
  inline void clear_me_heros();
  static const int kMeHerosFieldNumber = 1;
  inline const ::user_crusade_crusade_hero& me_heros(int index) const;
  inline ::user_crusade_crusade_hero* mutable_me_heros(int index);
  inline ::user_crusade_crusade_hero* add_me_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >&
      me_heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >*
      mutable_me_heros();

  // repeated .user_crusade.crusade_hero enemy_heros = 2;
  inline int enemy_heros_size() const;
  inline void clear_enemy_heros();
  static const int kEnemyHerosFieldNumber = 2;
  inline const ::user_crusade_crusade_hero& enemy_heros(int index) const;
  inline ::user_crusade_crusade_hero* mutable_enemy_heros(int index);
  inline ::user_crusade_crusade_hero* add_enemy_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >&
      enemy_heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >*
      mutable_enemy_heros();

  // required uint32 wave = 3;
  inline bool has_wave() const;
  inline void clear_wave();
  static const int kWaveFieldNumber = 3;
  inline ::google::protobuf::uint32 wave() const;
  inline void set_wave(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_crusade)
 private:
  inline void set_has_wave();
  inline void clear_has_wave();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero > me_heros_;
  ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero > enemy_heros_;
  ::google::protobuf::uint32 wave_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_crusade* default_instance_;
};
// -------------------------------------------------------------------

class db_user_guild_info_struct_apply : public ::google::protobuf::Message {
 public:
  db_user_guild_info_struct_apply();
  virtual ~db_user_guild_info_struct_apply();

  db_user_guild_info_struct_apply(const db_user_guild_info_struct_apply& from);

  inline db_user_guild_info_struct_apply& operator=(const db_user_guild_info_struct_apply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_guild_info_struct_apply& default_instance();

  void Swap(db_user_guild_info_struct_apply* other);

  // implements Message ----------------------------------------------

  db_user_guild_info_struct_apply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_guild_info_struct_apply& from);
  void MergeFrom(const db_user_guild_info_struct_apply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // required uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_guild_info.struct_apply)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_guild_info_struct_apply* default_instance_;
};
// -------------------------------------------------------------------

class db_user_guild_info_struct_boss_info_struct_dead_hero : public ::google::protobuf::Message {
 public:
  db_user_guild_info_struct_boss_info_struct_dead_hero();
  virtual ~db_user_guild_info_struct_boss_info_struct_dead_hero();

  db_user_guild_info_struct_boss_info_struct_dead_hero(const db_user_guild_info_struct_boss_info_struct_dead_hero& from);

  inline db_user_guild_info_struct_boss_info_struct_dead_hero& operator=(const db_user_guild_info_struct_boss_info_struct_dead_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_guild_info_struct_boss_info_struct_dead_hero& default_instance();

  void Swap(db_user_guild_info_struct_boss_info_struct_dead_hero* other);

  // implements Message ----------------------------------------------

  db_user_guild_info_struct_boss_info_struct_dead_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_guild_info_struct_boss_info_struct_dead_hero& from);
  void MergeFrom(const db_user_guild_info_struct_boss_info_struct_dead_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required uint32 dead_time = 2;
  inline bool has_dead_time() const;
  inline void clear_dead_time();
  static const int kDeadTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 dead_time() const;
  inline void set_dead_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_user_guild_info.struct_boss_info.struct_dead_hero)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_dead_time();
  inline void clear_has_dead_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 dead_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_guild_info_struct_boss_info_struct_dead_hero* default_instance_;
};
// -------------------------------------------------------------------

class db_user_guild_info_struct_boss_info : public ::google::protobuf::Message {
 public:
  db_user_guild_info_struct_boss_info();
  virtual ~db_user_guild_info_struct_boss_info();

  db_user_guild_info_struct_boss_info(const db_user_guild_info_struct_boss_info& from);

  inline db_user_guild_info_struct_boss_info& operator=(const db_user_guild_info_struct_boss_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_guild_info_struct_boss_info& default_instance();

  void Swap(db_user_guild_info_struct_boss_info* other);

  // implements Message ----------------------------------------------

  db_user_guild_info_struct_boss_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_guild_info_struct_boss_info& from);
  void MergeFrom(const db_user_guild_info_struct_boss_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef db_user_guild_info_struct_boss_info_struct_dead_hero struct_dead_hero;

  // accessors -------------------------------------------------------

  // required uint32 boss_position = 1;
  inline bool has_boss_position() const;
  inline void clear_boss_position();
  static const int kBossPositionFieldNumber = 1;
  inline ::google::protobuf::uint32 boss_position() const;
  inline void set_boss_position(::google::protobuf::uint32 value);

  // required uint32 boss_lose_hp = 2;
  inline bool has_boss_lose_hp() const;
  inline void clear_boss_lose_hp();
  static const int kBossLoseHpFieldNumber = 2;
  inline ::google::protobuf::uint32 boss_lose_hp() const;
  inline void set_boss_lose_hp(::google::protobuf::uint32 value);

  // required uint32 last_reset_time = 3;
  inline bool has_last_reset_time() const;
  inline void clear_last_reset_time();
  static const int kLastResetTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 last_reset_time() const;
  inline void set_last_reset_time(::google::protobuf::uint32 value);

  // required uint32 last_day_reset_num = 4;
  inline bool has_last_day_reset_num() const;
  inline void clear_last_day_reset_num();
  static const int kLastDayResetNumFieldNumber = 4;
  inline ::google::protobuf::uint32 last_day_reset_num() const;
  inline void set_last_day_reset_num(::google::protobuf::uint32 value);

  // repeated .db_user_guild_info.struct_boss_info.struct_dead_hero dead_heros = 5;
  inline int dead_heros_size() const;
  inline void clear_dead_heros();
  static const int kDeadHerosFieldNumber = 5;
  inline const ::db_user_guild_info_struct_boss_info_struct_dead_hero& dead_heros(int index) const;
  inline ::db_user_guild_info_struct_boss_info_struct_dead_hero* mutable_dead_heros(int index);
  inline ::db_user_guild_info_struct_boss_info_struct_dead_hero* add_dead_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_boss_info_struct_dead_hero >&
      dead_heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_boss_info_struct_dead_hero >*
      mutable_dead_heros();

  // @@protoc_insertion_point(class_scope:db_user_guild_info.struct_boss_info)
 private:
  inline void set_has_boss_position();
  inline void clear_has_boss_position();
  inline void set_has_boss_lose_hp();
  inline void clear_has_boss_lose_hp();
  inline void set_has_last_reset_time();
  inline void clear_has_last_reset_time();
  inline void set_has_last_day_reset_num();
  inline void clear_has_last_day_reset_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 boss_position_;
  ::google::protobuf::uint32 boss_lose_hp_;
  ::google::protobuf::uint32 last_reset_time_;
  ::google::protobuf::uint32 last_day_reset_num_;
  ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_boss_info_struct_dead_hero > dead_heros_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_guild_info_struct_boss_info* default_instance_;
};
// -------------------------------------------------------------------

class db_user_guild_info : public ::google::protobuf::Message {
 public:
  db_user_guild_info();
  virtual ~db_user_guild_info();

  db_user_guild_info(const db_user_guild_info& from);

  inline db_user_guild_info& operator=(const db_user_guild_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_guild_info& default_instance();

  void Swap(db_user_guild_info* other);

  // implements Message ----------------------------------------------

  db_user_guild_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_guild_info& from);
  void MergeFrom(const db_user_guild_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef db_user_guild_info_struct_apply struct_apply;
  typedef db_user_guild_info_struct_boss_info struct_boss_info;

  // accessors -------------------------------------------------------

  // required uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // required .e_guild_position position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::e_guild_position position() const;
  inline void set_position(::e_guild_position value);

  // required uint32 leave_time = 3;
  inline bool has_leave_time() const;
  inline void clear_leave_time();
  static const int kLeaveTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 leave_time() const;
  inline void set_leave_time(::google::protobuf::uint32 value);

  // required uint32 coin = 4;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 4;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // repeated .db_user_guild_info.struct_apply applys = 5;
  inline int applys_size() const;
  inline void clear_applys();
  static const int kApplysFieldNumber = 5;
  inline const ::db_user_guild_info_struct_apply& applys(int index) const;
  inline ::db_user_guild_info_struct_apply* mutable_applys(int index);
  inline ::db_user_guild_info_struct_apply* add_applys();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_apply >&
      applys() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_apply >*
      mutable_applys();

  // repeated .db_user_guild_info.struct_boss_info bosses = 6;
  inline int bosses_size() const;
  inline void clear_bosses();
  static const int kBossesFieldNumber = 6;
  inline const ::db_user_guild_info_struct_boss_info& bosses(int index) const;
  inline ::db_user_guild_info_struct_boss_info* mutable_bosses(int index);
  inline ::db_user_guild_info_struct_boss_info* add_bosses();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_boss_info >&
      bosses() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_boss_info >*
      mutable_bosses();

  // @@protoc_insertion_point(class_scope:db_user_guild_info)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_leave_time();
  inline void clear_has_leave_time();
  inline void set_has_coin();
  inline void clear_has_coin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 guild_id_;
  int position_;
  ::google::protobuf::uint32 leave_time_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_apply > applys_;
  ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_boss_info > bosses_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_guild_info* default_instance_;
};
// -------------------------------------------------------------------

class db_user_info : public ::google::protobuf::Message {
 public:
  db_user_info();
  virtual ~db_user_info();

  db_user_info(const db_user_info& from);

  inline db_user_info& operator=(const db_user_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const db_user_info& default_instance();

  void Swap(db_user_info* other);

  // implements Message ----------------------------------------------

  db_user_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const db_user_info& from);
  void MergeFrom(const db_user_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db_user_base_info user_base_info = 1;
  inline bool has_user_base_info() const;
  inline void clear_user_base_info();
  static const int kUserBaseInfoFieldNumber = 1;
  inline const ::db_user_base_info& user_base_info() const;
  inline ::db_user_base_info* mutable_user_base_info();
  inline ::db_user_base_info* release_user_base_info();
  inline void set_allocated_user_base_info(::db_user_base_info* user_base_info);

  // optional .db_user_sub_task_array sub_tasks = 2;
  inline bool has_sub_tasks() const;
  inline void clear_sub_tasks();
  static const int kSubTasksFieldNumber = 2;
  inline const ::db_user_sub_task_array& sub_tasks() const;
  inline ::db_user_sub_task_array* mutable_sub_tasks();
  inline ::db_user_sub_task_array* release_sub_tasks();
  inline void set_allocated_sub_tasks(::db_user_sub_task_array* sub_tasks);

  // optional .db_user_hero_array heros = 3;
  inline bool has_heros() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 3;
  inline const ::db_user_hero_array& heros() const;
  inline ::db_user_hero_array* mutable_heros();
  inline ::db_user_hero_array* release_heros();
  inline void set_allocated_heros(::db_user_hero_array* heros);

  // optional .struct_game_element_array items = 4;
  inline bool has_items() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::struct_game_element_array& items() const;
  inline ::struct_game_element_array* mutable_items();
  inline ::struct_game_element_array* release_items();
  inline void set_allocated_items(::struct_game_element_array* items);

  // optional .db_user_mail_array mails_received = 5;
  inline bool has_mails_received() const;
  inline void clear_mails_received();
  static const int kMailsReceivedFieldNumber = 5;
  inline const ::db_user_mail_array& mails_received() const;
  inline ::db_user_mail_array* mutable_mails_received();
  inline ::db_user_mail_array* release_mails_received();
  inline void set_allocated_mails_received(::db_user_mail_array* mails_received);

  // optional .db_user_mail_array mails_unreceived = 6;
  inline bool has_mails_unreceived() const;
  inline void clear_mails_unreceived();
  static const int kMailsUnreceivedFieldNumber = 6;
  inline const ::db_user_mail_array& mails_unreceived() const;
  inline ::db_user_mail_array* mutable_mails_unreceived();
  inline ::db_user_mail_array* release_mails_unreceived();
  inline void set_allocated_mails_unreceived(::db_user_mail_array* mails_unreceived);

  // optional .db_user_shop_array shops = 7;
  inline bool has_shops() const;
  inline void clear_shops();
  static const int kShopsFieldNumber = 7;
  inline const ::db_user_shop_array& shops() const;
  inline ::db_user_shop_array* mutable_shops();
  inline ::db_user_shop_array* release_shops();
  inline void set_allocated_shops(::db_user_shop_array* shops);

  // optional .db_user_shop_buy_array buy_items = 8;
  inline bool has_buy_items() const;
  inline void clear_buy_items();
  static const int kBuyItemsFieldNumber = 8;
  inline const ::db_user_shop_buy_array& buy_items() const;
  inline ::db_user_shop_buy_array* mutable_buy_items();
  inline ::db_user_shop_buy_array* release_buy_items();
  inline void set_allocated_buy_items(::db_user_shop_buy_array* buy_items);

  // optional .db_user_mission_event_array mission_events = 10;
  inline bool has_mission_events() const;
  inline void clear_mission_events();
  static const int kMissionEventsFieldNumber = 10;
  inline const ::db_user_mission_event_array& mission_events() const;
  inline ::db_user_mission_event_array* mutable_mission_events();
  inline ::db_user_mission_event_array* release_mission_events();
  inline void set_allocated_mission_events(::db_user_mission_event_array* mission_events);

  // optional .db_user_mission_chain_array mission_chains = 11;
  inline bool has_mission_chains() const;
  inline void clear_mission_chains();
  static const int kMissionChainsFieldNumber = 11;
  inline const ::db_user_mission_chain_array& mission_chains() const;
  inline ::db_user_mission_chain_array* mutable_mission_chains();
  inline ::db_user_mission_chain_array* release_mission_chains();
  inline void set_allocated_mission_chains(::db_user_mission_chain_array* mission_chains);

  // optional .db_user_arena arena = 12;
  inline bool has_arena() const;
  inline void clear_arena();
  static const int kArenaFieldNumber = 12;
  inline const ::db_user_arena& arena() const;
  inline ::db_user_arena* mutable_arena();
  inline ::db_user_arena* release_arena();
  inline void set_allocated_arena(::db_user_arena* arena);

  // optional .db_user_sign sign = 13;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 13;
  inline const ::db_user_sign& sign() const;
  inline ::db_user_sign* mutable_sign();
  inline ::db_user_sign* release_sign();
  inline void set_allocated_sign(::db_user_sign* sign);

  // optional .db_user_novice_guide_array guide = 14;
  inline bool has_guide() const;
  inline void clear_guide();
  static const int kGuideFieldNumber = 14;
  inline const ::db_user_novice_guide_array& guide() const;
  inline ::db_user_novice_guide_array* mutable_guide();
  inline ::db_user_novice_guide_array* release_guide();
  inline void set_allocated_guide(::db_user_novice_guide_array* guide);

  // optional .db_user_crusade user_crusade = 15;
  inline bool has_user_crusade() const;
  inline void clear_user_crusade();
  static const int kUserCrusadeFieldNumber = 15;
  inline const ::db_user_crusade& user_crusade() const;
  inline ::db_user_crusade* mutable_user_crusade();
  inline ::db_user_crusade* release_user_crusade();
  inline void set_allocated_user_crusade(::db_user_crusade* user_crusade);

  // optional .db_user_friend user_friend = 16;
  inline bool has_user_friend() const;
  inline void clear_user_friend();
  static const int kUserFriendFieldNumber = 16;
  inline const ::db_user_friend& user_friend() const;
  inline ::db_user_friend* mutable_user_friend();
  inline ::db_user_friend* release_user_friend();
  inline void set_allocated_user_friend(::db_user_friend* user_friend);

  // optional .db_user_guild_info guild = 17;
  inline bool has_guild() const;
  inline void clear_guild();
  static const int kGuildFieldNumber = 17;
  inline const ::db_user_guild_info& guild() const;
  inline ::db_user_guild_info* mutable_guild();
  inline ::db_user_guild_info* release_guild();
  inline void set_allocated_guild(::db_user_guild_info* guild);

  // @@protoc_insertion_point(class_scope:db_user_info)
 private:
  inline void set_has_user_base_info();
  inline void clear_has_user_base_info();
  inline void set_has_sub_tasks();
  inline void clear_has_sub_tasks();
  inline void set_has_heros();
  inline void clear_has_heros();
  inline void set_has_items();
  inline void clear_has_items();
  inline void set_has_mails_received();
  inline void clear_has_mails_received();
  inline void set_has_mails_unreceived();
  inline void clear_has_mails_unreceived();
  inline void set_has_shops();
  inline void clear_has_shops();
  inline void set_has_buy_items();
  inline void clear_has_buy_items();
  inline void set_has_mission_events();
  inline void clear_has_mission_events();
  inline void set_has_mission_chains();
  inline void clear_has_mission_chains();
  inline void set_has_arena();
  inline void clear_has_arena();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_guide();
  inline void clear_has_guide();
  inline void set_has_user_crusade();
  inline void clear_has_user_crusade();
  inline void set_has_user_friend();
  inline void clear_has_user_friend();
  inline void set_has_guild();
  inline void clear_has_guild();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::db_user_base_info* user_base_info_;
  ::db_user_sub_task_array* sub_tasks_;
  ::db_user_hero_array* heros_;
  ::struct_game_element_array* items_;
  ::db_user_mail_array* mails_received_;
  ::db_user_mail_array* mails_unreceived_;
  ::db_user_shop_array* shops_;
  ::db_user_shop_buy_array* buy_items_;
  ::db_user_mission_event_array* mission_events_;
  ::db_user_mission_chain_array* mission_chains_;
  ::db_user_arena* arena_;
  ::db_user_sign* sign_;
  ::db_user_novice_guide_array* guide_;
  ::db_user_crusade* user_crusade_;
  ::db_user_friend* user_friend_;
  ::db_user_guild_info* guild_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static db_user_info* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_req : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_req();
  virtual ~gs_dbs_user_info_req();

  gs_dbs_user_info_req(const gs_dbs_user_info_req& from);

  inline gs_dbs_user_info_req& operator=(const gs_dbs_user_info_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_req& default_instance();

  void Swap(gs_dbs_user_info_req* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_req& from);
  void MergeFrom(const gs_dbs_user_info_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required bytes user_connect_id = 2;
  inline bool has_user_connect_id() const;
  inline void clear_user_connect_id();
  static const int kUserConnectIdFieldNumber = 2;
  inline const ::std::string& user_connect_id() const;
  inline void set_user_connect_id(const ::std::string& value);
  inline void set_user_connect_id(const char* value);
  inline void set_user_connect_id(const void* value, size_t size);
  inline ::std::string* mutable_user_connect_id();
  inline ::std::string* release_user_connect_id();
  inline void set_allocated_user_connect_id(::std::string* user_connect_id);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_req)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_connect_id();
  inline void clear_has_user_connect_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* user_connect_id_;
  ::google::protobuf::uint32 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_req* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_user_info_res : public ::google::protobuf::Message {
 public:
  dbs_gs_user_info_res();
  virtual ~dbs_gs_user_info_res();

  dbs_gs_user_info_res(const dbs_gs_user_info_res& from);

  inline dbs_gs_user_info_res& operator=(const dbs_gs_user_info_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_user_info_res& default_instance();

  void Swap(dbs_gs_user_info_res* other);

  // implements Message ----------------------------------------------

  dbs_gs_user_info_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_user_info_res& from);
  void MergeFrom(const dbs_gs_user_info_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 error_code() const;
  inline void set_error_code(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required bytes user_connect_id = 3;
  inline bool has_user_connect_id() const;
  inline void clear_user_connect_id();
  static const int kUserConnectIdFieldNumber = 3;
  inline const ::std::string& user_connect_id() const;
  inline void set_user_connect_id(const ::std::string& value);
  inline void set_user_connect_id(const char* value);
  inline void set_user_connect_id(const void* value, size_t size);
  inline ::std::string* mutable_user_connect_id();
  inline ::std::string* release_user_connect_id();
  inline void set_allocated_user_connect_id(::std::string* user_connect_id);

  // optional .db_user_info user_info = 4;
  inline bool has_user_info() const;
  inline void clear_user_info();
  static const int kUserInfoFieldNumber = 4;
  inline const ::db_user_info& user_info() const;
  inline ::db_user_info* mutable_user_info();
  inline ::db_user_info* release_user_info();
  inline void set_allocated_user_info(::db_user_info* user_info);

  // @@protoc_insertion_point(class_scope:dbs_gs_user_info_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_connect_id();
  inline void clear_has_user_connect_id();
  inline void set_has_user_info();
  inline void clear_has_user_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_code_;
  ::google::protobuf::uint32 user_id_;
  ::std::string* user_connect_id_;
  ::db_user_info* user_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_user_info_res* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_new_create_req : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_new_create_req();
  virtual ~gs_dbs_user_info_new_create_req();

  gs_dbs_user_info_new_create_req(const gs_dbs_user_info_new_create_req& from);

  inline gs_dbs_user_info_new_create_req& operator=(const gs_dbs_user_info_new_create_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_new_create_req& default_instance();

  void Swap(gs_dbs_user_info_new_create_req* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_new_create_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_new_create_req& from);
  void MergeFrom(const gs_dbs_user_info_new_create_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db_user_info user_info = 1;
  inline bool has_user_info() const;
  inline void clear_user_info();
  static const int kUserInfoFieldNumber = 1;
  inline const ::db_user_info& user_info() const;
  inline ::db_user_info* mutable_user_info();
  inline ::db_user_info* release_user_info();
  inline void set_allocated_user_info(::db_user_info* user_info);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_new_create_req)
 private:
  inline void set_has_user_info();
  inline void clear_has_user_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::db_user_info* user_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_new_create_req* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_user_info_new_create_res : public ::google::protobuf::Message {
 public:
  dbs_gs_user_info_new_create_res();
  virtual ~dbs_gs_user_info_new_create_res();

  dbs_gs_user_info_new_create_res(const dbs_gs_user_info_new_create_res& from);

  inline dbs_gs_user_info_new_create_res& operator=(const dbs_gs_user_info_new_create_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_user_info_new_create_res& default_instance();

  void Swap(dbs_gs_user_info_new_create_res* other);

  // implements Message ----------------------------------------------

  dbs_gs_user_info_new_create_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_user_info_new_create_res& from);
  void MergeFrom(const dbs_gs_user_info_new_create_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 error_code() const;
  inline void set_error_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dbs_gs_user_info_new_create_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_user_info_new_create_res* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_base_info : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_base_info();
  virtual ~gs_dbs_user_info_op_req_struct_op_base_info();

  gs_dbs_user_info_op_req_struct_op_base_info(const gs_dbs_user_info_op_req_struct_op_base_info& from);

  inline gs_dbs_user_info_op_req_struct_op_base_info& operator=(const gs_dbs_user_info_op_req_struct_op_base_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_base_info& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_base_info* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_base_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_base_info& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_base_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_info_op_req.EOPType op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_info_op_req_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_user_info_op_req_EOPType value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 vip = 5;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 5;
  inline ::google::protobuf::uint32 vip() const;
  inline void set_vip(::google::protobuf::uint32 value);

  // optional uint32 diamond = 6;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 6;
  inline ::google::protobuf::uint32 diamond() const;
  inline void set_diamond(::google::protobuf::uint32 value);

  // optional uint32 gold = 7;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 7;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 health_cur = 8;
  inline bool has_health_cur() const;
  inline void clear_health_cur();
  static const int kHealthCurFieldNumber = 8;
  inline ::google::protobuf::uint32 health_cur() const;
  inline void set_health_cur(::google::protobuf::uint32 value);

  // optional uint32 health_last_update_timestamp = 9;
  inline bool has_health_last_update_timestamp() const;
  inline void clear_health_last_update_timestamp();
  static const int kHealthLastUpdateTimestampFieldNumber = 9;
  inline ::google::protobuf::uint32 health_last_update_timestamp() const;
  inline void set_health_last_update_timestamp(::google::protobuf::uint32 value);

  // optional uint32 skill_point = 10;
  inline bool has_skill_point() const;
  inline void clear_skill_point();
  static const int kSkillPointFieldNumber = 10;
  inline ::google::protobuf::uint32 skill_point() const;
  inline void set_skill_point(::google::protobuf::uint32 value);

  // optional uint32 skill_point_update_timestamp = 11;
  inline bool has_skill_point_update_timestamp() const;
  inline void clear_skill_point_update_timestamp();
  static const int kSkillPointUpdateTimestampFieldNumber = 11;
  inline ::google::protobuf::uint32 skill_point_update_timestamp() const;
  inline void set_skill_point_update_timestamp(::google::protobuf::uint32 value);

  // optional uint32 invoke_gold_free_left_num = 12;
  inline bool has_invoke_gold_free_left_num() const;
  inline void clear_invoke_gold_free_left_num();
  static const int kInvokeGoldFreeLeftNumFieldNumber = 12;
  inline ::google::protobuf::uint32 invoke_gold_free_left_num() const;
  inline void set_invoke_gold_free_left_num(::google::protobuf::uint32 value);

  // optional uint32 invoke_gold_free_update_timestamp = 13;
  inline bool has_invoke_gold_free_update_timestamp() const;
  inline void clear_invoke_gold_free_update_timestamp();
  static const int kInvokeGoldFreeUpdateTimestampFieldNumber = 13;
  inline ::google::protobuf::uint32 invoke_gold_free_update_timestamp() const;
  inline void set_invoke_gold_free_update_timestamp(::google::protobuf::uint32 value);

  // optional uint32 invoke_gold_n_total_num = 14;
  inline bool has_invoke_gold_n_total_num() const;
  inline void clear_invoke_gold_n_total_num();
  static const int kInvokeGoldNTotalNumFieldNumber = 14;
  inline ::google::protobuf::uint32 invoke_gold_n_total_num() const;
  inline void set_invoke_gold_n_total_num(::google::protobuf::uint32 value);

  // optional uint32 invoke_diamond_free_left_num = 15;
  inline bool has_invoke_diamond_free_left_num() const;
  inline void clear_invoke_diamond_free_left_num();
  static const int kInvokeDiamondFreeLeftNumFieldNumber = 15;
  inline ::google::protobuf::uint32 invoke_diamond_free_left_num() const;
  inline void set_invoke_diamond_free_left_num(::google::protobuf::uint32 value);

  // optional uint32 invoke_diamond_free_update_timestamp = 16;
  inline bool has_invoke_diamond_free_update_timestamp() const;
  inline void clear_invoke_diamond_free_update_timestamp();
  static const int kInvokeDiamondFreeUpdateTimestampFieldNumber = 16;
  inline ::google::protobuf::uint32 invoke_diamond_free_update_timestamp() const;
  inline void set_invoke_diamond_free_update_timestamp(::google::protobuf::uint32 value);

  // optional uint32 invoke_diamond_n_total_num = 17;
  inline bool has_invoke_diamond_n_total_num() const;
  inline void clear_invoke_diamond_n_total_num();
  static const int kInvokeDiamondNTotalNumFieldNumber = 17;
  inline ::google::protobuf::uint32 invoke_diamond_n_total_num() const;
  inline void set_invoke_diamond_n_total_num(::google::protobuf::uint32 value);

  // optional uint32 head_id = 18;
  inline bool has_head_id() const;
  inline void clear_head_id();
  static const int kHeadIdFieldNumber = 18;
  inline ::google::protobuf::uint32 head_id() const;
  inline void set_head_id(::google::protobuf::uint32 value);

  // optional uint32 head_frame_id = 19;
  inline bool has_head_frame_id() const;
  inline void clear_head_frame_id();
  static const int kHeadFrameIdFieldNumber = 19;
  inline ::google::protobuf::uint32 head_frame_id() const;
  inline void set_head_frame_id(::google::protobuf::uint32 value);

  // optional uint32 friend_point = 20;
  inline bool has_friend_point() const;
  inline void clear_friend_point();
  static const int kFriendPointFieldNumber = 20;
  inline ::google::protobuf::uint32 friend_point() const;
  inline void set_friend_point(::google::protobuf::uint32 value);

  // optional string signature = 21;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 21;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const char* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  inline void set_allocated_signature(::std::string* signature);

  // optional uint32 fight_power = 22;
  inline bool has_fight_power() const;
  inline void clear_fight_power();
  static const int kFightPowerFieldNumber = 22;
  inline ::google::protobuf::uint32 fight_power() const;
  inline void set_fight_power(::google::protobuf::uint32 value);

  // optional uint32 crusade_point = 23;
  inline bool has_crusade_point() const;
  inline void clear_crusade_point();
  static const int kCrusadePointFieldNumber = 23;
  inline ::google::protobuf::uint32 crusade_point() const;
  inline void set_crusade_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_base_info)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_health_cur();
  inline void clear_has_health_cur();
  inline void set_has_health_last_update_timestamp();
  inline void clear_has_health_last_update_timestamp();
  inline void set_has_skill_point();
  inline void clear_has_skill_point();
  inline void set_has_skill_point_update_timestamp();
  inline void clear_has_skill_point_update_timestamp();
  inline void set_has_invoke_gold_free_left_num();
  inline void clear_has_invoke_gold_free_left_num();
  inline void set_has_invoke_gold_free_update_timestamp();
  inline void clear_has_invoke_gold_free_update_timestamp();
  inline void set_has_invoke_gold_n_total_num();
  inline void clear_has_invoke_gold_n_total_num();
  inline void set_has_invoke_diamond_free_left_num();
  inline void clear_has_invoke_diamond_free_left_num();
  inline void set_has_invoke_diamond_free_update_timestamp();
  inline void clear_has_invoke_diamond_free_update_timestamp();
  inline void set_has_invoke_diamond_n_total_num();
  inline void clear_has_invoke_diamond_n_total_num();
  inline void set_has_head_id();
  inline void clear_has_head_id();
  inline void set_has_head_frame_id();
  inline void clear_has_head_frame_id();
  inline void set_has_friend_point();
  inline void clear_has_friend_point();
  inline void set_has_signature();
  inline void clear_has_signature();
  inline void set_has_fight_power();
  inline void clear_has_fight_power();
  inline void set_has_crusade_point();
  inline void clear_has_crusade_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  int op_type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 vip_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 health_cur_;
  ::google::protobuf::uint32 health_last_update_timestamp_;
  ::google::protobuf::uint32 skill_point_;
  ::google::protobuf::uint32 skill_point_update_timestamp_;
  ::google::protobuf::uint32 invoke_gold_free_left_num_;
  ::google::protobuf::uint32 invoke_gold_free_update_timestamp_;
  ::google::protobuf::uint32 invoke_gold_n_total_num_;
  ::google::protobuf::uint32 invoke_diamond_free_left_num_;
  ::google::protobuf::uint32 invoke_diamond_free_update_timestamp_;
  ::google::protobuf::uint32 invoke_diamond_n_total_num_;
  ::google::protobuf::uint32 head_id_;
  ::google::protobuf::uint32 head_frame_id_;
  ::std::string* signature_;
  ::google::protobuf::uint32 friend_point_;
  ::google::protobuf::uint32 fight_power_;
  ::google::protobuf::uint32 crusade_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_base_info* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_sub_task : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_sub_task();
  virtual ~gs_dbs_user_info_op_req_struct_op_sub_task();

  gs_dbs_user_info_op_req_struct_op_sub_task(const gs_dbs_user_info_op_req_struct_op_sub_task& from);

  inline gs_dbs_user_info_op_req_struct_op_sub_task& operator=(const gs_dbs_user_info_op_req_struct_op_sub_task& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_sub_task& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_sub_task* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_sub_task* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_sub_task& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_sub_task& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_info_op_req.EOPType op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_info_op_req_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_user_info_op_req_EOPType value);

  // required uint32 sub_task_id = 2;
  inline bool has_sub_task_id() const;
  inline void clear_sub_task_id();
  static const int kSubTaskIdFieldNumber = 2;
  inline ::google::protobuf::uint32 sub_task_id() const;
  inline void set_sub_task_id(::google::protobuf::uint32 value);

  // optional uint32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // optional uint32 last_enter_timestamp = 4;
  inline bool has_last_enter_timestamp() const;
  inline void clear_last_enter_timestamp();
  static const int kLastEnterTimestampFieldNumber = 4;
  inline ::google::protobuf::uint32 last_enter_timestamp() const;
  inline void set_last_enter_timestamp(::google::protobuf::uint32 value);

  // optional uint32 last_day_enter_num = 5;
  inline bool has_last_day_enter_num() const;
  inline void clear_last_day_enter_num();
  static const int kLastDayEnterNumFieldNumber = 5;
  inline ::google::protobuf::uint32 last_day_enter_num() const;
  inline void set_last_day_enter_num(::google::protobuf::uint32 value);

  // optional uint32 total_enter_num = 6;
  inline bool has_total_enter_num() const;
  inline void clear_total_enter_num();
  static const int kTotalEnterNumFieldNumber = 6;
  inline ::google::protobuf::uint32 total_enter_num() const;
  inline void set_total_enter_num(::google::protobuf::uint32 value);

  // optional uint32 last_reset_time = 7;
  inline bool has_last_reset_time() const;
  inline void clear_last_reset_time();
  static const int kLastResetTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 last_reset_time() const;
  inline void set_last_reset_time(::google::protobuf::uint32 value);

  // optional uint32 last_day_reset_num = 8;
  inline bool has_last_day_reset_num() const;
  inline void clear_last_day_reset_num();
  static const int kLastDayResetNumFieldNumber = 8;
  inline ::google::protobuf::uint32 last_day_reset_num() const;
  inline void set_last_day_reset_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_sub_task)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_sub_task_id();
  inline void clear_has_sub_task_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_last_enter_timestamp();
  inline void clear_has_last_enter_timestamp();
  inline void set_has_last_day_enter_num();
  inline void clear_has_last_day_enter_num();
  inline void set_has_total_enter_num();
  inline void clear_has_total_enter_num();
  inline void set_has_last_reset_time();
  inline void clear_has_last_reset_time();
  inline void set_has_last_day_reset_num();
  inline void clear_has_last_day_reset_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 sub_task_id_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 last_enter_timestamp_;
  ::google::protobuf::uint32 last_day_enter_num_;
  ::google::protobuf::uint32 total_enter_num_;
  ::google::protobuf::uint32 last_reset_time_;
  ::google::protobuf::uint32 last_day_reset_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_sub_task* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_mail : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_mail();
  virtual ~gs_dbs_user_info_op_req_struct_op_mail();

  gs_dbs_user_info_op_req_struct_op_mail(const gs_dbs_user_info_op_req_struct_op_mail& from);

  inline gs_dbs_user_info_op_req_struct_op_mail& operator=(const gs_dbs_user_info_op_req_struct_op_mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_mail& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_mail* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_mail& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint32 value);

  // required .gs_dbs_user_info_op_req.EOPType op_type = 2;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 2;
  inline ::gs_dbs_user_info_op_req_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_user_info_op_req_EOPType value);

  // optional .db_user_mail mail = 3;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 3;
  inline const ::db_user_mail& mail() const;
  inline ::db_user_mail* mutable_mail();
  inline ::db_user_mail* release_mail();
  inline void set_allocated_mail(::db_user_mail* mail);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_mail)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mail_id_;
  int op_type_;
  ::db_user_mail* mail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_mail* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_new_hero : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_new_hero();
  virtual ~gs_dbs_user_info_op_req_struct_new_hero();

  gs_dbs_user_info_op_req_struct_new_hero(const gs_dbs_user_info_op_req_struct_new_hero& from);

  inline gs_dbs_user_info_op_req_struct_new_hero& operator=(const gs_dbs_user_info_op_req_struct_new_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_new_hero& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_new_hero* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_new_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_new_hero& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_new_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db_user_hero hero = 1;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 1;
  inline const ::db_user_hero& hero() const;
  inline ::db_user_hero* mutable_hero();
  inline ::db_user_hero* release_hero();
  inline void set_allocated_hero(::db_user_hero* hero);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_new_hero)
 private:
  inline void set_has_hero();
  inline void clear_has_hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::db_user_hero* hero_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_new_hero* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_hero_base : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_hero_base();
  virtual ~gs_dbs_user_info_op_req_struct_op_hero_base();

  gs_dbs_user_info_op_req_struct_op_hero_base(const gs_dbs_user_info_op_req_struct_op_hero_base& from);

  inline gs_dbs_user_info_op_req_struct_op_hero_base& operator=(const gs_dbs_user_info_op_req_struct_op_hero_base& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_hero_base& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_hero_base* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_hero_base* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_hero_base& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_hero_base& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_info_op_req.EOPType op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_info_op_req_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_user_info_op_req_EOPType value);

  // required uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // optional uint32 quality = 4;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 4;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 cur_exp = 6;
  inline bool has_cur_exp() const;
  inline void clear_cur_exp();
  static const int kCurExpFieldNumber = 6;
  inline ::google::protobuf::uint32 cur_exp() const;
  inline void set_cur_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_hero_base)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_cur_exp();
  inline void clear_has_cur_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 cur_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_hero_base* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_hero_equip : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_hero_equip();
  virtual ~gs_dbs_user_info_op_req_struct_op_hero_equip();

  gs_dbs_user_info_op_req_struct_op_hero_equip(const gs_dbs_user_info_op_req_struct_op_hero_equip& from);

  inline gs_dbs_user_info_op_req_struct_op_hero_equip& operator=(const gs_dbs_user_info_op_req_struct_op_hero_equip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_hero_equip& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_hero_equip* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_hero_equip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_hero_equip& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_hero_equip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_info_op_req.EOPType op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_info_op_req_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_user_info_op_req_EOPType value);

  // required uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required uint32 equip_id = 3;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 3;
  inline ::google::protobuf::uint32 equip_id() const;
  inline void set_equip_id(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 evolution_equip_id = 5;
  inline bool has_evolution_equip_id() const;
  inline void clear_evolution_equip_id();
  static const int kEvolutionEquipIdFieldNumber = 5;
  inline ::google::protobuf::uint32 evolution_equip_id() const;
  inline void set_evolution_equip_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_hero_equip)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_equip_id();
  inline void clear_has_equip_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_evolution_equip_id();
  inline void clear_has_evolution_equip_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 equip_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 evolution_equip_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_hero_equip* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_hero_skill : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_hero_skill();
  virtual ~gs_dbs_user_info_op_req_struct_op_hero_skill();

  gs_dbs_user_info_op_req_struct_op_hero_skill(const gs_dbs_user_info_op_req_struct_op_hero_skill& from);

  inline gs_dbs_user_info_op_req_struct_op_hero_skill& operator=(const gs_dbs_user_info_op_req_struct_op_hero_skill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_hero_skill& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_hero_skill* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_hero_skill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_hero_skill& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_hero_skill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_info_op_req.EOPType op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_info_op_req_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_user_info_op_req_EOPType value);

  // required uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required .user_hero_skill.e_skill_type type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::user_hero_skill_e_skill_type type() const;
  inline void set_type(::user_hero_skill_e_skill_type value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_hero_skill)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 hero_id_;
  int type_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_hero_skill* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_shop : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_shop();
  virtual ~gs_dbs_user_info_op_req_struct_op_shop();

  gs_dbs_user_info_op_req_struct_op_shop(const gs_dbs_user_info_op_req_struct_op_shop& from);

  inline gs_dbs_user_info_op_req_struct_op_shop& operator=(const gs_dbs_user_info_op_req_struct_op_shop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_shop& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_shop* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_shop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_shop& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_shop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType ESHOPOPType;
  static const ESHOPOPType min = gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_min;
  static const ESHOPOPType CREATE = gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_CREATE;
  static const ESHOPOPType AUTO_REFRESH = gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_AUTO_REFRESH;
  static const ESHOPOPType MANUAL_REFRESH = gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_MANUAL_REFRESH;
  static const ESHOPOPType RANDOM_REFRESH = gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_RANDOM_REFRESH;
  static const ESHOPOPType max = gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_max;
  static inline bool ESHOPOPType_IsValid(int value) {
    return gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_IsValid(value);
  }
  static const ESHOPOPType ESHOPOPType_MIN =
    gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_ESHOPOPType_MIN;
  static const ESHOPOPType ESHOPOPType_MAX =
    gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_ESHOPOPType_MAX;
  static const int ESHOPOPType_ARRAYSIZE =
    gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_ESHOPOPType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ESHOPOPType_descriptor() {
    return gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_descriptor();
  }
  static inline const ::std::string& ESHOPOPType_Name(ESHOPOPType value) {
    return gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_Name(value);
  }
  static inline bool ESHOPOPType_Parse(const ::std::string& name,
      ESHOPOPType* value) {
    return gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_info_op_req.struct_op_shop.ESHOPOPType shop_op_type = 1;
  inline bool has_shop_op_type() const;
  inline void clear_shop_op_type();
  static const int kShopOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType shop_op_type() const;
  inline void set_shop_op_type(::gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType value);

  // required .db_user_shop shop = 2;
  inline bool has_shop() const;
  inline void clear_shop();
  static const int kShopFieldNumber = 2;
  inline const ::db_user_shop& shop() const;
  inline ::db_user_shop* mutable_shop();
  inline ::db_user_shop* release_shop();
  inline void set_allocated_shop(::db_user_shop* shop);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_shop)
 private:
  inline void set_has_shop_op_type();
  inline void clear_has_shop_op_type();
  inline void set_has_shop();
  inline void clear_has_shop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::db_user_shop* shop_;
  int shop_op_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_shop* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_shop_item : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_shop_item();
  virtual ~gs_dbs_user_info_op_req_struct_op_shop_item();

  gs_dbs_user_info_op_req_struct_op_shop_item(const gs_dbs_user_info_op_req_struct_op_shop_item& from);

  inline gs_dbs_user_info_op_req_struct_op_shop_item& operator=(const gs_dbs_user_info_op_req_struct_op_shop_item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_shop_item& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_shop_item* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_shop_item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_shop_item& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_shop_item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .user_shop.ESHOPTYPE shop_type = 1;
  inline bool has_shop_type() const;
  inline void clear_shop_type();
  static const int kShopTypeFieldNumber = 1;
  inline ::user_shop_ESHOPTYPE shop_type() const;
  inline void set_shop_type(::user_shop_ESHOPTYPE value);

  // required .db_user_shop_item item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::db_user_shop_item& item() const;
  inline ::db_user_shop_item* mutable_item();
  inline ::db_user_shop_item* release_item();
  inline void set_allocated_item(::db_user_shop_item* item);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_shop_item)
 private:
  inline void set_has_shop_type();
  inline void clear_has_shop_type();
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::db_user_shop_item* item_;
  int shop_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_shop_item* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_mission : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_mission();
  virtual ~gs_dbs_user_info_op_req_struct_op_mission();

  gs_dbs_user_info_op_req_struct_op_mission(const gs_dbs_user_info_op_req_struct_op_mission& from);

  inline gs_dbs_user_info_op_req_struct_op_mission& operator=(const gs_dbs_user_info_op_req_struct_op_mission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_mission& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_mission* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_mission* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_mission& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_mission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .db_user_mission_event mission_event = 1;
  inline bool has_mission_event() const;
  inline void clear_mission_event();
  static const int kMissionEventFieldNumber = 1;
  inline const ::db_user_mission_event& mission_event() const;
  inline ::db_user_mission_event* mutable_mission_event();
  inline ::db_user_mission_event* release_mission_event();
  inline void set_allocated_mission_event(::db_user_mission_event* mission_event);

  // optional .db_user_mission_chain mission_chain = 2;
  inline bool has_mission_chain() const;
  inline void clear_mission_chain();
  static const int kMissionChainFieldNumber = 2;
  inline const ::db_user_mission_chain& mission_chain() const;
  inline ::db_user_mission_chain* mutable_mission_chain();
  inline ::db_user_mission_chain* release_mission_chain();
  inline void set_allocated_mission_chain(::db_user_mission_chain* mission_chain);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_mission)
 private:
  inline void set_has_mission_event();
  inline void clear_has_mission_event();
  inline void set_has_mission_chain();
  inline void clear_has_mission_chain();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::db_user_mission_event* mission_event_;
  ::db_user_mission_chain* mission_chain_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_mission* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_new_arena : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_new_arena();
  virtual ~gs_dbs_user_info_op_req_struct_new_arena();

  gs_dbs_user_info_op_req_struct_new_arena(const gs_dbs_user_info_op_req_struct_new_arena& from);

  inline gs_dbs_user_info_op_req_struct_new_arena& operator=(const gs_dbs_user_info_op_req_struct_new_arena& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_new_arena& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_new_arena* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_new_arena* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_new_arena& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_new_arena& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required uint32 last_challenge_time = 3;
  inline bool has_last_challenge_time() const;
  inline void clear_last_challenge_time();
  static const int kLastChallengeTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 last_challenge_time() const;
  inline void set_last_challenge_time(::google::protobuf::uint32 value);

  // required uint32 last_day_challenge_num = 4;
  inline bool has_last_day_challenge_num() const;
  inline void clear_last_day_challenge_num();
  static const int kLastDayChallengeNumFieldNumber = 4;
  inline ::google::protobuf::uint32 last_day_challenge_num() const;
  inline void set_last_day_challenge_num(::google::protobuf::uint32 value);

  // required uint32 history_highest_rank = 5;
  inline bool has_history_highest_rank() const;
  inline void clear_history_highest_rank();
  static const int kHistoryHighestRankFieldNumber = 5;
  inline ::google::protobuf::uint32 history_highest_rank() const;
  inline void set_history_highest_rank(::google::protobuf::uint32 value);

  // repeated uint32 heros = 6;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 6;
  inline ::google::protobuf::uint32 heros(int index) const;
  inline void set_heros(int index, ::google::protobuf::uint32 value);
  inline void add_heros(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heros() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heros();

  // required uint32 last_time_buy_arena_challenge = 7;
  inline bool has_last_time_buy_arena_challenge() const;
  inline void clear_last_time_buy_arena_challenge();
  static const int kLastTimeBuyArenaChallengeFieldNumber = 7;
  inline ::google::protobuf::uint32 last_time_buy_arena_challenge() const;
  inline void set_last_time_buy_arena_challenge(::google::protobuf::uint32 value);

  // required uint32 last_day_buy_arena_challenge_num = 8;
  inline bool has_last_day_buy_arena_challenge_num() const;
  inline void clear_last_day_buy_arena_challenge_num();
  static const int kLastDayBuyArenaChallengeNumFieldNumber = 8;
  inline ::google::protobuf::uint32 last_day_buy_arena_challenge_num() const;
  inline void set_last_day_buy_arena_challenge_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_new_arena)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_last_challenge_time();
  inline void clear_has_last_challenge_time();
  inline void set_has_last_day_challenge_num();
  inline void clear_has_last_day_challenge_num();
  inline void set_has_history_highest_rank();
  inline void clear_has_history_highest_rank();
  inline void set_has_last_time_buy_arena_challenge();
  inline void clear_has_last_time_buy_arena_challenge();
  inline void set_has_last_day_buy_arena_challenge_num();
  inline void clear_has_last_day_buy_arena_challenge_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 last_challenge_time_;
  ::google::protobuf::uint32 last_day_challenge_num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heros_;
  ::google::protobuf::uint32 history_highest_rank_;
  ::google::protobuf::uint32 last_time_buy_arena_challenge_;
  ::google::protobuf::uint32 last_day_buy_arena_challenge_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_new_arena* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_arena : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_arena();
  virtual ~gs_dbs_user_info_op_req_struct_op_arena();

  gs_dbs_user_info_op_req_struct_op_arena(const gs_dbs_user_info_op_req_struct_op_arena& from);

  inline gs_dbs_user_info_op_req_struct_op_arena& operator=(const gs_dbs_user_info_op_req_struct_op_arena& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_arena& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_arena* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_arena* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_arena& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_arena& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_info_op_req.EOPType op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_info_op_req_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_user_info_op_req_EOPType value);

  // optional uint32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 last_challenge_time = 4;
  inline bool has_last_challenge_time() const;
  inline void clear_last_challenge_time();
  static const int kLastChallengeTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 last_challenge_time() const;
  inline void set_last_challenge_time(::google::protobuf::uint32 value);

  // optional uint32 last_day_challenge_num = 5;
  inline bool has_last_day_challenge_num() const;
  inline void clear_last_day_challenge_num();
  static const int kLastDayChallengeNumFieldNumber = 5;
  inline ::google::protobuf::uint32 last_day_challenge_num() const;
  inline void set_last_day_challenge_num(::google::protobuf::uint32 value);

  // optional uint32 history_highest_rank = 6;
  inline bool has_history_highest_rank() const;
  inline void clear_history_highest_rank();
  static const int kHistoryHighestRankFieldNumber = 6;
  inline ::google::protobuf::uint32 history_highest_rank() const;
  inline void set_history_highest_rank(::google::protobuf::uint32 value);

  // repeated uint32 heros = 7;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 7;
  inline ::google::protobuf::uint32 heros(int index) const;
  inline void set_heros(int index, ::google::protobuf::uint32 value);
  inline void add_heros(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heros() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heros();

  // optional uint32 last_time_buy_arena_challenge = 8;
  inline bool has_last_time_buy_arena_challenge() const;
  inline void clear_last_time_buy_arena_challenge();
  static const int kLastTimeBuyArenaChallengeFieldNumber = 8;
  inline ::google::protobuf::uint32 last_time_buy_arena_challenge() const;
  inline void set_last_time_buy_arena_challenge(::google::protobuf::uint32 value);

  // optional uint32 last_day_buy_arena_challenge_num = 9;
  inline bool has_last_day_buy_arena_challenge_num() const;
  inline void clear_last_day_buy_arena_challenge_num();
  static const int kLastDayBuyArenaChallengeNumFieldNumber = 9;
  inline ::google::protobuf::uint32 last_day_buy_arena_challenge_num() const;
  inline void set_last_day_buy_arena_challenge_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_arena)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_last_challenge_time();
  inline void clear_has_last_challenge_time();
  inline void set_has_last_day_challenge_num();
  inline void clear_has_last_day_challenge_num();
  inline void set_has_history_highest_rank();
  inline void clear_has_history_highest_rank();
  inline void set_has_last_time_buy_arena_challenge();
  inline void clear_has_last_time_buy_arena_challenge();
  inline void set_has_last_day_buy_arena_challenge_num();
  inline void clear_has_last_day_buy_arena_challenge_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 last_challenge_time_;
  ::google::protobuf::uint32 last_day_challenge_num_;
  ::google::protobuf::uint32 history_highest_rank_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heros_;
  ::google::protobuf::uint32 last_time_buy_arena_challenge_;
  ::google::protobuf::uint32 last_day_buy_arena_challenge_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_arena* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_clear_arena_team : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_clear_arena_team();
  virtual ~gs_dbs_user_info_op_req_struct_clear_arena_team();

  gs_dbs_user_info_op_req_struct_clear_arena_team(const gs_dbs_user_info_op_req_struct_clear_arena_team& from);

  inline gs_dbs_user_info_op_req_struct_clear_arena_team& operator=(const gs_dbs_user_info_op_req_struct_clear_arena_team& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_clear_arena_team& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_clear_arena_team* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_clear_arena_team* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_clear_arena_team& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_clear_arena_team& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_clear_arena_team)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_clear_arena_team* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_arena_challenge : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_arena_challenge();
  virtual ~gs_dbs_user_info_op_req_struct_op_arena_challenge();

  gs_dbs_user_info_op_req_struct_op_arena_challenge(const gs_dbs_user_info_op_req_struct_op_arena_challenge& from);

  inline gs_dbs_user_info_op_req_struct_op_arena_challenge& operator=(const gs_dbs_user_info_op_req_struct_op_arena_challenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_arena_challenge& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_arena_challenge* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_arena_challenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_arena_challenge& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_arena_challenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 attacker_user_id = 1;
  inline bool has_attacker_user_id() const;
  inline void clear_attacker_user_id();
  static const int kAttackerUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 attacker_user_id() const;
  inline void set_attacker_user_id(::google::protobuf::uint32 value);

  // required uint32 attacker_rank = 2;
  inline bool has_attacker_rank() const;
  inline void clear_attacker_rank();
  static const int kAttackerRankFieldNumber = 2;
  inline ::google::protobuf::uint32 attacker_rank() const;
  inline void set_attacker_rank(::google::protobuf::uint32 value);

  // required uint32 attacker_power = 3;
  inline bool has_attacker_power() const;
  inline void clear_attacker_power();
  static const int kAttackerPowerFieldNumber = 3;
  inline ::google::protobuf::uint32 attacker_power() const;
  inline void set_attacker_power(::google::protobuf::uint32 value);

  // required string attacker_name = 4;
  inline bool has_attacker_name() const;
  inline void clear_attacker_name();
  static const int kAttackerNameFieldNumber = 4;
  inline const ::std::string& attacker_name() const;
  inline void set_attacker_name(const ::std::string& value);
  inline void set_attacker_name(const char* value);
  inline void set_attacker_name(const char* value, size_t size);
  inline ::std::string* mutable_attacker_name();
  inline ::std::string* release_attacker_name();
  inline void set_allocated_attacker_name(::std::string* attacker_name);

  // required uint32 attacker_level = 5;
  inline bool has_attacker_level() const;
  inline void clear_attacker_level();
  static const int kAttackerLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 attacker_level() const;
  inline void set_attacker_level(::google::protobuf::uint32 value);

  // repeated .db_user_arena_log.db_user_arena_log_hero attacker_heros = 6;
  inline int attacker_heros_size() const;
  inline void clear_attacker_heros();
  static const int kAttackerHerosFieldNumber = 6;
  inline const ::db_user_arena_log_db_user_arena_log_hero& attacker_heros(int index) const;
  inline ::db_user_arena_log_db_user_arena_log_hero* mutable_attacker_heros(int index);
  inline ::db_user_arena_log_db_user_arena_log_hero* add_attacker_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >&
      attacker_heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >*
      mutable_attacker_heros();

  // required uint32 defender_user_id = 7;
  inline bool has_defender_user_id() const;
  inline void clear_defender_user_id();
  static const int kDefenderUserIdFieldNumber = 7;
  inline ::google::protobuf::uint32 defender_user_id() const;
  inline void set_defender_user_id(::google::protobuf::uint32 value);

  // required uint32 defender_rank = 8;
  inline bool has_defender_rank() const;
  inline void clear_defender_rank();
  static const int kDefenderRankFieldNumber = 8;
  inline ::google::protobuf::uint32 defender_rank() const;
  inline void set_defender_rank(::google::protobuf::uint32 value);

  // required uint32 defender_power = 9;
  inline bool has_defender_power() const;
  inline void clear_defender_power();
  static const int kDefenderPowerFieldNumber = 9;
  inline ::google::protobuf::uint32 defender_power() const;
  inline void set_defender_power(::google::protobuf::uint32 value);

  // required string defender_name = 10;
  inline bool has_defender_name() const;
  inline void clear_defender_name();
  static const int kDefenderNameFieldNumber = 10;
  inline const ::std::string& defender_name() const;
  inline void set_defender_name(const ::std::string& value);
  inline void set_defender_name(const char* value);
  inline void set_defender_name(const char* value, size_t size);
  inline ::std::string* mutable_defender_name();
  inline ::std::string* release_defender_name();
  inline void set_allocated_defender_name(::std::string* defender_name);

  // required uint32 defender_level = 11;
  inline bool has_defender_level() const;
  inline void clear_defender_level();
  static const int kDefenderLevelFieldNumber = 11;
  inline ::google::protobuf::uint32 defender_level() const;
  inline void set_defender_level(::google::protobuf::uint32 value);

  // repeated .db_user_arena_log.db_user_arena_log_hero defender_heros = 12;
  inline int defender_heros_size() const;
  inline void clear_defender_heros();
  static const int kDefenderHerosFieldNumber = 12;
  inline const ::db_user_arena_log_db_user_arena_log_hero& defender_heros(int index) const;
  inline ::db_user_arena_log_db_user_arena_log_hero* mutable_defender_heros(int index);
  inline ::db_user_arena_log_db_user_arena_log_hero* add_defender_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >&
      defender_heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >*
      mutable_defender_heros();

  // required uint32 is_win = 13;
  inline bool has_is_win() const;
  inline void clear_is_win();
  static const int kIsWinFieldNumber = 13;
  inline ::google::protobuf::uint32 is_win() const;
  inline void set_is_win(::google::protobuf::uint32 value);

  // required uint32 time = 14;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 14;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional uint32 score = 15;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 15;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_arena_challenge)
 private:
  inline void set_has_attacker_user_id();
  inline void clear_has_attacker_user_id();
  inline void set_has_attacker_rank();
  inline void clear_has_attacker_rank();
  inline void set_has_attacker_power();
  inline void clear_has_attacker_power();
  inline void set_has_attacker_name();
  inline void clear_has_attacker_name();
  inline void set_has_attacker_level();
  inline void clear_has_attacker_level();
  inline void set_has_defender_user_id();
  inline void clear_has_defender_user_id();
  inline void set_has_defender_rank();
  inline void clear_has_defender_rank();
  inline void set_has_defender_power();
  inline void clear_has_defender_power();
  inline void set_has_defender_name();
  inline void clear_has_defender_name();
  inline void set_has_defender_level();
  inline void clear_has_defender_level();
  inline void set_has_is_win();
  inline void clear_has_is_win();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 attacker_user_id_;
  ::google::protobuf::uint32 attacker_rank_;
  ::std::string* attacker_name_;
  ::google::protobuf::uint32 attacker_power_;
  ::google::protobuf::uint32 attacker_level_;
  ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero > attacker_heros_;
  ::google::protobuf::uint32 defender_user_id_;
  ::google::protobuf::uint32 defender_rank_;
  ::std::string* defender_name_;
  ::google::protobuf::uint32 defender_power_;
  ::google::protobuf::uint32 defender_level_;
  ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero > defender_heros_;
  ::google::protobuf::uint32 is_win_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_arena_challenge* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_sign : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_sign();
  virtual ~gs_dbs_user_info_op_req_struct_op_sign();

  gs_dbs_user_info_op_req_struct_op_sign(const gs_dbs_user_info_op_req_struct_op_sign& from);

  inline gs_dbs_user_info_op_req_struct_op_sign& operator=(const gs_dbs_user_info_op_req_struct_op_sign& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_sign& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_sign* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_sign* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_sign& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_sign& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_info_op_req.EOPType op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_info_op_req_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_user_info_op_req_EOPType value);

  // optional uint32 sign_1_times = 2;
  inline bool has_sign_1_times() const;
  inline void clear_sign_1_times();
  static const int kSign1TimesFieldNumber = 2;
  inline ::google::protobuf::uint32 sign_1_times() const;
  inline void set_sign_1_times(::google::protobuf::uint32 value);

  // optional string sign_n_reward_status = 3;
  inline bool has_sign_n_reward_status() const;
  inline void clear_sign_n_reward_status();
  static const int kSignNRewardStatusFieldNumber = 3;
  inline const ::std::string& sign_n_reward_status() const;
  inline void set_sign_n_reward_status(const ::std::string& value);
  inline void set_sign_n_reward_status(const char* value);
  inline void set_sign_n_reward_status(const char* value, size_t size);
  inline ::std::string* mutable_sign_n_reward_status();
  inline ::std::string* release_sign_n_reward_status();
  inline void set_allocated_sign_n_reward_status(::std::string* sign_n_reward_status);

  // optional uint32 last_sign_time = 4;
  inline bool has_last_sign_time() const;
  inline void clear_last_sign_time();
  static const int kLastSignTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 last_sign_time() const;
  inline void set_last_sign_time(::google::protobuf::uint32 value);

  // optional uint32 add_signed_times = 5;
  inline bool has_add_signed_times() const;
  inline void clear_add_signed_times();
  static const int kAddSignedTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 add_signed_times() const;
  inline void set_add_signed_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_sign)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_sign_1_times();
  inline void clear_has_sign_1_times();
  inline void set_has_sign_n_reward_status();
  inline void clear_has_sign_n_reward_status();
  inline void set_has_last_sign_time();
  inline void clear_has_last_sign_time();
  inline void set_has_add_signed_times();
  inline void clear_has_add_signed_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 sign_1_times_;
  ::std::string* sign_n_reward_status_;
  ::google::protobuf::uint32 last_sign_time_;
  ::google::protobuf::uint32 add_signed_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_sign* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_new_sign : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_new_sign();
  virtual ~gs_dbs_user_info_op_req_struct_new_sign();

  gs_dbs_user_info_op_req_struct_new_sign(const gs_dbs_user_info_op_req_struct_new_sign& from);

  inline gs_dbs_user_info_op_req_struct_new_sign& operator=(const gs_dbs_user_info_op_req_struct_new_sign& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_new_sign& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_new_sign* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_new_sign* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_new_sign& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_new_sign& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sign_1_times = 1;
  inline bool has_sign_1_times() const;
  inline void clear_sign_1_times();
  static const int kSign1TimesFieldNumber = 1;
  inline ::google::protobuf::uint32 sign_1_times() const;
  inline void set_sign_1_times(::google::protobuf::uint32 value);

  // required string sign_n_reward_status = 2;
  inline bool has_sign_n_reward_status() const;
  inline void clear_sign_n_reward_status();
  static const int kSignNRewardStatusFieldNumber = 2;
  inline const ::std::string& sign_n_reward_status() const;
  inline void set_sign_n_reward_status(const ::std::string& value);
  inline void set_sign_n_reward_status(const char* value);
  inline void set_sign_n_reward_status(const char* value, size_t size);
  inline ::std::string* mutable_sign_n_reward_status();
  inline ::std::string* release_sign_n_reward_status();
  inline void set_allocated_sign_n_reward_status(::std::string* sign_n_reward_status);

  // required uint32 last_sign_time = 3;
  inline bool has_last_sign_time() const;
  inline void clear_last_sign_time();
  static const int kLastSignTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 last_sign_time() const;
  inline void set_last_sign_time(::google::protobuf::uint32 value);

  // required uint32 add_signed_times = 4;
  inline bool has_add_signed_times() const;
  inline void clear_add_signed_times();
  static const int kAddSignedTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 add_signed_times() const;
  inline void set_add_signed_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_new_sign)
 private:
  inline void set_has_sign_1_times();
  inline void clear_has_sign_1_times();
  inline void set_has_sign_n_reward_status();
  inline void clear_has_sign_n_reward_status();
  inline void set_has_last_sign_time();
  inline void clear_has_last_sign_time();
  inline void set_has_add_signed_times();
  inline void clear_has_add_signed_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sign_n_reward_status_;
  ::google::protobuf::uint32 sign_1_times_;
  ::google::protobuf::uint32 last_sign_time_;
  ::google::protobuf::uint32 add_signed_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_new_sign* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_novice_guide : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_novice_guide();
  virtual ~gs_dbs_user_info_op_req_struct_op_novice_guide();

  gs_dbs_user_info_op_req_struct_op_novice_guide(const gs_dbs_user_info_op_req_struct_op_novice_guide& from);

  inline gs_dbs_user_info_op_req_struct_op_novice_guide& operator=(const gs_dbs_user_info_op_req_struct_op_novice_guide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_novice_guide& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_novice_guide* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_novice_guide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_novice_guide& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_novice_guide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_info_op_req.EOPType op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_info_op_req_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_user_info_op_req_EOPType value);

  // required uint32 guide_id = 2;
  inline bool has_guide_id() const;
  inline void clear_guide_id();
  static const int kGuideIdFieldNumber = 2;
  inline ::google::protobuf::uint32 guide_id() const;
  inline void set_guide_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_novice_guide)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_guide_id();
  inline void clear_has_guide_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 guide_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_novice_guide* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_new_user_statis : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_new_user_statis();
  virtual ~gs_dbs_user_info_op_req_struct_new_user_statis();

  gs_dbs_user_info_op_req_struct_new_user_statis(const gs_dbs_user_info_op_req_struct_new_user_statis& from);

  inline gs_dbs_user_info_op_req_struct_new_user_statis& operator=(const gs_dbs_user_info_op_req_struct_new_user_statis& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_new_user_statis& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_new_user_statis* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_new_user_statis* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_new_user_statis& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_new_user_statis& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 fight_power = 2;
  inline bool has_fight_power() const;
  inline void clear_fight_power();
  static const int kFightPowerFieldNumber = 2;
  inline ::google::protobuf::uint32 fight_power() const;
  inline void set_fight_power(::google::protobuf::uint32 value);

  // required uint32 vip = 3;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 3;
  inline ::google::protobuf::uint32 vip() const;
  inline void set_vip(::google::protobuf::uint32 value);

  // required uint32 occur_time = 4;
  inline bool has_occur_time() const;
  inline void clear_occur_time();
  static const int kOccurTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 occur_time() const;
  inline void set_occur_time(::google::protobuf::uint32 value);

  // required uint32 event_type = 5;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 event_type() const;
  inline void set_event_type(::google::protobuf::uint32 value);

  // required uint32 cur_id = 6;
  inline bool has_cur_id() const;
  inline void clear_cur_id();
  static const int kCurIdFieldNumber = 6;
  inline ::google::protobuf::uint32 cur_id() const;
  inline void set_cur_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_new_user_statis)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight_power();
  inline void clear_has_fight_power();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_occur_time();
  inline void clear_has_occur_time();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_cur_id();
  inline void clear_has_cur_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 fight_power_;
  ::google::protobuf::uint32 vip_;
  ::google::protobuf::uint32 occur_time_;
  ::google::protobuf::uint32 event_type_;
  ::google::protobuf::uint32 cur_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_new_user_statis* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_new_mail : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_new_mail();
  virtual ~gs_dbs_user_info_op_req_struct_new_mail();

  gs_dbs_user_info_op_req_struct_new_mail(const gs_dbs_user_info_op_req_struct_new_mail& from);

  inline gs_dbs_user_info_op_req_struct_new_mail& operator=(const gs_dbs_user_info_op_req_struct_new_mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_new_mail& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_new_mail* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_new_mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_new_mail& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_new_mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db_user_mail mail = 1;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 1;
  inline const ::db_user_mail& mail() const;
  inline ::db_user_mail* mutable_mail();
  inline ::db_user_mail* release_mail();
  inline void set_allocated_mail(::db_user_mail* mail);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_new_mail)
 private:
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::db_user_mail* mail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_new_mail* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_friend : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_friend();
  virtual ~gs_dbs_user_info_op_req_struct_op_friend();

  gs_dbs_user_info_op_req_struct_op_friend(const gs_dbs_user_info_op_req_struct_op_friend& from);

  inline gs_dbs_user_info_op_req_struct_op_friend& operator=(const gs_dbs_user_info_op_req_struct_op_friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_friend& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_friend* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_friend& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE OP_TYPE;
  static const OP_TYPE GET_ELEMENT1 = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GET_ELEMENT1;
  static const OP_TYPE GET_ELEMENTN = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GET_ELEMENTN;
  static const OP_TYPE GIVE_ELEMENT1 = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GIVE_ELEMENT1;
  static const OP_TYPE GIVE_ELEMENTN = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GIVE_ELEMENTN;
  static const OP_TYPE GIVE_UP_APPLY1 = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GIVE_UP_APPLY1;
  static const OP_TYPE GIVE_UP_APPLYN = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_GIVE_UP_APPLYN;
  static const OP_TYPE AFFIRM_AGREE1 = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_AFFIRM_AGREE1;
  static const OP_TYPE AFFIRM_AGREEN = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_AFFIRM_AGREEN;
  static const OP_TYPE AFFIRM_REFUSE1 = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_AFFIRM_REFUSE1;
  static const OP_TYPE AFFIRM_REFUSEN = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_AFFIRM_REFUSEN;
  static const OP_TYPE ADD_FRIEND_GS_ONLINE = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_ADD_FRIEND_GS_ONLINE;
  static const OP_TYPE DEL_FRIEND = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_DEL_FRIEND;
  static const OP_TYPE DEL_RECOMMEND_FRIEND = gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_DEL_RECOMMEND_FRIEND;
  static inline bool OP_TYPE_IsValid(int value) {
    return gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_IsValid(value);
  }
  static const OP_TYPE OP_TYPE_MIN =
    gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_OP_TYPE_MIN;
  static const OP_TYPE OP_TYPE_MAX =
    gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_OP_TYPE_MAX;
  static const int OP_TYPE_ARRAYSIZE =
    gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_OP_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OP_TYPE_descriptor() {
    return gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_descriptor();
  }
  static inline const ::std::string& OP_TYPE_Name(OP_TYPE value) {
    return gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_Name(value);
  }
  static inline bool OP_TYPE_Parse(const ::std::string& name,
      OP_TYPE* value) {
    return gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_info_op_req.struct_op_friend.OP_TYPE op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE op_type() const;
  inline void set_op_type(::gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE value);

  // optional uint32 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint32 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint32 value);

  // optional .friend_base_info base_info = 3;
  inline bool has_base_info() const;
  inline void clear_base_info();
  static const int kBaseInfoFieldNumber = 3;
  inline const ::friend_base_info& base_info() const;
  inline ::friend_base_info* mutable_base_info();
  inline ::friend_base_info* release_base_info();
  inline void set_allocated_base_info(::friend_base_info* base_info);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_friend)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_base_info();
  inline void clear_has_base_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 friend_id_;
  ::friend_base_info* base_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_friend* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_crusade_crusade_end : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_crusade_crusade_end();
  virtual ~gs_dbs_user_info_op_req_struct_op_crusade_crusade_end();

  gs_dbs_user_info_op_req_struct_op_crusade_crusade_end(const gs_dbs_user_info_op_req_struct_op_crusade_crusade_end& from);

  inline gs_dbs_user_info_op_req_struct_op_crusade_crusade_end& operator=(const gs_dbs_user_info_op_req_struct_op_crusade_crusade_end& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_crusade_crusade_end& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_crusade_crusade_end* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_crusade_crusade_end* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_crusade_crusade_end& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_crusade_crusade_end& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .user_crusade.crusade_hero me_heros = 2;
  inline int me_heros_size() const;
  inline void clear_me_heros();
  static const int kMeHerosFieldNumber = 2;
  inline const ::user_crusade_crusade_hero& me_heros(int index) const;
  inline ::user_crusade_crusade_hero* mutable_me_heros(int index);
  inline ::user_crusade_crusade_hero* add_me_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >&
      me_heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >*
      mutable_me_heros();

  // repeated .user_crusade.crusade_hero enemy_heros = 3;
  inline int enemy_heros_size() const;
  inline void clear_enemy_heros();
  static const int kEnemyHerosFieldNumber = 3;
  inline const ::user_crusade_crusade_hero& enemy_heros(int index) const;
  inline ::user_crusade_crusade_hero* mutable_enemy_heros(int index);
  inline ::user_crusade_crusade_hero* add_enemy_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >&
      enemy_heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >*
      mutable_enemy_heros();

  // required uint32 wave = 4;
  inline bool has_wave() const;
  inline void clear_wave();
  static const int kWaveFieldNumber = 4;
  inline ::google::protobuf::uint32 wave() const;
  inline void set_wave(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_crusade.crusade_end)
 private:
  inline void set_has_wave();
  inline void clear_has_wave();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero > me_heros_;
  ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero > enemy_heros_;
  ::google::protobuf::uint32 wave_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_crusade_crusade_end* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req_struct_op_crusade : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req_struct_op_crusade();
  virtual ~gs_dbs_user_info_op_req_struct_op_crusade();

  gs_dbs_user_info_op_req_struct_op_crusade(const gs_dbs_user_info_op_req_struct_op_crusade& from);

  inline gs_dbs_user_info_op_req_struct_op_crusade& operator=(const gs_dbs_user_info_op_req_struct_op_crusade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req_struct_op_crusade& default_instance();

  void Swap(gs_dbs_user_info_op_req_struct_op_crusade* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req_struct_op_crusade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req_struct_op_crusade& from);
  void MergeFrom(const gs_dbs_user_info_op_req_struct_op_crusade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef gs_dbs_user_info_op_req_struct_op_crusade_crusade_end crusade_end;

  typedef gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE CRUSADE_OP_TYPE;
  static const CRUSADE_OP_TYPE CRUSADE_END = gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_CRUSADE_END;
  static const CRUSADE_OP_TYPE HERO_LIFE = gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_HERO_LIFE;
  static const CRUSADE_OP_TYPE RESET = gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_RESET;
  static inline bool CRUSADE_OP_TYPE_IsValid(int value) {
    return gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_IsValid(value);
  }
  static const CRUSADE_OP_TYPE CRUSADE_OP_TYPE_MIN =
    gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_CRUSADE_OP_TYPE_MIN;
  static const CRUSADE_OP_TYPE CRUSADE_OP_TYPE_MAX =
    gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_CRUSADE_OP_TYPE_MAX;
  static const int CRUSADE_OP_TYPE_ARRAYSIZE =
    gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_CRUSADE_OP_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CRUSADE_OP_TYPE_descriptor() {
    return gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_descriptor();
  }
  static inline const ::std::string& CRUSADE_OP_TYPE_Name(CRUSADE_OP_TYPE value) {
    return gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_Name(value);
  }
  static inline bool CRUSADE_OP_TYPE_Parse(const ::std::string& name,
      CRUSADE_OP_TYPE* value) {
    return gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_info_op_req.struct_op_crusade.CRUSADE_OP_TYPE op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE op_type() const;
  inline void set_op_type(::gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE value);

  // optional .gs_dbs_user_info_op_req.struct_op_crusade.crusade_end end = 2;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 2;
  inline const ::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end& end() const;
  inline ::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end* mutable_end();
  inline ::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end* release_end();
  inline void set_allocated_end(::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end* end);

  // optional uint32 hero_id = 3;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req.struct_op_crusade)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_end();
  inline void clear_has_end();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end* end_;
  int op_type_;
  ::google::protobuf::uint32 hero_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req_struct_op_crusade* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_info_op_req : public ::google::protobuf::Message {
 public:
  gs_dbs_user_info_op_req();
  virtual ~gs_dbs_user_info_op_req();

  gs_dbs_user_info_op_req(const gs_dbs_user_info_op_req& from);

  inline gs_dbs_user_info_op_req& operator=(const gs_dbs_user_info_op_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_info_op_req& default_instance();

  void Swap(gs_dbs_user_info_op_req* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_info_op_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_info_op_req& from);
  void MergeFrom(const gs_dbs_user_info_op_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef gs_dbs_user_info_op_req_struct_op_base_info struct_op_base_info;
  typedef gs_dbs_user_info_op_req_struct_op_sub_task struct_op_sub_task;
  typedef gs_dbs_user_info_op_req_struct_op_mail struct_op_mail;
  typedef gs_dbs_user_info_op_req_struct_new_hero struct_new_hero;
  typedef gs_dbs_user_info_op_req_struct_op_hero_base struct_op_hero_base;
  typedef gs_dbs_user_info_op_req_struct_op_hero_equip struct_op_hero_equip;
  typedef gs_dbs_user_info_op_req_struct_op_hero_skill struct_op_hero_skill;
  typedef gs_dbs_user_info_op_req_struct_op_shop struct_op_shop;
  typedef gs_dbs_user_info_op_req_struct_op_shop_item struct_op_shop_item;
  typedef gs_dbs_user_info_op_req_struct_op_mission struct_op_mission;
  typedef gs_dbs_user_info_op_req_struct_new_arena struct_new_arena;
  typedef gs_dbs_user_info_op_req_struct_op_arena struct_op_arena;
  typedef gs_dbs_user_info_op_req_struct_clear_arena_team struct_clear_arena_team;
  typedef gs_dbs_user_info_op_req_struct_op_arena_challenge struct_op_arena_challenge;
  typedef gs_dbs_user_info_op_req_struct_op_sign struct_op_sign;
  typedef gs_dbs_user_info_op_req_struct_new_sign struct_new_sign;
  typedef gs_dbs_user_info_op_req_struct_op_novice_guide struct_op_novice_guide;
  typedef gs_dbs_user_info_op_req_struct_new_user_statis struct_new_user_statis;
  typedef gs_dbs_user_info_op_req_struct_new_mail struct_new_mail;
  typedef gs_dbs_user_info_op_req_struct_op_friend struct_op_friend;
  typedef gs_dbs_user_info_op_req_struct_op_crusade struct_op_crusade;

  typedef gs_dbs_user_info_op_req_EOPType EOPType;
  static const EOPType Add_Or_Update = gs_dbs_user_info_op_req_EOPType_Add_Or_Update;
  static const EOPType Delete = gs_dbs_user_info_op_req_EOPType_Delete;
  static const EOPType Add = gs_dbs_user_info_op_req_EOPType_Add;
  static const EOPType Update = gs_dbs_user_info_op_req_EOPType_Update;
  static inline bool EOPType_IsValid(int value) {
    return gs_dbs_user_info_op_req_EOPType_IsValid(value);
  }
  static const EOPType EOPType_MIN =
    gs_dbs_user_info_op_req_EOPType_EOPType_MIN;
  static const EOPType EOPType_MAX =
    gs_dbs_user_info_op_req_EOPType_EOPType_MAX;
  static const int EOPType_ARRAYSIZE =
    gs_dbs_user_info_op_req_EOPType_EOPType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EOPType_descriptor() {
    return gs_dbs_user_info_op_req_EOPType_descriptor();
  }
  static inline const ::std::string& EOPType_Name(EOPType value) {
    return gs_dbs_user_info_op_req_EOPType_Name(value);
  }
  static inline bool EOPType_Parse(const ::std::string& name,
      EOPType* value) {
    return gs_dbs_user_info_op_req_EOPType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional .gs_dbs_user_info_op_req.struct_op_base_info base_info = 2;
  inline bool has_base_info() const;
  inline void clear_base_info();
  static const int kBaseInfoFieldNumber = 2;
  inline const ::gs_dbs_user_info_op_req_struct_op_base_info& base_info() const;
  inline ::gs_dbs_user_info_op_req_struct_op_base_info* mutable_base_info();
  inline ::gs_dbs_user_info_op_req_struct_op_base_info* release_base_info();
  inline void set_allocated_base_info(::gs_dbs_user_info_op_req_struct_op_base_info* base_info);

  // optional .gs_dbs_user_info_op_req.struct_op_sub_task sub_task = 3;
  inline bool has_sub_task() const;
  inline void clear_sub_task();
  static const int kSubTaskFieldNumber = 3;
  inline const ::gs_dbs_user_info_op_req_struct_op_sub_task& sub_task() const;
  inline ::gs_dbs_user_info_op_req_struct_op_sub_task* mutable_sub_task();
  inline ::gs_dbs_user_info_op_req_struct_op_sub_task* release_sub_task();
  inline void set_allocated_sub_task(::gs_dbs_user_info_op_req_struct_op_sub_task* sub_task);

  // repeated .gs_dbs_user_info_op_req.struct_new_hero new_heros = 4;
  inline int new_heros_size() const;
  inline void clear_new_heros();
  static const int kNewHerosFieldNumber = 4;
  inline const ::gs_dbs_user_info_op_req_struct_new_hero& new_heros(int index) const;
  inline ::gs_dbs_user_info_op_req_struct_new_hero* mutable_new_heros(int index);
  inline ::gs_dbs_user_info_op_req_struct_new_hero* add_new_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_new_hero >&
      new_heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_new_hero >*
      mutable_new_heros();

  // repeated .gs_dbs_user_info_op_req.struct_op_hero_base heros_base = 5;
  inline int heros_base_size() const;
  inline void clear_heros_base();
  static const int kHerosBaseFieldNumber = 5;
  inline const ::gs_dbs_user_info_op_req_struct_op_hero_base& heros_base(int index) const;
  inline ::gs_dbs_user_info_op_req_struct_op_hero_base* mutable_heros_base(int index);
  inline ::gs_dbs_user_info_op_req_struct_op_hero_base* add_heros_base();
  inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_base >&
      heros_base() const;
  inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_base >*
      mutable_heros_base();

  // repeated .gs_dbs_user_info_op_req.struct_op_hero_equip hero_equips = 6;
  inline int hero_equips_size() const;
  inline void clear_hero_equips();
  static const int kHeroEquipsFieldNumber = 6;
  inline const ::gs_dbs_user_info_op_req_struct_op_hero_equip& hero_equips(int index) const;
  inline ::gs_dbs_user_info_op_req_struct_op_hero_equip* mutable_hero_equips(int index);
  inline ::gs_dbs_user_info_op_req_struct_op_hero_equip* add_hero_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_equip >&
      hero_equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_equip >*
      mutable_hero_equips();

  // repeated .gs_dbs_user_info_op_req.struct_op_hero_skill hero_skills = 7;
  inline int hero_skills_size() const;
  inline void clear_hero_skills();
  static const int kHeroSkillsFieldNumber = 7;
  inline const ::gs_dbs_user_info_op_req_struct_op_hero_skill& hero_skills(int index) const;
  inline ::gs_dbs_user_info_op_req_struct_op_hero_skill* mutable_hero_skills(int index);
  inline ::gs_dbs_user_info_op_req_struct_op_hero_skill* add_hero_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_skill >&
      hero_skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_skill >*
      mutable_hero_skills();

  // repeated .struct_game_element items = 8;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 8;
  inline const ::struct_game_element& items(int index) const;
  inline ::struct_game_element* mutable_items(int index);
  inline ::struct_game_element* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::struct_game_element >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::struct_game_element >*
      mutable_items();

  // repeated .gs_dbs_user_info_op_req.struct_op_mail op_mails = 9;
  inline int op_mails_size() const;
  inline void clear_op_mails();
  static const int kOpMailsFieldNumber = 9;
  inline const ::gs_dbs_user_info_op_req_struct_op_mail& op_mails(int index) const;
  inline ::gs_dbs_user_info_op_req_struct_op_mail* mutable_op_mails(int index);
  inline ::gs_dbs_user_info_op_req_struct_op_mail* add_op_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_mail >&
      op_mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_mail >*
      mutable_op_mails();

  // repeated .gs_dbs_user_info_op_req.struct_op_shop shops = 10;
  inline int shops_size() const;
  inline void clear_shops();
  static const int kShopsFieldNumber = 10;
  inline const ::gs_dbs_user_info_op_req_struct_op_shop& shops(int index) const;
  inline ::gs_dbs_user_info_op_req_struct_op_shop* mutable_shops(int index);
  inline ::gs_dbs_user_info_op_req_struct_op_shop* add_shops();
  inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_shop >&
      shops() const;
  inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_shop >*
      mutable_shops();

  // repeated .gs_dbs_user_info_op_req.struct_op_shop_item shop_items = 11;
  inline int shop_items_size() const;
  inline void clear_shop_items();
  static const int kShopItemsFieldNumber = 11;
  inline const ::gs_dbs_user_info_op_req_struct_op_shop_item& shop_items(int index) const;
  inline ::gs_dbs_user_info_op_req_struct_op_shop_item* mutable_shop_items(int index);
  inline ::gs_dbs_user_info_op_req_struct_op_shop_item* add_shop_items();
  inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_shop_item >&
      shop_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_shop_item >*
      mutable_shop_items();

  // repeated .db_user_shop_buy buy_items = 12;
  inline int buy_items_size() const;
  inline void clear_buy_items();
  static const int kBuyItemsFieldNumber = 12;
  inline const ::db_user_shop_buy& buy_items(int index) const;
  inline ::db_user_shop_buy* mutable_buy_items(int index);
  inline ::db_user_shop_buy* add_buy_items();
  inline const ::google::protobuf::RepeatedPtrField< ::db_user_shop_buy >&
      buy_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_user_shop_buy >*
      mutable_buy_items();

  // optional .gs_dbs_user_info_op_req.struct_new_arena new_arena = 13;
  inline bool has_new_arena() const;
  inline void clear_new_arena();
  static const int kNewArenaFieldNumber = 13;
  inline const ::gs_dbs_user_info_op_req_struct_new_arena& new_arena() const;
  inline ::gs_dbs_user_info_op_req_struct_new_arena* mutable_new_arena();
  inline ::gs_dbs_user_info_op_req_struct_new_arena* release_new_arena();
  inline void set_allocated_new_arena(::gs_dbs_user_info_op_req_struct_new_arena* new_arena);

  // optional .gs_dbs_user_info_op_req.struct_op_arena op_arena = 14;
  inline bool has_op_arena() const;
  inline void clear_op_arena();
  static const int kOpArenaFieldNumber = 14;
  inline const ::gs_dbs_user_info_op_req_struct_op_arena& op_arena() const;
  inline ::gs_dbs_user_info_op_req_struct_op_arena* mutable_op_arena();
  inline ::gs_dbs_user_info_op_req_struct_op_arena* release_op_arena();
  inline void set_allocated_op_arena(::gs_dbs_user_info_op_req_struct_op_arena* op_arena);

  // optional .gs_dbs_user_info_op_req.struct_clear_arena_team clear_arena_team = 15;
  inline bool has_clear_arena_team() const;
  inline void clear_clear_arena_team();
  static const int kClearArenaTeamFieldNumber = 15;
  inline const ::gs_dbs_user_info_op_req_struct_clear_arena_team& clear_arena_team() const;
  inline ::gs_dbs_user_info_op_req_struct_clear_arena_team* mutable_clear_arena_team();
  inline ::gs_dbs_user_info_op_req_struct_clear_arena_team* release_clear_arena_team();
  inline void set_allocated_clear_arena_team(::gs_dbs_user_info_op_req_struct_clear_arena_team* clear_arena_team);

  // optional .gs_dbs_user_info_op_req.struct_op_arena_challenge arena_challenge = 16;
  inline bool has_arena_challenge() const;
  inline void clear_arena_challenge();
  static const int kArenaChallengeFieldNumber = 16;
  inline const ::gs_dbs_user_info_op_req_struct_op_arena_challenge& arena_challenge() const;
  inline ::gs_dbs_user_info_op_req_struct_op_arena_challenge* mutable_arena_challenge();
  inline ::gs_dbs_user_info_op_req_struct_op_arena_challenge* release_arena_challenge();
  inline void set_allocated_arena_challenge(::gs_dbs_user_info_op_req_struct_op_arena_challenge* arena_challenge);

  // repeated .gs_dbs_user_info_op_req.struct_op_mission missions = 17;
  inline int missions_size() const;
  inline void clear_missions();
  static const int kMissionsFieldNumber = 17;
  inline const ::gs_dbs_user_info_op_req_struct_op_mission& missions(int index) const;
  inline ::gs_dbs_user_info_op_req_struct_op_mission* mutable_missions(int index);
  inline ::gs_dbs_user_info_op_req_struct_op_mission* add_missions();
  inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_mission >&
      missions() const;
  inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_mission >*
      mutable_missions();

  // optional .gs_dbs_user_info_op_req.struct_op_sign sign = 18;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 18;
  inline const ::gs_dbs_user_info_op_req_struct_op_sign& sign() const;
  inline ::gs_dbs_user_info_op_req_struct_op_sign* mutable_sign();
  inline ::gs_dbs_user_info_op_req_struct_op_sign* release_sign();
  inline void set_allocated_sign(::gs_dbs_user_info_op_req_struct_op_sign* sign);

  // optional .gs_dbs_user_info_op_req.struct_new_sign new_sign = 19;
  inline bool has_new_sign() const;
  inline void clear_new_sign();
  static const int kNewSignFieldNumber = 19;
  inline const ::gs_dbs_user_info_op_req_struct_new_sign& new_sign() const;
  inline ::gs_dbs_user_info_op_req_struct_new_sign* mutable_new_sign();
  inline ::gs_dbs_user_info_op_req_struct_new_sign* release_new_sign();
  inline void set_allocated_new_sign(::gs_dbs_user_info_op_req_struct_new_sign* new_sign);

  // optional .gs_dbs_user_info_op_req.struct_op_novice_guide novice_guide = 20;
  inline bool has_novice_guide() const;
  inline void clear_novice_guide();
  static const int kNoviceGuideFieldNumber = 20;
  inline const ::gs_dbs_user_info_op_req_struct_op_novice_guide& novice_guide() const;
  inline ::gs_dbs_user_info_op_req_struct_op_novice_guide* mutable_novice_guide();
  inline ::gs_dbs_user_info_op_req_struct_op_novice_guide* release_novice_guide();
  inline void set_allocated_novice_guide(::gs_dbs_user_info_op_req_struct_op_novice_guide* novice_guide);

  // optional .gs_dbs_user_info_op_req.struct_new_user_statis new_user_statis = 21;
  inline bool has_new_user_statis() const;
  inline void clear_new_user_statis();
  static const int kNewUserStatisFieldNumber = 21;
  inline const ::gs_dbs_user_info_op_req_struct_new_user_statis& new_user_statis() const;
  inline ::gs_dbs_user_info_op_req_struct_new_user_statis* mutable_new_user_statis();
  inline ::gs_dbs_user_info_op_req_struct_new_user_statis* release_new_user_statis();
  inline void set_allocated_new_user_statis(::gs_dbs_user_info_op_req_struct_new_user_statis* new_user_statis);

  // optional .gs_dbs_user_info_op_req.struct_new_mail new_mail = 22;
  inline bool has_new_mail() const;
  inline void clear_new_mail();
  static const int kNewMailFieldNumber = 22;
  inline const ::gs_dbs_user_info_op_req_struct_new_mail& new_mail() const;
  inline ::gs_dbs_user_info_op_req_struct_new_mail* mutable_new_mail();
  inline ::gs_dbs_user_info_op_req_struct_new_mail* release_new_mail();
  inline void set_allocated_new_mail(::gs_dbs_user_info_op_req_struct_new_mail* new_mail);

  // repeated .gs_dbs_user_info_op_req.struct_op_friend op_friends = 23;
  inline int op_friends_size() const;
  inline void clear_op_friends();
  static const int kOpFriendsFieldNumber = 23;
  inline const ::gs_dbs_user_info_op_req_struct_op_friend& op_friends(int index) const;
  inline ::gs_dbs_user_info_op_req_struct_op_friend* mutable_op_friends(int index);
  inline ::gs_dbs_user_info_op_req_struct_op_friend* add_op_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_friend >&
      op_friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_friend >*
      mutable_op_friends();

  // optional .gs_dbs_user_info_op_req.struct_op_crusade op_crusade = 24;
  inline bool has_op_crusade() const;
  inline void clear_op_crusade();
  static const int kOpCrusadeFieldNumber = 24;
  inline const ::gs_dbs_user_info_op_req_struct_op_crusade& op_crusade() const;
  inline ::gs_dbs_user_info_op_req_struct_op_crusade* mutable_op_crusade();
  inline ::gs_dbs_user_info_op_req_struct_op_crusade* release_op_crusade();
  inline void set_allocated_op_crusade(::gs_dbs_user_info_op_req_struct_op_crusade* op_crusade);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_info_op_req)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_base_info();
  inline void clear_has_base_info();
  inline void set_has_sub_task();
  inline void clear_has_sub_task();
  inline void set_has_new_arena();
  inline void clear_has_new_arena();
  inline void set_has_op_arena();
  inline void clear_has_op_arena();
  inline void set_has_clear_arena_team();
  inline void clear_has_clear_arena_team();
  inline void set_has_arena_challenge();
  inline void clear_has_arena_challenge();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_new_sign();
  inline void clear_has_new_sign();
  inline void set_has_novice_guide();
  inline void clear_has_novice_guide();
  inline void set_has_new_user_statis();
  inline void clear_has_new_user_statis();
  inline void set_has_new_mail();
  inline void clear_has_new_mail();
  inline void set_has_op_crusade();
  inline void clear_has_op_crusade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::gs_dbs_user_info_op_req_struct_op_base_info* base_info_;
  ::gs_dbs_user_info_op_req_struct_op_sub_task* sub_task_;
  ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_new_hero > new_heros_;
  ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_base > heros_base_;
  ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_equip > hero_equips_;
  ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_skill > hero_skills_;
  ::google::protobuf::RepeatedPtrField< ::struct_game_element > items_;
  ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_mail > op_mails_;
  ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_shop > shops_;
  ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_shop_item > shop_items_;
  ::google::protobuf::RepeatedPtrField< ::db_user_shop_buy > buy_items_;
  ::gs_dbs_user_info_op_req_struct_new_arena* new_arena_;
  ::gs_dbs_user_info_op_req_struct_op_arena* op_arena_;
  ::gs_dbs_user_info_op_req_struct_clear_arena_team* clear_arena_team_;
  ::gs_dbs_user_info_op_req_struct_op_arena_challenge* arena_challenge_;
  ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_mission > missions_;
  ::gs_dbs_user_info_op_req_struct_op_sign* sign_;
  ::gs_dbs_user_info_op_req_struct_new_sign* new_sign_;
  ::gs_dbs_user_info_op_req_struct_op_novice_guide* novice_guide_;
  ::gs_dbs_user_info_op_req_struct_new_user_statis* new_user_statis_;
  ::gs_dbs_user_info_op_req_struct_new_mail* new_mail_;
  ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_friend > op_friends_;
  ::gs_dbs_user_info_op_req_struct_op_crusade* op_crusade_;
  ::google::protobuf::uint32 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(24 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_info_op_req* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_user_info_op_res : public ::google::protobuf::Message {
 public:
  dbs_gs_user_info_op_res();
  virtual ~dbs_gs_user_info_op_res();

  dbs_gs_user_info_op_res(const dbs_gs_user_info_op_res& from);

  inline dbs_gs_user_info_op_res& operator=(const dbs_gs_user_info_op_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_user_info_op_res& default_instance();

  void Swap(dbs_gs_user_info_op_res* other);

  // implements Message ----------------------------------------------

  dbs_gs_user_info_op_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_user_info_op_res& from);
  void MergeFrom(const dbs_gs_user_info_op_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 error_code() const;
  inline void set_error_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dbs_gs_user_info_op_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_user_info_op_res* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_new_mail_req : public ::google::protobuf::Message {
 public:
  gs_dbs_user_new_mail_req();
  virtual ~gs_dbs_user_new_mail_req();

  gs_dbs_user_new_mail_req(const gs_dbs_user_new_mail_req& from);

  inline gs_dbs_user_new_mail_req& operator=(const gs_dbs_user_new_mail_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_new_mail_req& default_instance();

  void Swap(gs_dbs_user_new_mail_req* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_new_mail_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_new_mail_req& from);
  void MergeFrom(const gs_dbs_user_new_mail_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 send_user_ids = 1;
  inline int send_user_ids_size() const;
  inline void clear_send_user_ids();
  static const int kSendUserIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 send_user_ids(int index) const;
  inline void set_send_user_ids(int index, ::google::protobuf::uint32 value);
  inline void add_send_user_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      send_user_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_send_user_ids();

  // required .db_user_mail mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline const ::db_user_mail& mail() const;
  inline ::db_user_mail* mutable_mail();
  inline ::db_user_mail* release_mail();
  inline void set_allocated_mail(::db_user_mail* mail);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_new_mail_req)
 private:
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > send_user_ids_;
  ::db_user_mail* mail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_new_mail_req* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_user_new_mail_res : public ::google::protobuf::Message {
 public:
  dbs_gs_user_new_mail_res();
  virtual ~dbs_gs_user_new_mail_res();

  dbs_gs_user_new_mail_res(const dbs_gs_user_new_mail_res& from);

  inline dbs_gs_user_new_mail_res& operator=(const dbs_gs_user_new_mail_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_user_new_mail_res& default_instance();

  void Swap(dbs_gs_user_new_mail_res* other);

  // implements Message ----------------------------------------------

  dbs_gs_user_new_mail_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_user_new_mail_res& from);
  void MergeFrom(const dbs_gs_user_new_mail_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 error_code() const;
  inline void set_error_code(::google::protobuf::uint32 value);

  // repeated uint32 user_ids = 2;
  inline int user_ids_size() const;
  inline void clear_user_ids();
  static const int kUserIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 user_ids(int index) const;
  inline void set_user_ids(int index, ::google::protobuf::uint32 value);
  inline void add_user_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      user_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_user_ids();

  // repeated uint32 mail_ids = 3;
  inline int mail_ids_size() const;
  inline void clear_mail_ids();
  static const int kMailIdsFieldNumber = 3;
  inline ::google::protobuf::uint32 mail_ids(int index) const;
  inline void set_mail_ids(int index, ::google::protobuf::uint32 value);
  inline void add_mail_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mail_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mail_ids();

  // repeated uint32 mail_attach_ids = 4;
  inline int mail_attach_ids_size() const;
  inline void clear_mail_attach_ids();
  static const int kMailAttachIdsFieldNumber = 4;
  inline ::google::protobuf::uint32 mail_attach_ids(int index) const;
  inline void set_mail_attach_ids(int index, ::google::protobuf::uint32 value);
  inline void add_mail_attach_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mail_attach_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mail_attach_ids();

  // required .db_user_mail mail = 5;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 5;
  inline const ::db_user_mail& mail() const;
  inline ::db_user_mail* mutable_mail();
  inline ::db_user_mail* release_mail();
  inline void set_allocated_mail(::db_user_mail* mail);

  // @@protoc_insertion_point(class_scope:dbs_gs_user_new_mail_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > user_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mail_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mail_attach_ids_;
  ::db_user_mail* mail_;
  ::google::protobuf::uint32 error_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_user_new_mail_res* default_instance_;
};
// -------------------------------------------------------------------

class arena_mail : public ::google::protobuf::Message {
 public:
  arena_mail();
  virtual ~arena_mail();

  arena_mail(const arena_mail& from);

  inline arena_mail& operator=(const arena_mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const arena_mail& default_instance();

  void Swap(arena_mail* other);

  // implements Message ----------------------------------------------

  arena_mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const arena_mail& from);
  void MergeFrom(const arena_mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .db_user_mail mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline const ::db_user_mail& mail() const;
  inline ::db_user_mail* mutable_mail();
  inline ::db_user_mail* release_mail();
  inline void set_allocated_mail(::db_user_mail* mail);

  // @@protoc_insertion_point(class_scope:arena_mail)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::db_user_mail* mail_;
  ::google::protobuf::uint32 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static arena_mail* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_new_arena_mail_req : public ::google::protobuf::Message {
 public:
  gs_dbs_user_new_arena_mail_req();
  virtual ~gs_dbs_user_new_arena_mail_req();

  gs_dbs_user_new_arena_mail_req(const gs_dbs_user_new_arena_mail_req& from);

  inline gs_dbs_user_new_arena_mail_req& operator=(const gs_dbs_user_new_arena_mail_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_new_arena_mail_req& default_instance();

  void Swap(gs_dbs_user_new_arena_mail_req* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_new_arena_mail_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_new_arena_mail_req& from);
  void MergeFrom(const gs_dbs_user_new_arena_mail_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .arena_mail mails = 1;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 1;
  inline const ::arena_mail& mails(int index) const;
  inline ::arena_mail* mutable_mails(int index);
  inline ::arena_mail* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::arena_mail >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::arena_mail >*
      mutable_mails();

  // @@protoc_insertion_point(class_scope:gs_dbs_user_new_arena_mail_req)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::arena_mail > mails_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_new_arena_mail_req* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_user_new_arena_mail_res : public ::google::protobuf::Message {
 public:
  dbs_gs_user_new_arena_mail_res();
  virtual ~dbs_gs_user_new_arena_mail_res();

  dbs_gs_user_new_arena_mail_res(const dbs_gs_user_new_arena_mail_res& from);

  inline dbs_gs_user_new_arena_mail_res& operator=(const dbs_gs_user_new_arena_mail_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_user_new_arena_mail_res& default_instance();

  void Swap(dbs_gs_user_new_arena_mail_res* other);

  // implements Message ----------------------------------------------

  dbs_gs_user_new_arena_mail_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_user_new_arena_mail_res& from);
  void MergeFrom(const dbs_gs_user_new_arena_mail_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);

  // repeated .arena_mail mails = 2;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 2;
  inline const ::arena_mail& mails(int index) const;
  inline ::arena_mail* mutable_mails(int index);
  inline ::arena_mail* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::arena_mail >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::arena_mail >*
      mutable_mails();

  // @@protoc_insertion_point(class_scope:dbs_gs_user_new_arena_mail_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::arena_mail > mails_;
  ::google::protobuf::int32 error_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_user_new_arena_mail_res* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_edit_name_req : public ::google::protobuf::Message {
 public:
  gs_dbs_edit_name_req();
  virtual ~gs_dbs_edit_name_req();

  gs_dbs_edit_name_req(const gs_dbs_edit_name_req& from);

  inline gs_dbs_edit_name_req& operator=(const gs_dbs_edit_name_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_edit_name_req& default_instance();

  void Swap(gs_dbs_edit_name_req* other);

  // implements Message ----------------------------------------------

  gs_dbs_edit_name_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_edit_name_req& from);
  void MergeFrom(const gs_dbs_edit_name_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:gs_dbs_edit_name_req)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_edit_name_req* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_edit_name_res : public ::google::protobuf::Message {
 public:
  dbs_gs_edit_name_res();
  virtual ~dbs_gs_edit_name_res();

  dbs_gs_edit_name_res(const dbs_gs_edit_name_res& from);

  inline dbs_gs_edit_name_res& operator=(const dbs_gs_edit_name_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_edit_name_res& default_instance();

  void Swap(dbs_gs_edit_name_res* other);

  // implements Message ----------------------------------------------

  dbs_gs_edit_name_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_edit_name_res& from);
  void MergeFrom(const dbs_gs_edit_name_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 error_code() const;
  inline void set_error_code(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:dbs_gs_edit_name_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_code_;
  ::google::protobuf::uint32 user_id_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_edit_name_res* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_user_friend_op_req : public ::google::protobuf::Message {
 public:
  gs_dbs_user_friend_op_req();
  virtual ~gs_dbs_user_friend_op_req();

  gs_dbs_user_friend_op_req(const gs_dbs_user_friend_op_req& from);

  inline gs_dbs_user_friend_op_req& operator=(const gs_dbs_user_friend_op_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_user_friend_op_req& default_instance();

  void Swap(gs_dbs_user_friend_op_req* other);

  // implements Message ----------------------------------------------

  gs_dbs_user_friend_op_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_user_friend_op_req& from);
  void MergeFrom(const gs_dbs_user_friend_op_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef gs_dbs_user_friend_op_req_OP_TYPE OP_TYPE;
  static const OP_TYPE FRIEND_GIVE_ELEMENT = gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_GIVE_ELEMENT;
  static const OP_TYPE FRIEND_GIVE_UP_APPLY = gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_GIVE_UP_APPLY;
  static const OP_TYPE FRIEND_AFFIRM_AGREE = gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_AFFIRM_AGREE;
  static const OP_TYPE FRIEND_AFFIRM_REFUSE = gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_AFFIRM_REFUSE;
  static const OP_TYPE FRIEND_DEL_FRIEND = gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_DEL_FRIEND;
  static const OP_TYPE FRIEND_ADD_FRIEND = gs_dbs_user_friend_op_req_OP_TYPE_FRIEND_ADD_FRIEND;
  static inline bool OP_TYPE_IsValid(int value) {
    return gs_dbs_user_friend_op_req_OP_TYPE_IsValid(value);
  }
  static const OP_TYPE OP_TYPE_MIN =
    gs_dbs_user_friend_op_req_OP_TYPE_OP_TYPE_MIN;
  static const OP_TYPE OP_TYPE_MAX =
    gs_dbs_user_friend_op_req_OP_TYPE_OP_TYPE_MAX;
  static const int OP_TYPE_ARRAYSIZE =
    gs_dbs_user_friend_op_req_OP_TYPE_OP_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OP_TYPE_descriptor() {
    return gs_dbs_user_friend_op_req_OP_TYPE_descriptor();
  }
  static inline const ::std::string& OP_TYPE_Name(OP_TYPE value) {
    return gs_dbs_user_friend_op_req_OP_TYPE_Name(value);
  }
  static inline bool OP_TYPE_Parse(const ::std::string& name,
      OP_TYPE* value) {
    return gs_dbs_user_friend_op_req_OP_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .gs_dbs_user_friend_op_req.OP_TYPE op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_user_friend_op_req_OP_TYPE op_type() const;
  inline void set_op_type(::gs_dbs_user_friend_op_req_OP_TYPE value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional uint32 friend_user_id = 3;
  inline bool has_friend_user_id() const;
  inline void clear_friend_user_id();
  static const int kFriendUserIdFieldNumber = 3;
  inline ::google::protobuf::uint32 friend_user_id() const;
  inline void set_friend_user_id(::google::protobuf::uint32 value);

  // optional .friend_base_info base_info = 4;
  inline bool has_base_info() const;
  inline void clear_base_info();
  static const int kBaseInfoFieldNumber = 4;
  inline const ::friend_base_info& base_info() const;
  inline ::friend_base_info* mutable_base_info();
  inline ::friend_base_info* release_base_info();
  inline void set_allocated_base_info(::friend_base_info* base_info);

  // @@protoc_insertion_point(class_scope:gs_dbs_user_friend_op_req)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_user_id();
  inline void clear_has_friend_user_id();
  inline void set_has_base_info();
  inline void clear_has_base_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 user_id_;
  ::friend_base_info* base_info_;
  ::google::protobuf::uint32 friend_user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_user_friend_op_req* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_user_friend_op_res : public ::google::protobuf::Message {
 public:
  dbs_gs_user_friend_op_res();
  virtual ~dbs_gs_user_friend_op_res();

  dbs_gs_user_friend_op_res(const dbs_gs_user_friend_op_res& from);

  inline dbs_gs_user_friend_op_res& operator=(const dbs_gs_user_friend_op_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_user_friend_op_res& default_instance();

  void Swap(dbs_gs_user_friend_op_res* other);

  // implements Message ----------------------------------------------

  dbs_gs_user_friend_op_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_user_friend_op_res& from);
  void MergeFrom(const dbs_gs_user_friend_op_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 error_code() const;
  inline void set_error_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dbs_gs_user_friend_op_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_user_friend_op_res* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_search_user_req : public ::google::protobuf::Message {
 public:
  gs_dbs_search_user_req();
  virtual ~gs_dbs_search_user_req();

  gs_dbs_search_user_req(const gs_dbs_search_user_req& from);

  inline gs_dbs_search_user_req& operator=(const gs_dbs_search_user_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_search_user_req& default_instance();

  void Swap(gs_dbs_search_user_req* other);

  // implements Message ----------------------------------------------

  gs_dbs_search_user_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_search_user_req& from);
  void MergeFrom(const gs_dbs_search_user_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional uint32 search_id = 2;
  inline bool has_search_id() const;
  inline void clear_search_id();
  static const int kSearchIdFieldNumber = 2;
  inline ::google::protobuf::uint32 search_id() const;
  inline void set_search_id(::google::protobuf::uint32 value);

  // optional string search_name = 3;
  inline bool has_search_name() const;
  inline void clear_search_name();
  static const int kSearchNameFieldNumber = 3;
  inline const ::std::string& search_name() const;
  inline void set_search_name(const ::std::string& value);
  inline void set_search_name(const char* value);
  inline void set_search_name(const char* value, size_t size);
  inline ::std::string* mutable_search_name();
  inline ::std::string* release_search_name();
  inline void set_allocated_search_name(::std::string* search_name);

  // @@protoc_insertion_point(class_scope:gs_dbs_search_user_req)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_search_id();
  inline void clear_has_search_id();
  inline void set_has_search_name();
  inline void clear_has_search_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 search_id_;
  ::std::string* search_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_search_user_req* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_search_user_res : public ::google::protobuf::Message {
 public:
  dbs_gs_search_user_res();
  virtual ~dbs_gs_search_user_res();

  dbs_gs_search_user_res(const dbs_gs_search_user_res& from);

  inline dbs_gs_search_user_res& operator=(const dbs_gs_search_user_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_search_user_res& default_instance();

  void Swap(dbs_gs_search_user_res* other);

  // implements Message ----------------------------------------------

  dbs_gs_search_user_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_search_user_res& from);
  void MergeFrom(const dbs_gs_search_user_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 error_code() const;
  inline void set_error_code(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional .friend_base_info base_info = 3;
  inline bool has_base_info() const;
  inline void clear_base_info();
  static const int kBaseInfoFieldNumber = 3;
  inline const ::friend_base_info& base_info() const;
  inline ::friend_base_info* mutable_base_info();
  inline ::friend_base_info* release_base_info();
  inline void set_allocated_base_info(::friend_base_info* base_info);

  // @@protoc_insertion_point(class_scope:dbs_gs_search_user_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_base_info();
  inline void clear_has_base_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_code_;
  ::google::protobuf::uint32 user_id_;
  ::friend_base_info* base_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_search_user_res* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_friend_offline_req : public ::google::protobuf::Message {
 public:
  gs_dbs_friend_offline_req();
  virtual ~gs_dbs_friend_offline_req();

  gs_dbs_friend_offline_req(const gs_dbs_friend_offline_req& from);

  inline gs_dbs_friend_offline_req& operator=(const gs_dbs_friend_offline_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_friend_offline_req& default_instance();

  void Swap(gs_dbs_friend_offline_req* other);

  // implements Message ----------------------------------------------

  gs_dbs_friend_offline_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_friend_offline_req& from);
  void MergeFrom(const gs_dbs_friend_offline_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef gs_dbs_friend_offline_req_OP_TYPE OP_TYPE;
  static const OP_TYPE ADD_FRIEND = gs_dbs_friend_offline_req_OP_TYPE_ADD_FRIEND;
  static const OP_TYPE AFFIRM_AGREE1 = gs_dbs_friend_offline_req_OP_TYPE_AFFIRM_AGREE1;
  static const OP_TYPE AFFIRM_AGREEN = gs_dbs_friend_offline_req_OP_TYPE_AFFIRM_AGREEN;
  static inline bool OP_TYPE_IsValid(int value) {
    return gs_dbs_friend_offline_req_OP_TYPE_IsValid(value);
  }
  static const OP_TYPE OP_TYPE_MIN =
    gs_dbs_friend_offline_req_OP_TYPE_OP_TYPE_MIN;
  static const OP_TYPE OP_TYPE_MAX =
    gs_dbs_friend_offline_req_OP_TYPE_OP_TYPE_MAX;
  static const int OP_TYPE_ARRAYSIZE =
    gs_dbs_friend_offline_req_OP_TYPE_OP_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OP_TYPE_descriptor() {
    return gs_dbs_friend_offline_req_OP_TYPE_descriptor();
  }
  static inline const ::std::string& OP_TYPE_Name(OP_TYPE value) {
    return gs_dbs_friend_offline_req_OP_TYPE_Name(value);
  }
  static inline bool OP_TYPE_Parse(const ::std::string& name,
      OP_TYPE* value) {
    return gs_dbs_friend_offline_req_OP_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .gs_dbs_friend_offline_req.OP_TYPE op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_friend_offline_req_OP_TYPE op_type() const;
  inline void set_op_type(::gs_dbs_friend_offline_req_OP_TYPE value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional uint32 friend_id = 3;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 3;
  inline ::google::protobuf::uint32 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint32 value);

  // optional .friend_base_info friend_info = 4;
  inline bool has_friend_info() const;
  inline void clear_friend_info();
  static const int kFriendInfoFieldNumber = 4;
  inline const ::friend_base_info& friend_info() const;
  inline ::friend_base_info* mutable_friend_info();
  inline ::friend_base_info* release_friend_info();
  inline void set_allocated_friend_info(::friend_base_info* friend_info);

  // optional .friend_base_info me_info = 5;
  inline bool has_me_info() const;
  inline void clear_me_info();
  static const int kMeInfoFieldNumber = 5;
  inline const ::friend_base_info& me_info() const;
  inline ::friend_base_info* mutable_me_info();
  inline ::friend_base_info* release_me_info();
  inline void set_allocated_me_info(::friend_base_info* me_info);

  // repeated uint32 affirm_ids = 6;
  inline int affirm_ids_size() const;
  inline void clear_affirm_ids();
  static const int kAffirmIdsFieldNumber = 6;
  inline ::google::protobuf::uint32 affirm_ids(int index) const;
  inline void set_affirm_ids(int index, ::google::protobuf::uint32 value);
  inline void add_affirm_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      affirm_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_affirm_ids();

  // @@protoc_insertion_point(class_scope:gs_dbs_friend_offline_req)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_friend_info();
  inline void clear_has_friend_info();
  inline void set_has_me_info();
  inline void clear_has_me_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 user_id_;
  ::friend_base_info* friend_info_;
  ::friend_base_info* me_info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > affirm_ids_;
  ::google::protobuf::uint32 friend_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_friend_offline_req* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_friend_offline_res : public ::google::protobuf::Message {
 public:
  dbs_gs_friend_offline_res();
  virtual ~dbs_gs_friend_offline_res();

  dbs_gs_friend_offline_res(const dbs_gs_friend_offline_res& from);

  inline dbs_gs_friend_offline_res& operator=(const dbs_gs_friend_offline_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_friend_offline_res& default_instance();

  void Swap(dbs_gs_friend_offline_res* other);

  // implements Message ----------------------------------------------

  dbs_gs_friend_offline_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_friend_offline_res& from);
  void MergeFrom(const dbs_gs_friend_offline_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 error_code() const;
  inline void set_error_code(::google::protobuf::uint32 value);

  // required .gs_dbs_friend_offline_req.OP_TYPE op_type = 2;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 2;
  inline ::gs_dbs_friend_offline_req_OP_TYPE op_type() const;
  inline void set_op_type(::gs_dbs_friend_offline_req_OP_TYPE value);

  // required uint32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional .friend_base_info info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::friend_base_info& info() const;
  inline ::friend_base_info* mutable_info();
  inline ::friend_base_info* release_info();
  inline void set_allocated_info(::friend_base_info* info);

  // repeated uint32 affirm_ids = 5;
  inline int affirm_ids_size() const;
  inline void clear_affirm_ids();
  static const int kAffirmIdsFieldNumber = 5;
  inline ::google::protobuf::uint32 affirm_ids(int index) const;
  inline void set_affirm_ids(int index, ::google::protobuf::uint32 value);
  inline void add_affirm_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      affirm_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_affirm_ids();

  // @@protoc_insertion_point(class_scope:dbs_gs_friend_offline_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 error_code_;
  int op_type_;
  ::friend_base_info* info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > affirm_ids_;
  ::google::protobuf::uint32 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_friend_offline_res* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_rank_req : public ::google::protobuf::Message {
 public:
  gs_dbs_rank_req();
  virtual ~gs_dbs_rank_req();

  gs_dbs_rank_req(const gs_dbs_rank_req& from);

  inline gs_dbs_rank_req& operator=(const gs_dbs_rank_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_rank_req& default_instance();

  void Swap(gs_dbs_rank_req* other);

  // implements Message ----------------------------------------------

  gs_dbs_rank_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_rank_req& from);
  void MergeFrom(const gs_dbs_rank_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gs_dbs_rank_req)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_rank_req* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_rank_res_rank_brief_info : public ::google::protobuf::Message {
 public:
  dbs_gs_rank_res_rank_brief_info();
  virtual ~dbs_gs_rank_res_rank_brief_info();

  dbs_gs_rank_res_rank_brief_info(const dbs_gs_rank_res_rank_brief_info& from);

  inline dbs_gs_rank_res_rank_brief_info& operator=(const dbs_gs_rank_res_rank_brief_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_rank_res_rank_brief_info& default_instance();

  void Swap(dbs_gs_rank_res_rank_brief_info* other);

  // implements Message ----------------------------------------------

  dbs_gs_rank_res_rank_brief_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_rank_res_rank_brief_info& from);
  void MergeFrom(const dbs_gs_rank_res_rank_brief_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dbs_gs_rank_res.rank_brief_info)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_rank_res_rank_brief_info* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_rank_res_rank_info : public ::google::protobuf::Message {
 public:
  dbs_gs_rank_res_rank_info();
  virtual ~dbs_gs_rank_res_rank_info();

  dbs_gs_rank_res_rank_info(const dbs_gs_rank_res_rank_info& from);

  inline dbs_gs_rank_res_rank_info& operator=(const dbs_gs_rank_res_rank_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_rank_res_rank_info& default_instance();

  void Swap(dbs_gs_rank_res_rank_info* other);

  // implements Message ----------------------------------------------

  dbs_gs_rank_res_rank_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_rank_res_rank_info& from);
  void MergeFrom(const dbs_gs_rank_res_rank_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 head_id = 2;
  inline bool has_head_id() const;
  inline void clear_head_id();
  static const int kHeadIdFieldNumber = 2;
  inline ::google::protobuf::uint32 head_id() const;
  inline void set_head_id(::google::protobuf::uint32 value);

  // required uint32 head_frame_id = 3;
  inline bool has_head_frame_id() const;
  inline void clear_head_frame_id();
  static const int kHeadFrameIdFieldNumber = 3;
  inline ::google::protobuf::uint32 head_frame_id() const;
  inline void set_head_frame_id(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 vip = 6;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 6;
  inline ::google::protobuf::uint32 vip() const;
  inline void set_vip(::google::protobuf::uint32 value);

  // required uint32 fight_power = 7;
  inline bool has_fight_power() const;
  inline void clear_fight_power();
  static const int kFightPowerFieldNumber = 7;
  inline ::google::protobuf::uint32 fight_power() const;
  inline void set_fight_power(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dbs_gs_rank_res.rank_info)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_head_id();
  inline void clear_has_head_id();
  inline void set_has_head_frame_id();
  inline void clear_has_head_frame_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_fight_power();
  inline void clear_has_fight_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 head_id_;
  ::google::protobuf::uint32 head_frame_id_;
  ::google::protobuf::uint32 level_;
  ::std::string* name_;
  ::google::protobuf::uint32 vip_;
  ::google::protobuf::uint32 fight_power_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_rank_res_rank_info* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_rank_res : public ::google::protobuf::Message {
 public:
  dbs_gs_rank_res();
  virtual ~dbs_gs_rank_res();

  dbs_gs_rank_res(const dbs_gs_rank_res& from);

  inline dbs_gs_rank_res& operator=(const dbs_gs_rank_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_rank_res& default_instance();

  void Swap(dbs_gs_rank_res* other);

  // implements Message ----------------------------------------------

  dbs_gs_rank_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_rank_res& from);
  void MergeFrom(const dbs_gs_rank_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef dbs_gs_rank_res_rank_brief_info rank_brief_info;
  typedef dbs_gs_rank_res_rank_info rank_info;

  // accessors -------------------------------------------------------

  // required uint32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 error_code() const;
  inline void set_error_code(::google::protobuf::uint32 value);

  // repeated .dbs_gs_rank_res.rank_brief_info level_brief_ranks = 2;
  inline int level_brief_ranks_size() const;
  inline void clear_level_brief_ranks();
  static const int kLevelBriefRanksFieldNumber = 2;
  inline const ::dbs_gs_rank_res_rank_brief_info& level_brief_ranks(int index) const;
  inline ::dbs_gs_rank_res_rank_brief_info* mutable_level_brief_ranks(int index);
  inline ::dbs_gs_rank_res_rank_brief_info* add_level_brief_ranks();
  inline const ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_brief_info >&
      level_brief_ranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_brief_info >*
      mutable_level_brief_ranks();

  // repeated .dbs_gs_rank_res.rank_brief_info fight_power_brief_ranks = 3;
  inline int fight_power_brief_ranks_size() const;
  inline void clear_fight_power_brief_ranks();
  static const int kFightPowerBriefRanksFieldNumber = 3;
  inline const ::dbs_gs_rank_res_rank_brief_info& fight_power_brief_ranks(int index) const;
  inline ::dbs_gs_rank_res_rank_brief_info* mutable_fight_power_brief_ranks(int index);
  inline ::dbs_gs_rank_res_rank_brief_info* add_fight_power_brief_ranks();
  inline const ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_brief_info >&
      fight_power_brief_ranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_brief_info >*
      mutable_fight_power_brief_ranks();

  // repeated .dbs_gs_rank_res.rank_info level_ranks = 4;
  inline int level_ranks_size() const;
  inline void clear_level_ranks();
  static const int kLevelRanksFieldNumber = 4;
  inline const ::dbs_gs_rank_res_rank_info& level_ranks(int index) const;
  inline ::dbs_gs_rank_res_rank_info* mutable_level_ranks(int index);
  inline ::dbs_gs_rank_res_rank_info* add_level_ranks();
  inline const ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >&
      level_ranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >*
      mutable_level_ranks();

  // repeated .dbs_gs_rank_res.rank_info fight_power_ranks = 5;
  inline int fight_power_ranks_size() const;
  inline void clear_fight_power_ranks();
  static const int kFightPowerRanksFieldNumber = 5;
  inline const ::dbs_gs_rank_res_rank_info& fight_power_ranks(int index) const;
  inline ::dbs_gs_rank_res_rank_info* mutable_fight_power_ranks(int index);
  inline ::dbs_gs_rank_res_rank_info* add_fight_power_ranks();
  inline const ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >&
      fight_power_ranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >*
      mutable_fight_power_ranks();

  // repeated .dbs_gs_rank_res.rank_info arena_ranks = 6;
  inline int arena_ranks_size() const;
  inline void clear_arena_ranks();
  static const int kArenaRanksFieldNumber = 6;
  inline const ::dbs_gs_rank_res_rank_info& arena_ranks(int index) const;
  inline ::dbs_gs_rank_res_rank_info* mutable_arena_ranks(int index);
  inline ::dbs_gs_rank_res_rank_info* add_arena_ranks();
  inline const ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >&
      arena_ranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >*
      mutable_arena_ranks();

  // @@protoc_insertion_point(class_scope:dbs_gs_rank_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_brief_info > level_brief_ranks_;
  ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_brief_info > fight_power_brief_ranks_;
  ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info > level_ranks_;
  ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info > fight_power_ranks_;
  ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info > arena_ranks_;
  ::google::protobuf::uint32 error_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_rank_res* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_new_guild : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_new_guild();
  virtual ~gs_dbs_guild_op_req_struct_new_guild();

  gs_dbs_guild_op_req_struct_new_guild(const gs_dbs_guild_op_req_struct_new_guild& from);

  inline gs_dbs_guild_op_req_struct_new_guild& operator=(const gs_dbs_guild_op_req_struct_new_guild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_new_guild& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_new_guild* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_new_guild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_new_guild& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_new_guild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 creator_user_id = 3;
  inline bool has_creator_user_id() const;
  inline void clear_creator_user_id();
  static const int kCreatorUserIdFieldNumber = 3;
  inline ::google::protobuf::uint32 creator_user_id() const;
  inline void set_creator_user_id(::google::protobuf::uint32 value);

  // required uint32 create_time = 4;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 create_time() const;
  inline void set_create_time(::google::protobuf::uint32 value);

  // required uint32 president_user_id = 5;
  inline bool has_president_user_id() const;
  inline void clear_president_user_id();
  static const int kPresidentUserIdFieldNumber = 5;
  inline ::google::protobuf::uint32 president_user_id() const;
  inline void set_president_user_id(::google::protobuf::uint32 value);

  // required .e_apply_switch_status status = 6;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 6;
  inline ::e_apply_switch_status status() const;
  inline void set_status(::e_apply_switch_status value);

  // required uint32 flag = 7;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 7;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // required uint32 contribution_point = 9;
  inline bool has_contribution_point() const;
  inline void clear_contribution_point();
  static const int kContributionPointFieldNumber = 9;
  inline ::google::protobuf::uint32 contribution_point() const;
  inline void set_contribution_point(::google::protobuf::uint32 value);

  // required uint32 coin = 10;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 10;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required string announcement = 11;
  inline bool has_announcement() const;
  inline void clear_announcement();
  static const int kAnnouncementFieldNumber = 11;
  inline const ::std::string& announcement() const;
  inline void set_announcement(const ::std::string& value);
  inline void set_announcement(const char* value);
  inline void set_announcement(const char* value, size_t size);
  inline ::std::string* mutable_announcement();
  inline ::std::string* release_announcement();
  inline void set_allocated_announcement(::std::string* announcement);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_new_guild)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_creator_user_id();
  inline void clear_has_creator_user_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_president_user_id();
  inline void clear_has_president_user_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_contribution_point();
  inline void clear_has_contribution_point();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_announcement();
  inline void clear_has_announcement();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;
  ::std::string* name_;
  ::google::protobuf::uint32 creator_user_id_;
  ::google::protobuf::uint32 create_time_;
  ::google::protobuf::uint32 president_user_id_;
  int status_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 contribution_point_;
  ::std::string* announcement_;
  ::google::protobuf::uint32 coin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_new_guild* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_update_guild : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_update_guild();
  virtual ~gs_dbs_guild_op_req_struct_update_guild();

  gs_dbs_guild_op_req_struct_update_guild(const gs_dbs_guild_op_req_struct_update_guild& from);

  inline gs_dbs_guild_op_req_struct_update_guild& operator=(const gs_dbs_guild_op_req_struct_update_guild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_update_guild& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_update_guild* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_update_guild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_update_guild& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_update_guild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 president_user_id = 3;
  inline bool has_president_user_id() const;
  inline void clear_president_user_id();
  static const int kPresidentUserIdFieldNumber = 3;
  inline ::google::protobuf::uint32 president_user_id() const;
  inline void set_president_user_id(::google::protobuf::uint32 value);

  // optional .e_apply_switch_status status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::e_apply_switch_status status() const;
  inline void set_status(::e_apply_switch_status value);

  // optional uint32 flag = 5;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 5;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // optional uint32 contribution_point = 6;
  inline bool has_contribution_point() const;
  inline void clear_contribution_point();
  static const int kContributionPointFieldNumber = 6;
  inline ::google::protobuf::uint32 contribution_point() const;
  inline void set_contribution_point(::google::protobuf::uint32 value);

  // optional uint32 coin = 7;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 7;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // optional string announcement = 8;
  inline bool has_announcement() const;
  inline void clear_announcement();
  static const int kAnnouncementFieldNumber = 8;
  inline const ::std::string& announcement() const;
  inline void set_announcement(const ::std::string& value);
  inline void set_announcement(const char* value);
  inline void set_announcement(const char* value, size_t size);
  inline ::std::string* mutable_announcement();
  inline ::std::string* release_announcement();
  inline void set_allocated_announcement(::std::string* announcement);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_update_guild)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_president_user_id();
  inline void clear_has_president_user_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_contribution_point();
  inline void clear_has_contribution_point();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_announcement();
  inline void clear_has_announcement();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 president_user_id_;
  int status_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 contribution_point_;
  ::google::protobuf::uint32 coin_;
  ::std::string* announcement_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_update_guild* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_delete_guild : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_delete_guild();
  virtual ~gs_dbs_guild_op_req_struct_delete_guild();

  gs_dbs_guild_op_req_struct_delete_guild(const gs_dbs_guild_op_req_struct_delete_guild& from);

  inline gs_dbs_guild_op_req_struct_delete_guild& operator=(const gs_dbs_guild_op_req_struct_delete_guild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_delete_guild& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_delete_guild* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_delete_guild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_delete_guild& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_delete_guild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_delete_guild)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 guild_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_delete_guild* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_new_apply : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_new_apply();
  virtual ~gs_dbs_guild_op_req_struct_new_apply();

  gs_dbs_guild_op_req_struct_new_apply(const gs_dbs_guild_op_req_struct_new_apply& from);

  inline gs_dbs_guild_op_req_struct_new_apply& operator=(const gs_dbs_guild_op_req_struct_new_apply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_new_apply& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_new_apply* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_new_apply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_new_apply& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_new_apply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 guild_ids = 1;
  inline int guild_ids_size() const;
  inline void clear_guild_ids();
  static const int kGuildIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_ids(int index) const;
  inline void set_guild_ids(int index, ::google::protobuf::uint32 value);
  inline void add_guild_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      guild_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_guild_ids();

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_new_apply)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > guild_ids_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_new_apply* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_delete_apply : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_delete_apply();
  virtual ~gs_dbs_guild_op_req_struct_delete_apply();

  gs_dbs_guild_op_req_struct_delete_apply(const gs_dbs_guild_op_req_struct_delete_apply& from);

  inline gs_dbs_guild_op_req_struct_delete_apply& operator=(const gs_dbs_guild_op_req_struct_delete_apply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_delete_apply& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_delete_apply* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_delete_apply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_delete_apply& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_delete_apply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef gs_dbs_guild_op_req_struct_delete_apply_EOPType EOPType;
  static const EOPType G1_A1 = gs_dbs_guild_op_req_struct_delete_apply_EOPType_G1_A1;
  static const EOPType G1_AN = gs_dbs_guild_op_req_struct_delete_apply_EOPType_G1_AN;
  static const EOPType A1_GN = gs_dbs_guild_op_req_struct_delete_apply_EOPType_A1_GN;
  static inline bool EOPType_IsValid(int value) {
    return gs_dbs_guild_op_req_struct_delete_apply_EOPType_IsValid(value);
  }
  static const EOPType EOPType_MIN =
    gs_dbs_guild_op_req_struct_delete_apply_EOPType_EOPType_MIN;
  static const EOPType EOPType_MAX =
    gs_dbs_guild_op_req_struct_delete_apply_EOPType_EOPType_MAX;
  static const int EOPType_ARRAYSIZE =
    gs_dbs_guild_op_req_struct_delete_apply_EOPType_EOPType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EOPType_descriptor() {
    return gs_dbs_guild_op_req_struct_delete_apply_EOPType_descriptor();
  }
  static inline const ::std::string& EOPType_Name(EOPType value) {
    return gs_dbs_guild_op_req_struct_delete_apply_EOPType_Name(value);
  }
  static inline bool EOPType_Parse(const ::std::string& name,
      EOPType* value) {
    return gs_dbs_guild_op_req_struct_delete_apply_EOPType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .gs_dbs_guild_op_req.struct_delete_apply.EOPType op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_guild_op_req_struct_delete_apply_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_guild_op_req_struct_delete_apply_EOPType value);

  // optional uint32 guild_id = 2;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // optional uint32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_delete_apply)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_delete_apply* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_new_member : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_new_member();
  virtual ~gs_dbs_guild_op_req_struct_new_member();

  gs_dbs_guild_op_req_struct_new_member(const gs_dbs_guild_op_req_struct_new_member& from);

  inline gs_dbs_guild_op_req_struct_new_member& operator=(const gs_dbs_guild_op_req_struct_new_member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_new_member& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_new_member* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_new_member* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_new_member& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_new_member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .e_guild_position position = 3;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 3;
  inline ::e_guild_position position() const;
  inline void set_position(::e_guild_position value);

  // required uint32 join_time = 4;
  inline bool has_join_time() const;
  inline void clear_join_time();
  static const int kJoinTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 join_time() const;
  inline void set_join_time(::google::protobuf::uint32 value);

  // required uint32 leave_time = 5;
  inline bool has_leave_time() const;
  inline void clear_leave_time();
  static const int kLeaveTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 leave_time() const;
  inline void set_leave_time(::google::protobuf::uint32 value);

  // required uint32 contribution_point = 6;
  inline bool has_contribution_point() const;
  inline void clear_contribution_point();
  static const int kContributionPointFieldNumber = 6;
  inline ::google::protobuf::uint32 contribution_point() const;
  inline void set_contribution_point(::google::protobuf::uint32 value);

  // required uint32 coin = 7;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 7;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_new_member)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_join_time();
  inline void clear_has_join_time();
  inline void set_has_leave_time();
  inline void clear_has_leave_time();
  inline void set_has_contribution_point();
  inline void clear_has_contribution_point();
  inline void set_has_coin();
  inline void clear_has_coin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 user_id_;
  int position_;
  ::google::protobuf::uint32 join_time_;
  ::google::protobuf::uint32 leave_time_;
  ::google::protobuf::uint32 contribution_point_;
  ::google::protobuf::uint32 coin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_new_member* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_update_member : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_update_member();
  virtual ~gs_dbs_guild_op_req_struct_update_member();

  gs_dbs_guild_op_req_struct_update_member(const gs_dbs_guild_op_req_struct_update_member& from);

  inline gs_dbs_guild_op_req_struct_update_member& operator=(const gs_dbs_guild_op_req_struct_update_member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_update_member& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_update_member* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_update_member* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_update_member& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_update_member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional .e_guild_position position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::e_guild_position position() const;
  inline void set_position(::e_guild_position value);

  // optional uint32 join_time = 3;
  inline bool has_join_time() const;
  inline void clear_join_time();
  static const int kJoinTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 join_time() const;
  inline void set_join_time(::google::protobuf::uint32 value);

  // optional uint32 leave_time = 4;
  inline bool has_leave_time() const;
  inline void clear_leave_time();
  static const int kLeaveTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 leave_time() const;
  inline void set_leave_time(::google::protobuf::uint32 value);

  // optional uint32 contribution_point = 5;
  inline bool has_contribution_point() const;
  inline void clear_contribution_point();
  static const int kContributionPointFieldNumber = 5;
  inline ::google::protobuf::uint32 contribution_point() const;
  inline void set_contribution_point(::google::protobuf::uint32 value);

  // optional uint32 coin = 6;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 6;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // optional uint32 new_guild_id = 7;
  inline bool has_new_guild_id() const;
  inline void clear_new_guild_id();
  static const int kNewGuildIdFieldNumber = 7;
  inline ::google::protobuf::uint32 new_guild_id() const;
  inline void set_new_guild_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_update_member)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_join_time();
  inline void clear_has_join_time();
  inline void set_has_leave_time();
  inline void clear_has_leave_time();
  inline void set_has_contribution_point();
  inline void clear_has_contribution_point();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_new_guild_id();
  inline void clear_has_new_guild_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 user_id_;
  int position_;
  ::google::protobuf::uint32 join_time_;
  ::google::protobuf::uint32 leave_time_;
  ::google::protobuf::uint32 contribution_point_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 new_guild_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_update_member* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_new_boss : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_new_boss();
  virtual ~gs_dbs_guild_op_req_struct_new_boss();

  gs_dbs_guild_op_req_struct_new_boss(const gs_dbs_guild_op_req_struct_new_boss& from);

  inline gs_dbs_guild_op_req_struct_new_boss& operator=(const gs_dbs_guild_op_req_struct_new_boss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_new_boss& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_new_boss* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_new_boss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_new_boss& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_new_boss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // required uint32 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // required uint32 lose_hp = 3;
  inline bool has_lose_hp() const;
  inline void clear_lose_hp();
  static const int kLoseHpFieldNumber = 3;
  inline ::google::protobuf::uint32 lose_hp() const;
  inline void set_lose_hp(::google::protobuf::uint32 value);

  // required uint32 killer_user_id = 4;
  inline bool has_killer_user_id() const;
  inline void clear_killer_user_id();
  static const int kKillerUserIdFieldNumber = 4;
  inline ::google::protobuf::uint32 killer_user_id() const;
  inline void set_killer_user_id(::google::protobuf::uint32 value);

  // required uint32 killed_num = 5;
  inline bool has_killed_num() const;
  inline void clear_killed_num();
  static const int kKilledNumFieldNumber = 5;
  inline ::google::protobuf::uint32 killed_num() const;
  inline void set_killed_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_new_boss)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_lose_hp();
  inline void clear_has_lose_hp();
  inline void set_has_killer_user_id();
  inline void clear_has_killer_user_id();
  inline void set_has_killed_num();
  inline void clear_has_killed_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::uint32 lose_hp_;
  ::google::protobuf::uint32 killer_user_id_;
  ::google::protobuf::uint32 killed_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_new_boss* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_update_boss : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_update_boss();
  virtual ~gs_dbs_guild_op_req_struct_update_boss();

  gs_dbs_guild_op_req_struct_update_boss(const gs_dbs_guild_op_req_struct_update_boss& from);

  inline gs_dbs_guild_op_req_struct_update_boss& operator=(const gs_dbs_guild_op_req_struct_update_boss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_update_boss& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_update_boss* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_update_boss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_update_boss& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_update_boss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // required uint32 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // optional uint32 lose_hp = 3;
  inline bool has_lose_hp() const;
  inline void clear_lose_hp();
  static const int kLoseHpFieldNumber = 3;
  inline ::google::protobuf::uint32 lose_hp() const;
  inline void set_lose_hp(::google::protobuf::uint32 value);

  // optional uint32 killer_user_id = 4;
  inline bool has_killer_user_id() const;
  inline void clear_killer_user_id();
  static const int kKillerUserIdFieldNumber = 4;
  inline ::google::protobuf::uint32 killer_user_id() const;
  inline void set_killer_user_id(::google::protobuf::uint32 value);

  // optional uint32 killed_num = 5;
  inline bool has_killed_num() const;
  inline void clear_killed_num();
  static const int kKilledNumFieldNumber = 5;
  inline ::google::protobuf::uint32 killed_num() const;
  inline void set_killed_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_update_boss)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_lose_hp();
  inline void clear_has_lose_hp();
  inline void set_has_killer_user_id();
  inline void clear_has_killer_user_id();
  inline void set_has_killed_num();
  inline void clear_has_killed_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 guild_id_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::uint32 lose_hp_;
  ::google::protobuf::uint32 killer_user_id_;
  ::google::protobuf::uint32 killed_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_update_boss* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_new_boss_attacker : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_new_boss_attacker();
  virtual ~gs_dbs_guild_op_req_struct_new_boss_attacker();

  gs_dbs_guild_op_req_struct_new_boss_attacker(const gs_dbs_guild_op_req_struct_new_boss_attacker& from);

  inline gs_dbs_guild_op_req_struct_new_boss_attacker& operator=(const gs_dbs_guild_op_req_struct_new_boss_attacker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_new_boss_attacker& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_new_boss_attacker* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_new_boss_attacker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_new_boss_attacker& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_new_boss_attacker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 boss_position = 2;
  inline bool has_boss_position() const;
  inline void clear_boss_position();
  static const int kBossPositionFieldNumber = 2;
  inline ::google::protobuf::uint32 boss_position() const;
  inline void set_boss_position(::google::protobuf::uint32 value);

  // required uint32 boss_lose_hp = 3;
  inline bool has_boss_lose_hp() const;
  inline void clear_boss_lose_hp();
  static const int kBossLoseHpFieldNumber = 3;
  inline ::google::protobuf::uint32 boss_lose_hp() const;
  inline void set_boss_lose_hp(::google::protobuf::uint32 value);

  // required uint32 last_reset_time = 4;
  inline bool has_last_reset_time() const;
  inline void clear_last_reset_time();
  static const int kLastResetTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 last_reset_time() const;
  inline void set_last_reset_time(::google::protobuf::uint32 value);

  // required uint32 last_day_reset_num = 5;
  inline bool has_last_day_reset_num() const;
  inline void clear_last_day_reset_num();
  static const int kLastDayResetNumFieldNumber = 5;
  inline ::google::protobuf::uint32 last_day_reset_num() const;
  inline void set_last_day_reset_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_new_boss_attacker)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_boss_position();
  inline void clear_has_boss_position();
  inline void set_has_boss_lose_hp();
  inline void clear_has_boss_lose_hp();
  inline void set_has_last_reset_time();
  inline void clear_has_last_reset_time();
  inline void set_has_last_day_reset_num();
  inline void clear_has_last_day_reset_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 boss_position_;
  ::google::protobuf::uint32 boss_lose_hp_;
  ::google::protobuf::uint32 last_reset_time_;
  ::google::protobuf::uint32 last_day_reset_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_new_boss_attacker* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_delete_boss_attacker : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_delete_boss_attacker();
  virtual ~gs_dbs_guild_op_req_struct_delete_boss_attacker();

  gs_dbs_guild_op_req_struct_delete_boss_attacker(const gs_dbs_guild_op_req_struct_delete_boss_attacker& from);

  inline gs_dbs_guild_op_req_struct_delete_boss_attacker& operator=(const gs_dbs_guild_op_req_struct_delete_boss_attacker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_delete_boss_attacker& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_delete_boss_attacker* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_delete_boss_attacker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_delete_boss_attacker& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_delete_boss_attacker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType EOPType;
  static const EOPType M1_B1 = gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_M1_B1;
  static const EOPType M1_BN = gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_M1_BN;
  static const EOPType MN_B1 = gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_MN_B1;
  static const EOPType MN_BN = gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_MN_BN;
  static inline bool EOPType_IsValid(int value) {
    return gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_IsValid(value);
  }
  static const EOPType EOPType_MIN =
    gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_EOPType_MIN;
  static const EOPType EOPType_MAX =
    gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_EOPType_MAX;
  static const int EOPType_ARRAYSIZE =
    gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_EOPType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EOPType_descriptor() {
    return gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_descriptor();
  }
  static inline const ::std::string& EOPType_Name(EOPType value) {
    return gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_Name(value);
  }
  static inline bool EOPType_Parse(const ::std::string& name,
      EOPType* value) {
    return gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .gs_dbs_guild_op_req.struct_delete_boss_attacker.EOPType op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType value);

  // optional uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional uint32 boss_position = 3;
  inline bool has_boss_position() const;
  inline void clear_boss_position();
  static const int kBossPositionFieldNumber = 3;
  inline ::google::protobuf::uint32 boss_position() const;
  inline void set_boss_position(::google::protobuf::uint32 value);

  // optional uint32 guild_id = 4;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 4;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_delete_boss_attacker)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_boss_position();
  inline void clear_has_boss_position();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 boss_position_;
  ::google::protobuf::uint32 guild_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_delete_boss_attacker* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_new_dead_hero : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_new_dead_hero();
  virtual ~gs_dbs_guild_op_req_struct_new_dead_hero();

  gs_dbs_guild_op_req_struct_new_dead_hero(const gs_dbs_guild_op_req_struct_new_dead_hero& from);

  inline gs_dbs_guild_op_req_struct_new_dead_hero& operator=(const gs_dbs_guild_op_req_struct_new_dead_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_new_dead_hero& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_new_dead_hero* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_new_dead_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_new_dead_hero& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_new_dead_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 boss_position = 2;
  inline bool has_boss_position() const;
  inline void clear_boss_position();
  static const int kBossPositionFieldNumber = 2;
  inline ::google::protobuf::uint32 boss_position() const;
  inline void set_boss_position(::google::protobuf::uint32 value);

  // repeated uint32 heros_id = 3;
  inline int heros_id_size() const;
  inline void clear_heros_id();
  static const int kHerosIdFieldNumber = 3;
  inline ::google::protobuf::uint32 heros_id(int index) const;
  inline void set_heros_id(int index, ::google::protobuf::uint32 value);
  inline void add_heros_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heros_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heros_id();

  // required uint32 dead_time = 4;
  inline bool has_dead_time() const;
  inline void clear_dead_time();
  static const int kDeadTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 dead_time() const;
  inline void set_dead_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_new_dead_hero)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_boss_position();
  inline void clear_has_boss_position();
  inline void set_has_dead_time();
  inline void clear_has_dead_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 boss_position_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heros_id_;
  ::google::protobuf::uint32 dead_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_new_dead_hero* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req_struct_delete_dead_hero : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req_struct_delete_dead_hero();
  virtual ~gs_dbs_guild_op_req_struct_delete_dead_hero();

  gs_dbs_guild_op_req_struct_delete_dead_hero(const gs_dbs_guild_op_req_struct_delete_dead_hero& from);

  inline gs_dbs_guild_op_req_struct_delete_dead_hero& operator=(const gs_dbs_guild_op_req_struct_delete_dead_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req_struct_delete_dead_hero& default_instance();

  void Swap(gs_dbs_guild_op_req_struct_delete_dead_hero* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req_struct_delete_dead_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req_struct_delete_dead_hero& from);
  void MergeFrom(const gs_dbs_guild_op_req_struct_delete_dead_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType EOPType;
  static const EOPType M1 = gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_M1;
  static const EOPType MN = gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_MN;
  static inline bool EOPType_IsValid(int value) {
    return gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_IsValid(value);
  }
  static const EOPType EOPType_MIN =
    gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_EOPType_MIN;
  static const EOPType EOPType_MAX =
    gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_EOPType_MAX;
  static const int EOPType_ARRAYSIZE =
    gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_EOPType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EOPType_descriptor() {
    return gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_descriptor();
  }
  static inline const ::std::string& EOPType_Name(EOPType value) {
    return gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_Name(value);
  }
  static inline bool EOPType_Parse(const ::std::string& name,
      EOPType* value) {
    return gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .gs_dbs_guild_op_req.struct_delete_dead_hero.EOPType op_type = 1;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  inline ::gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType op_type() const;
  inline void set_op_type(::gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType value);

  // required uint32 boss_position = 2;
  inline bool has_boss_position() const;
  inline void clear_boss_position();
  static const int kBossPositionFieldNumber = 2;
  inline ::google::protobuf::uint32 boss_position() const;
  inline void set_boss_position(::google::protobuf::uint32 value);

  // optional uint32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional uint32 guild_id = 4;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 4;
  inline ::google::protobuf::uint32 guild_id() const;
  inline void set_guild_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req.struct_delete_dead_hero)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_boss_position();
  inline void clear_has_boss_position();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int op_type_;
  ::google::protobuf::uint32 boss_position_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 guild_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req_struct_delete_dead_hero* default_instance_;
};
// -------------------------------------------------------------------

class gs_dbs_guild_op_req : public ::google::protobuf::Message {
 public:
  gs_dbs_guild_op_req();
  virtual ~gs_dbs_guild_op_req();

  gs_dbs_guild_op_req(const gs_dbs_guild_op_req& from);

  inline gs_dbs_guild_op_req& operator=(const gs_dbs_guild_op_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_dbs_guild_op_req& default_instance();

  void Swap(gs_dbs_guild_op_req* other);

  // implements Message ----------------------------------------------

  gs_dbs_guild_op_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_dbs_guild_op_req& from);
  void MergeFrom(const gs_dbs_guild_op_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef gs_dbs_guild_op_req_struct_new_guild struct_new_guild;
  typedef gs_dbs_guild_op_req_struct_update_guild struct_update_guild;
  typedef gs_dbs_guild_op_req_struct_delete_guild struct_delete_guild;
  typedef gs_dbs_guild_op_req_struct_new_apply struct_new_apply;
  typedef gs_dbs_guild_op_req_struct_delete_apply struct_delete_apply;
  typedef gs_dbs_guild_op_req_struct_new_member struct_new_member;
  typedef gs_dbs_guild_op_req_struct_update_member struct_update_member;
  typedef gs_dbs_guild_op_req_struct_new_boss struct_new_boss;
  typedef gs_dbs_guild_op_req_struct_update_boss struct_update_boss;
  typedef gs_dbs_guild_op_req_struct_new_boss_attacker struct_new_boss_attacker;
  typedef gs_dbs_guild_op_req_struct_delete_boss_attacker struct_delete_boss_attacker;
  typedef gs_dbs_guild_op_req_struct_new_dead_hero struct_new_dead_hero;
  typedef gs_dbs_guild_op_req_struct_delete_dead_hero struct_delete_dead_hero;

  // accessors -------------------------------------------------------

  // optional .gs_dbs_guild_op_req.struct_new_guild new_guild = 1;
  inline bool has_new_guild() const;
  inline void clear_new_guild();
  static const int kNewGuildFieldNumber = 1;
  inline const ::gs_dbs_guild_op_req_struct_new_guild& new_guild() const;
  inline ::gs_dbs_guild_op_req_struct_new_guild* mutable_new_guild();
  inline ::gs_dbs_guild_op_req_struct_new_guild* release_new_guild();
  inline void set_allocated_new_guild(::gs_dbs_guild_op_req_struct_new_guild* new_guild);

  // optional .gs_dbs_guild_op_req.struct_update_guild update_guild = 2;
  inline bool has_update_guild() const;
  inline void clear_update_guild();
  static const int kUpdateGuildFieldNumber = 2;
  inline const ::gs_dbs_guild_op_req_struct_update_guild& update_guild() const;
  inline ::gs_dbs_guild_op_req_struct_update_guild* mutable_update_guild();
  inline ::gs_dbs_guild_op_req_struct_update_guild* release_update_guild();
  inline void set_allocated_update_guild(::gs_dbs_guild_op_req_struct_update_guild* update_guild);

  // optional .gs_dbs_guild_op_req.struct_delete_guild delete_guild = 3;
  inline bool has_delete_guild() const;
  inline void clear_delete_guild();
  static const int kDeleteGuildFieldNumber = 3;
  inline const ::gs_dbs_guild_op_req_struct_delete_guild& delete_guild() const;
  inline ::gs_dbs_guild_op_req_struct_delete_guild* mutable_delete_guild();
  inline ::gs_dbs_guild_op_req_struct_delete_guild* release_delete_guild();
  inline void set_allocated_delete_guild(::gs_dbs_guild_op_req_struct_delete_guild* delete_guild);

  // optional .gs_dbs_guild_op_req.struct_new_apply new_apply = 4;
  inline bool has_new_apply() const;
  inline void clear_new_apply();
  static const int kNewApplyFieldNumber = 4;
  inline const ::gs_dbs_guild_op_req_struct_new_apply& new_apply() const;
  inline ::gs_dbs_guild_op_req_struct_new_apply* mutable_new_apply();
  inline ::gs_dbs_guild_op_req_struct_new_apply* release_new_apply();
  inline void set_allocated_new_apply(::gs_dbs_guild_op_req_struct_new_apply* new_apply);

  // optional .gs_dbs_guild_op_req.struct_delete_apply delete_apply = 5;
  inline bool has_delete_apply() const;
  inline void clear_delete_apply();
  static const int kDeleteApplyFieldNumber = 5;
  inline const ::gs_dbs_guild_op_req_struct_delete_apply& delete_apply() const;
  inline ::gs_dbs_guild_op_req_struct_delete_apply* mutable_delete_apply();
  inline ::gs_dbs_guild_op_req_struct_delete_apply* release_delete_apply();
  inline void set_allocated_delete_apply(::gs_dbs_guild_op_req_struct_delete_apply* delete_apply);

  // optional .gs_dbs_guild_op_req.struct_new_member new_member = 6;
  inline bool has_new_member() const;
  inline void clear_new_member();
  static const int kNewMemberFieldNumber = 6;
  inline const ::gs_dbs_guild_op_req_struct_new_member& new_member() const;
  inline ::gs_dbs_guild_op_req_struct_new_member* mutable_new_member();
  inline ::gs_dbs_guild_op_req_struct_new_member* release_new_member();
  inline void set_allocated_new_member(::gs_dbs_guild_op_req_struct_new_member* new_member);

  // repeated .gs_dbs_guild_op_req.struct_update_member update_members = 7;
  inline int update_members_size() const;
  inline void clear_update_members();
  static const int kUpdateMembersFieldNumber = 7;
  inline const ::gs_dbs_guild_op_req_struct_update_member& update_members(int index) const;
  inline ::gs_dbs_guild_op_req_struct_update_member* mutable_update_members(int index);
  inline ::gs_dbs_guild_op_req_struct_update_member* add_update_members();
  inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_guild_op_req_struct_update_member >&
      update_members() const;
  inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_guild_op_req_struct_update_member >*
      mutable_update_members();

  // optional .gs_dbs_guild_op_req.struct_new_boss new_boss = 9;
  inline bool has_new_boss() const;
  inline void clear_new_boss();
  static const int kNewBossFieldNumber = 9;
  inline const ::gs_dbs_guild_op_req_struct_new_boss& new_boss() const;
  inline ::gs_dbs_guild_op_req_struct_new_boss* mutable_new_boss();
  inline ::gs_dbs_guild_op_req_struct_new_boss* release_new_boss();
  inline void set_allocated_new_boss(::gs_dbs_guild_op_req_struct_new_boss* new_boss);

  // optional .gs_dbs_guild_op_req.struct_update_boss update_boss = 10;
  inline bool has_update_boss() const;
  inline void clear_update_boss();
  static const int kUpdateBossFieldNumber = 10;
  inline const ::gs_dbs_guild_op_req_struct_update_boss& update_boss() const;
  inline ::gs_dbs_guild_op_req_struct_update_boss* mutable_update_boss();
  inline ::gs_dbs_guild_op_req_struct_update_boss* release_update_boss();
  inline void set_allocated_update_boss(::gs_dbs_guild_op_req_struct_update_boss* update_boss);

  // optional .gs_dbs_guild_op_req.struct_new_boss_attacker new_boss_attacker = 11;
  inline bool has_new_boss_attacker() const;
  inline void clear_new_boss_attacker();
  static const int kNewBossAttackerFieldNumber = 11;
  inline const ::gs_dbs_guild_op_req_struct_new_boss_attacker& new_boss_attacker() const;
  inline ::gs_dbs_guild_op_req_struct_new_boss_attacker* mutable_new_boss_attacker();
  inline ::gs_dbs_guild_op_req_struct_new_boss_attacker* release_new_boss_attacker();
  inline void set_allocated_new_boss_attacker(::gs_dbs_guild_op_req_struct_new_boss_attacker* new_boss_attacker);

  // optional .gs_dbs_guild_op_req.struct_delete_boss_attacker delete_boss_attacker = 13;
  inline bool has_delete_boss_attacker() const;
  inline void clear_delete_boss_attacker();
  static const int kDeleteBossAttackerFieldNumber = 13;
  inline const ::gs_dbs_guild_op_req_struct_delete_boss_attacker& delete_boss_attacker() const;
  inline ::gs_dbs_guild_op_req_struct_delete_boss_attacker* mutable_delete_boss_attacker();
  inline ::gs_dbs_guild_op_req_struct_delete_boss_attacker* release_delete_boss_attacker();
  inline void set_allocated_delete_boss_attacker(::gs_dbs_guild_op_req_struct_delete_boss_attacker* delete_boss_attacker);

  // optional .gs_dbs_guild_op_req.struct_new_dead_hero new_dead_hero = 14;
  inline bool has_new_dead_hero() const;
  inline void clear_new_dead_hero();
  static const int kNewDeadHeroFieldNumber = 14;
  inline const ::gs_dbs_guild_op_req_struct_new_dead_hero& new_dead_hero() const;
  inline ::gs_dbs_guild_op_req_struct_new_dead_hero* mutable_new_dead_hero();
  inline ::gs_dbs_guild_op_req_struct_new_dead_hero* release_new_dead_hero();
  inline void set_allocated_new_dead_hero(::gs_dbs_guild_op_req_struct_new_dead_hero* new_dead_hero);

  // optional .gs_dbs_guild_op_req.struct_delete_dead_hero delete_dead_hero = 15;
  inline bool has_delete_dead_hero() const;
  inline void clear_delete_dead_hero();
  static const int kDeleteDeadHeroFieldNumber = 15;
  inline const ::gs_dbs_guild_op_req_struct_delete_dead_hero& delete_dead_hero() const;
  inline ::gs_dbs_guild_op_req_struct_delete_dead_hero* mutable_delete_dead_hero();
  inline ::gs_dbs_guild_op_req_struct_delete_dead_hero* release_delete_dead_hero();
  inline void set_allocated_delete_dead_hero(::gs_dbs_guild_op_req_struct_delete_dead_hero* delete_dead_hero);

  // @@protoc_insertion_point(class_scope:gs_dbs_guild_op_req)
 private:
  inline void set_has_new_guild();
  inline void clear_has_new_guild();
  inline void set_has_update_guild();
  inline void clear_has_update_guild();
  inline void set_has_delete_guild();
  inline void clear_has_delete_guild();
  inline void set_has_new_apply();
  inline void clear_has_new_apply();
  inline void set_has_delete_apply();
  inline void clear_has_delete_apply();
  inline void set_has_new_member();
  inline void clear_has_new_member();
  inline void set_has_new_boss();
  inline void clear_has_new_boss();
  inline void set_has_update_boss();
  inline void clear_has_update_boss();
  inline void set_has_new_boss_attacker();
  inline void clear_has_new_boss_attacker();
  inline void set_has_delete_boss_attacker();
  inline void clear_has_delete_boss_attacker();
  inline void set_has_new_dead_hero();
  inline void clear_has_new_dead_hero();
  inline void set_has_delete_dead_hero();
  inline void clear_has_delete_dead_hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::gs_dbs_guild_op_req_struct_new_guild* new_guild_;
  ::gs_dbs_guild_op_req_struct_update_guild* update_guild_;
  ::gs_dbs_guild_op_req_struct_delete_guild* delete_guild_;
  ::gs_dbs_guild_op_req_struct_new_apply* new_apply_;
  ::gs_dbs_guild_op_req_struct_delete_apply* delete_apply_;
  ::gs_dbs_guild_op_req_struct_new_member* new_member_;
  ::google::protobuf::RepeatedPtrField< ::gs_dbs_guild_op_req_struct_update_member > update_members_;
  ::gs_dbs_guild_op_req_struct_new_boss* new_boss_;
  ::gs_dbs_guild_op_req_struct_update_boss* update_boss_;
  ::gs_dbs_guild_op_req_struct_new_boss_attacker* new_boss_attacker_;
  ::gs_dbs_guild_op_req_struct_delete_boss_attacker* delete_boss_attacker_;
  ::gs_dbs_guild_op_req_struct_new_dead_hero* new_dead_hero_;
  ::gs_dbs_guild_op_req_struct_delete_dead_hero* delete_dead_hero_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_dbs_guild_op_req* default_instance_;
};
// -------------------------------------------------------------------

class dbs_gs_guild_op_res : public ::google::protobuf::Message {
 public:
  dbs_gs_guild_op_res();
  virtual ~dbs_gs_guild_op_res();

  dbs_gs_guild_op_res(const dbs_gs_guild_op_res& from);

  inline dbs_gs_guild_op_res& operator=(const dbs_gs_guild_op_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dbs_gs_guild_op_res& default_instance();

  void Swap(dbs_gs_guild_op_res* other);

  // implements Message ----------------------------------------------

  dbs_gs_guild_op_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dbs_gs_guild_op_res& from);
  void MergeFrom(const dbs_gs_guild_op_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dbs_gs_guild_op_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_dbs_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_dbs_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static dbs_gs_guild_op_res* default_instance_;
};
// ===================================================================


// ===================================================================

// db_user_sub_task

// required uint32 sub_task_id = 1 [default = 0];
inline bool db_user_sub_task::has_sub_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_sub_task::set_has_sub_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_sub_task::clear_has_sub_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_sub_task::clear_sub_task_id() {
  sub_task_id_ = 0u;
  clear_has_sub_task_id();
}
inline ::google::protobuf::uint32 db_user_sub_task::sub_task_id() const {
  return sub_task_id_;
}
inline void db_user_sub_task::set_sub_task_id(::google::protobuf::uint32 value) {
  set_has_sub_task_id();
  sub_task_id_ = value;
}

// required uint32 star = 2 [default = 0];
inline bool db_user_sub_task::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_sub_task::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_sub_task::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_sub_task::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 db_user_sub_task::star() const {
  return star_;
}
inline void db_user_sub_task::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// required uint32 last_enter_timestamp = 3 [default = 0];
inline bool db_user_sub_task::has_last_enter_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_sub_task::set_has_last_enter_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_sub_task::clear_has_last_enter_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_sub_task::clear_last_enter_timestamp() {
  last_enter_timestamp_ = 0u;
  clear_has_last_enter_timestamp();
}
inline ::google::protobuf::uint32 db_user_sub_task::last_enter_timestamp() const {
  return last_enter_timestamp_;
}
inline void db_user_sub_task::set_last_enter_timestamp(::google::protobuf::uint32 value) {
  set_has_last_enter_timestamp();
  last_enter_timestamp_ = value;
}

// required uint32 last_day_enter_num = 4 [default = 0];
inline bool db_user_sub_task::has_last_day_enter_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_sub_task::set_has_last_day_enter_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_sub_task::clear_has_last_day_enter_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_sub_task::clear_last_day_enter_num() {
  last_day_enter_num_ = 0u;
  clear_has_last_day_enter_num();
}
inline ::google::protobuf::uint32 db_user_sub_task::last_day_enter_num() const {
  return last_day_enter_num_;
}
inline void db_user_sub_task::set_last_day_enter_num(::google::protobuf::uint32 value) {
  set_has_last_day_enter_num();
  last_day_enter_num_ = value;
}

// required uint32 total_enter_num = 5 [default = 0];
inline bool db_user_sub_task::has_total_enter_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void db_user_sub_task::set_has_total_enter_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void db_user_sub_task::clear_has_total_enter_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void db_user_sub_task::clear_total_enter_num() {
  total_enter_num_ = 0u;
  clear_has_total_enter_num();
}
inline ::google::protobuf::uint32 db_user_sub_task::total_enter_num() const {
  return total_enter_num_;
}
inline void db_user_sub_task::set_total_enter_num(::google::protobuf::uint32 value) {
  set_has_total_enter_num();
  total_enter_num_ = value;
}

// required uint32 last_reset_time = 6;
inline bool db_user_sub_task::has_last_reset_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void db_user_sub_task::set_has_last_reset_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void db_user_sub_task::clear_has_last_reset_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void db_user_sub_task::clear_last_reset_time() {
  last_reset_time_ = 0u;
  clear_has_last_reset_time();
}
inline ::google::protobuf::uint32 db_user_sub_task::last_reset_time() const {
  return last_reset_time_;
}
inline void db_user_sub_task::set_last_reset_time(::google::protobuf::uint32 value) {
  set_has_last_reset_time();
  last_reset_time_ = value;
}

// required uint32 last_day_reset_num = 7;
inline bool db_user_sub_task::has_last_day_reset_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void db_user_sub_task::set_has_last_day_reset_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void db_user_sub_task::clear_has_last_day_reset_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void db_user_sub_task::clear_last_day_reset_num() {
  last_day_reset_num_ = 0u;
  clear_has_last_day_reset_num();
}
inline ::google::protobuf::uint32 db_user_sub_task::last_day_reset_num() const {
  return last_day_reset_num_;
}
inline void db_user_sub_task::set_last_day_reset_num(::google::protobuf::uint32 value) {
  set_has_last_day_reset_num();
  last_day_reset_num_ = value;
}

// -------------------------------------------------------------------

// db_user_sub_task_array

// repeated .db_user_sub_task items = 1;
inline int db_user_sub_task_array::items_size() const {
  return items_.size();
}
inline void db_user_sub_task_array::clear_items() {
  items_.Clear();
}
inline const ::db_user_sub_task& db_user_sub_task_array::items(int index) const {
  return items_.Get(index);
}
inline ::db_user_sub_task* db_user_sub_task_array::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::db_user_sub_task* db_user_sub_task_array::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_sub_task >&
db_user_sub_task_array::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_sub_task >*
db_user_sub_task_array::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// db_user_hero_equip

// required uint32 equip_id = 1 [default = 0];
inline bool db_user_hero_equip::has_equip_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_hero_equip::set_has_equip_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_hero_equip::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_hero_equip::clear_equip_id() {
  equip_id_ = 0u;
  clear_has_equip_id();
}
inline ::google::protobuf::uint32 db_user_hero_equip::equip_id() const {
  return equip_id_;
}
inline void db_user_hero_equip::set_equip_id(::google::protobuf::uint32 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// required uint32 level = 2 [default = 0];
inline bool db_user_hero_equip::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_hero_equip::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_hero_equip::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_hero_equip::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 db_user_hero_equip::level() const {
  return level_;
}
inline void db_user_hero_equip::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// db_user_hero_skill

// required .user_hero_skill.e_skill_type type = 1;
inline bool db_user_hero_skill::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_hero_skill::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_hero_skill::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_hero_skill::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::user_hero_skill_e_skill_type db_user_hero_skill::type() const {
  return static_cast< ::user_hero_skill_e_skill_type >(type_);
}
inline void db_user_hero_skill::set_type(::user_hero_skill_e_skill_type value) {
  assert(::user_hero_skill_e_skill_type_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 level = 2;
inline bool db_user_hero_skill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_hero_skill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_hero_skill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_hero_skill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 db_user_hero_skill::level() const {
  return level_;
}
inline void db_user_hero_skill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// db_user_hero

// required uint32 hero_id = 1;
inline bool db_user_hero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_hero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_hero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_hero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 db_user_hero::hero_id() const {
  return hero_id_;
}
inline void db_user_hero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// required uint32 star = 2;
inline bool db_user_hero::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_hero::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_hero::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_hero::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 db_user_hero::star() const {
  return star_;
}
inline void db_user_hero::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// required uint32 quality = 3;
inline bool db_user_hero::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_hero::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_hero::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_hero::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 db_user_hero::quality() const {
  return quality_;
}
inline void db_user_hero::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// required uint32 level = 4;
inline bool db_user_hero::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_hero::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_hero::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_hero::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 db_user_hero::level() const {
  return level_;
}
inline void db_user_hero::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 cur_exp = 5;
inline bool db_user_hero::has_cur_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void db_user_hero::set_has_cur_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void db_user_hero::clear_has_cur_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void db_user_hero::clear_cur_exp() {
  cur_exp_ = 0u;
  clear_has_cur_exp();
}
inline ::google::protobuf::uint32 db_user_hero::cur_exp() const {
  return cur_exp_;
}
inline void db_user_hero::set_cur_exp(::google::protobuf::uint32 value) {
  set_has_cur_exp();
  cur_exp_ = value;
}

// required uint32 got_timestamp = 6;
inline bool db_user_hero::has_got_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void db_user_hero::set_has_got_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void db_user_hero::clear_has_got_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void db_user_hero::clear_got_timestamp() {
  got_timestamp_ = 0u;
  clear_has_got_timestamp();
}
inline ::google::protobuf::uint32 db_user_hero::got_timestamp() const {
  return got_timestamp_;
}
inline void db_user_hero::set_got_timestamp(::google::protobuf::uint32 value) {
  set_has_got_timestamp();
  got_timestamp_ = value;
}

// repeated .db_user_hero_equip equips = 7;
inline int db_user_hero::equips_size() const {
  return equips_.size();
}
inline void db_user_hero::clear_equips() {
  equips_.Clear();
}
inline const ::db_user_hero_equip& db_user_hero::equips(int index) const {
  return equips_.Get(index);
}
inline ::db_user_hero_equip* db_user_hero::mutable_equips(int index) {
  return equips_.Mutable(index);
}
inline ::db_user_hero_equip* db_user_hero::add_equips() {
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_hero_equip >&
db_user_hero::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_hero_equip >*
db_user_hero::mutable_equips() {
  return &equips_;
}

// repeated .db_user_hero_skill skills = 8;
inline int db_user_hero::skills_size() const {
  return skills_.size();
}
inline void db_user_hero::clear_skills() {
  skills_.Clear();
}
inline const ::db_user_hero_skill& db_user_hero::skills(int index) const {
  return skills_.Get(index);
}
inline ::db_user_hero_skill* db_user_hero::mutable_skills(int index) {
  return skills_.Mutable(index);
}
inline ::db_user_hero_skill* db_user_hero::add_skills() {
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_hero_skill >&
db_user_hero::skills() const {
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_hero_skill >*
db_user_hero::mutable_skills() {
  return &skills_;
}

// -------------------------------------------------------------------

// db_user_hero_array

// repeated .db_user_hero items = 1;
inline int db_user_hero_array::items_size() const {
  return items_.size();
}
inline void db_user_hero_array::clear_items() {
  items_.Clear();
}
inline const ::db_user_hero& db_user_hero_array::items(int index) const {
  return items_.Get(index);
}
inline ::db_user_hero* db_user_hero_array::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::db_user_hero* db_user_hero_array::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_hero >&
db_user_hero_array::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_hero >*
db_user_hero_array::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// db_mail_attach

// required uint32 attach_id = 1;
inline bool db_mail_attach::has_attach_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_mail_attach::set_has_attach_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_mail_attach::clear_has_attach_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_mail_attach::clear_attach_id() {
  attach_id_ = 0u;
  clear_has_attach_id();
}
inline ::google::protobuf::uint32 db_mail_attach::attach_id() const {
  return attach_id_;
}
inline void db_mail_attach::set_attach_id(::google::protobuf::uint32 value) {
  set_has_attach_id();
  attach_id_ = value;
}

// required .struct_game_element element = 2;
inline bool db_mail_attach::has_element() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_mail_attach::set_has_element() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_mail_attach::clear_has_element() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_mail_attach::clear_element() {
  if (element_ != NULL) element_->::struct_game_element::Clear();
  clear_has_element();
}
inline const ::struct_game_element& db_mail_attach::element() const {
  return element_ != NULL ? *element_ : *default_instance_->element_;
}
inline ::struct_game_element* db_mail_attach::mutable_element() {
  set_has_element();
  if (element_ == NULL) element_ = new ::struct_game_element;
  return element_;
}
inline ::struct_game_element* db_mail_attach::release_element() {
  clear_has_element();
  ::struct_game_element* temp = element_;
  element_ = NULL;
  return temp;
}
inline void db_mail_attach::set_allocated_element(::struct_game_element* element) {
  delete element_;
  element_ = element;
  if (element) {
    set_has_element();
  } else {
    clear_has_element();
  }
}

// -------------------------------------------------------------------

// db_user_mail

// required uint32 mail_id = 1;
inline bool db_user_mail::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_mail::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_mail::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_mail::clear_mail_id() {
  mail_id_ = 0u;
  clear_has_mail_id();
}
inline ::google::protobuf::uint32 db_user_mail::mail_id() const {
  return mail_id_;
}
inline void db_user_mail::set_mail_id(::google::protobuf::uint32 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// required uint32 send_time = 2;
inline bool db_user_mail::has_send_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_mail::set_has_send_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_mail::clear_has_send_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_mail::clear_send_time() {
  send_time_ = 0u;
  clear_has_send_time();
}
inline ::google::protobuf::uint32 db_user_mail::send_time() const {
  return send_time_;
}
inline void db_user_mail::set_send_time(::google::protobuf::uint32 value) {
  set_has_send_time();
  send_time_ = value;
}

// required .MAIL_TYPE type = 3;
inline bool db_user_mail::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_mail::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_mail::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_mail::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::MAIL_TYPE db_user_mail::type() const {
  return static_cast< ::MAIL_TYPE >(type_);
}
inline void db_user_mail::set_type(::MAIL_TYPE value) {
  assert(::MAIL_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional string content = 4;
inline bool db_user_mail::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_mail::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_mail::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_mail::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& db_user_mail::content() const {
  return *content_;
}
inline void db_user_mail::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void db_user_mail::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void db_user_mail::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* db_user_mail::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* db_user_mail::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void db_user_mail::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .MAIL_STATUS status = 5;
inline bool db_user_mail::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void db_user_mail::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void db_user_mail::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void db_user_mail::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::MAIL_STATUS db_user_mail::status() const {
  return static_cast< ::MAIL_STATUS >(status_);
}
inline void db_user_mail::set_status(::MAIL_STATUS value) {
  assert(::MAIL_STATUS_IsValid(value));
  set_has_status();
  status_ = value;
}

// repeated .db_mail_attach attachs = 6;
inline int db_user_mail::attachs_size() const {
  return attachs_.size();
}
inline void db_user_mail::clear_attachs() {
  attachs_.Clear();
}
inline const ::db_mail_attach& db_user_mail::attachs(int index) const {
  return attachs_.Get(index);
}
inline ::db_mail_attach* db_user_mail::mutable_attachs(int index) {
  return attachs_.Mutable(index);
}
inline ::db_mail_attach* db_user_mail::add_attachs() {
  return attachs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_mail_attach >&
db_user_mail::attachs() const {
  return attachs_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_mail_attach >*
db_user_mail::mutable_attachs() {
  return &attachs_;
}

// -------------------------------------------------------------------

// db_user_mail_array

// repeated .db_user_mail mails = 1;
inline int db_user_mail_array::mails_size() const {
  return mails_.size();
}
inline void db_user_mail_array::clear_mails() {
  mails_.Clear();
}
inline const ::db_user_mail& db_user_mail_array::mails(int index) const {
  return mails_.Get(index);
}
inline ::db_user_mail* db_user_mail_array::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::db_user_mail* db_user_mail_array::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_mail >&
db_user_mail_array::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_mail >*
db_user_mail_array::mutable_mails() {
  return &mails_;
}

// -------------------------------------------------------------------

// db_user_shop_buy

// required .struct_game_element.EELEMENTTYPE element_type = 1;
inline bool db_user_shop_buy::has_element_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_shop_buy::set_has_element_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_shop_buy::clear_has_element_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_shop_buy::clear_element_type() {
  element_type_ = 0;
  clear_has_element_type();
}
inline ::struct_game_element_EELEMENTTYPE db_user_shop_buy::element_type() const {
  return static_cast< ::struct_game_element_EELEMENTTYPE >(element_type_);
}
inline void db_user_shop_buy::set_element_type(::struct_game_element_EELEMENTTYPE value) {
  assert(::struct_game_element_EELEMENTTYPE_IsValid(value));
  set_has_element_type();
  element_type_ = value;
}

// required uint32 element_id = 2;
inline bool db_user_shop_buy::has_element_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_shop_buy::set_has_element_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_shop_buy::clear_has_element_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_shop_buy::clear_element_id() {
  element_id_ = 0u;
  clear_has_element_id();
}
inline ::google::protobuf::uint32 db_user_shop_buy::element_id() const {
  return element_id_;
}
inline void db_user_shop_buy::set_element_id(::google::protobuf::uint32 value) {
  set_has_element_id();
  element_id_ = value;
}

// required uint32 last_day_buy_num = 3;
inline bool db_user_shop_buy::has_last_day_buy_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_shop_buy::set_has_last_day_buy_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_shop_buy::clear_has_last_day_buy_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_shop_buy::clear_last_day_buy_num() {
  last_day_buy_num_ = 0u;
  clear_has_last_day_buy_num();
}
inline ::google::protobuf::uint32 db_user_shop_buy::last_day_buy_num() const {
  return last_day_buy_num_;
}
inline void db_user_shop_buy::set_last_day_buy_num(::google::protobuf::uint32 value) {
  set_has_last_day_buy_num();
  last_day_buy_num_ = value;
}

// required uint32 last_buy_time = 4;
inline bool db_user_shop_buy::has_last_buy_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_shop_buy::set_has_last_buy_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_shop_buy::clear_has_last_buy_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_shop_buy::clear_last_buy_time() {
  last_buy_time_ = 0u;
  clear_has_last_buy_time();
}
inline ::google::protobuf::uint32 db_user_shop_buy::last_buy_time() const {
  return last_buy_time_;
}
inline void db_user_shop_buy::set_last_buy_time(::google::protobuf::uint32 value) {
  set_has_last_buy_time();
  last_buy_time_ = value;
}

// -------------------------------------------------------------------

// db_user_shop_buy_array

// repeated .db_user_shop_buy items = 1;
inline int db_user_shop_buy_array::items_size() const {
  return items_.size();
}
inline void db_user_shop_buy_array::clear_items() {
  items_.Clear();
}
inline const ::db_user_shop_buy& db_user_shop_buy_array::items(int index) const {
  return items_.Get(index);
}
inline ::db_user_shop_buy* db_user_shop_buy_array::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::db_user_shop_buy* db_user_shop_buy_array::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_shop_buy >&
db_user_shop_buy_array::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_shop_buy >*
db_user_shop_buy_array::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// db_user_shop_item

// required uint32 pos = 1;
inline bool db_user_shop_item::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_shop_item::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_shop_item::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_shop_item::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 db_user_shop_item::pos() const {
  return pos_;
}
inline void db_user_shop_item::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required .struct_game_element.EELEMENTTYPE element_type = 2;
inline bool db_user_shop_item::has_element_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_shop_item::set_has_element_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_shop_item::clear_has_element_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_shop_item::clear_element_type() {
  element_type_ = 0;
  clear_has_element_type();
}
inline ::struct_game_element_EELEMENTTYPE db_user_shop_item::element_type() const {
  return static_cast< ::struct_game_element_EELEMENTTYPE >(element_type_);
}
inline void db_user_shop_item::set_element_type(::struct_game_element_EELEMENTTYPE value) {
  assert(::struct_game_element_EELEMENTTYPE_IsValid(value));
  set_has_element_type();
  element_type_ = value;
}

// required uint32 element_id = 3;
inline bool db_user_shop_item::has_element_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_shop_item::set_has_element_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_shop_item::clear_has_element_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_shop_item::clear_element_id() {
  element_id_ = 0u;
  clear_has_element_id();
}
inline ::google::protobuf::uint32 db_user_shop_item::element_id() const {
  return element_id_;
}
inline void db_user_shop_item::set_element_id(::google::protobuf::uint32 value) {
  set_has_element_id();
  element_id_ = value;
}

// required uint32 element_num = 4;
inline bool db_user_shop_item::has_element_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_shop_item::set_has_element_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_shop_item::clear_has_element_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_shop_item::clear_element_num() {
  element_num_ = 0u;
  clear_has_element_num();
}
inline ::google::protobuf::uint32 db_user_shop_item::element_num() const {
  return element_num_;
}
inline void db_user_shop_item::set_element_num(::google::protobuf::uint32 value) {
  set_has_element_num();
  element_num_ = value;
}

// required .struct_game_element.EELEMENTTYPE consume_type = 5;
inline bool db_user_shop_item::has_consume_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void db_user_shop_item::set_has_consume_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void db_user_shop_item::clear_has_consume_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void db_user_shop_item::clear_consume_type() {
  consume_type_ = 0;
  clear_has_consume_type();
}
inline ::struct_game_element_EELEMENTTYPE db_user_shop_item::consume_type() const {
  return static_cast< ::struct_game_element_EELEMENTTYPE >(consume_type_);
}
inline void db_user_shop_item::set_consume_type(::struct_game_element_EELEMENTTYPE value) {
  assert(::struct_game_element_EELEMENTTYPE_IsValid(value));
  set_has_consume_type();
  consume_type_ = value;
}

// required uint32 consume_id = 6;
inline bool db_user_shop_item::has_consume_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void db_user_shop_item::set_has_consume_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void db_user_shop_item::clear_has_consume_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void db_user_shop_item::clear_consume_id() {
  consume_id_ = 0u;
  clear_has_consume_id();
}
inline ::google::protobuf::uint32 db_user_shop_item::consume_id() const {
  return consume_id_;
}
inline void db_user_shop_item::set_consume_id(::google::protobuf::uint32 value) {
  set_has_consume_id();
  consume_id_ = value;
}

// required uint32 consume_num = 7;
inline bool db_user_shop_item::has_consume_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void db_user_shop_item::set_has_consume_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void db_user_shop_item::clear_has_consume_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void db_user_shop_item::clear_consume_num() {
  consume_num_ = 0u;
  clear_has_consume_num();
}
inline ::google::protobuf::uint32 db_user_shop_item::consume_num() const {
  return consume_num_;
}
inline void db_user_shop_item::set_consume_num(::google::protobuf::uint32 value) {
  set_has_consume_num();
  consume_num_ = value;
}

// required .user_shop_item.ESHOPITEMFLAG flag = 8;
inline bool db_user_shop_item::has_flag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void db_user_shop_item::set_has_flag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void db_user_shop_item::clear_has_flag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void db_user_shop_item::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::user_shop_item_ESHOPITEMFLAG db_user_shop_item::flag() const {
  return static_cast< ::user_shop_item_ESHOPITEMFLAG >(flag_);
}
inline void db_user_shop_item::set_flag(::user_shop_item_ESHOPITEMFLAG value) {
  assert(::user_shop_item_ESHOPITEMFLAG_IsValid(value));
  set_has_flag();
  flag_ = value;
}

// required uint32 is_sold = 9;
inline bool db_user_shop_item::has_is_sold() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void db_user_shop_item::set_has_is_sold() {
  _has_bits_[0] |= 0x00000100u;
}
inline void db_user_shop_item::clear_has_is_sold() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void db_user_shop_item::clear_is_sold() {
  is_sold_ = 0u;
  clear_has_is_sold();
}
inline ::google::protobuf::uint32 db_user_shop_item::is_sold() const {
  return is_sold_;
}
inline void db_user_shop_item::set_is_sold(::google::protobuf::uint32 value) {
  set_has_is_sold();
  is_sold_ = value;
}

// -------------------------------------------------------------------

// db_user_shop

// required .user_shop.ESHOPTYPE shop_type = 1;
inline bool db_user_shop::has_shop_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_shop::set_has_shop_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_shop::clear_has_shop_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_shop::clear_shop_type() {
  shop_type_ = 0;
  clear_has_shop_type();
}
inline ::user_shop_ESHOPTYPE db_user_shop::shop_type() const {
  return static_cast< ::user_shop_ESHOPTYPE >(shop_type_);
}
inline void db_user_shop::set_shop_type(::user_shop_ESHOPTYPE value) {
  assert(::user_shop_ESHOPTYPE_IsValid(value));
  set_has_shop_type();
  shop_type_ = value;
}

// required uint32 last_auto_refresh_time = 2;
inline bool db_user_shop::has_last_auto_refresh_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_shop::set_has_last_auto_refresh_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_shop::clear_has_last_auto_refresh_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_shop::clear_last_auto_refresh_time() {
  last_auto_refresh_time_ = 0u;
  clear_has_last_auto_refresh_time();
}
inline ::google::protobuf::uint32 db_user_shop::last_auto_refresh_time() const {
  return last_auto_refresh_time_;
}
inline void db_user_shop::set_last_auto_refresh_time(::google::protobuf::uint32 value) {
  set_has_last_auto_refresh_time();
  last_auto_refresh_time_ = value;
}

// required uint32 last_manual_refresh_time = 3;
inline bool db_user_shop::has_last_manual_refresh_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_shop::set_has_last_manual_refresh_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_shop::clear_has_last_manual_refresh_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_shop::clear_last_manual_refresh_time() {
  last_manual_refresh_time_ = 0u;
  clear_has_last_manual_refresh_time();
}
inline ::google::protobuf::uint32 db_user_shop::last_manual_refresh_time() const {
  return last_manual_refresh_time_;
}
inline void db_user_shop::set_last_manual_refresh_time(::google::protobuf::uint32 value) {
  set_has_last_manual_refresh_time();
  last_manual_refresh_time_ = value;
}

// required uint32 last_day_manual_refresh_num = 4;
inline bool db_user_shop::has_last_day_manual_refresh_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_shop::set_has_last_day_manual_refresh_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_shop::clear_has_last_day_manual_refresh_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_shop::clear_last_day_manual_refresh_num() {
  last_day_manual_refresh_num_ = 0u;
  clear_has_last_day_manual_refresh_num();
}
inline ::google::protobuf::uint32 db_user_shop::last_day_manual_refresh_num() const {
  return last_day_manual_refresh_num_;
}
inline void db_user_shop::set_last_day_manual_refresh_num(::google::protobuf::uint32 value) {
  set_has_last_day_manual_refresh_num();
  last_day_manual_refresh_num_ = value;
}

// required uint32 random_open_start_timestamp = 5;
inline bool db_user_shop::has_random_open_start_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void db_user_shop::set_has_random_open_start_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void db_user_shop::clear_has_random_open_start_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void db_user_shop::clear_random_open_start_timestamp() {
  random_open_start_timestamp_ = 0u;
  clear_has_random_open_start_timestamp();
}
inline ::google::protobuf::uint32 db_user_shop::random_open_start_timestamp() const {
  return random_open_start_timestamp_;
}
inline void db_user_shop::set_random_open_start_timestamp(::google::protobuf::uint32 value) {
  set_has_random_open_start_timestamp();
  random_open_start_timestamp_ = value;
}

// required uint32 random_open_end_timestamp = 6;
inline bool db_user_shop::has_random_open_end_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void db_user_shop::set_has_random_open_end_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void db_user_shop::clear_has_random_open_end_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void db_user_shop::clear_random_open_end_timestamp() {
  random_open_end_timestamp_ = 0u;
  clear_has_random_open_end_timestamp();
}
inline ::google::protobuf::uint32 db_user_shop::random_open_end_timestamp() const {
  return random_open_end_timestamp_;
}
inline void db_user_shop::set_random_open_end_timestamp(::google::protobuf::uint32 value) {
  set_has_random_open_end_timestamp();
  random_open_end_timestamp_ = value;
}

// repeated .db_user_shop_item items = 7;
inline int db_user_shop::items_size() const {
  return items_.size();
}
inline void db_user_shop::clear_items() {
  items_.Clear();
}
inline const ::db_user_shop_item& db_user_shop::items(int index) const {
  return items_.Get(index);
}
inline ::db_user_shop_item* db_user_shop::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::db_user_shop_item* db_user_shop::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_shop_item >&
db_user_shop::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_shop_item >*
db_user_shop::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// db_user_shop_array

// repeated .db_user_shop items = 1;
inline int db_user_shop_array::items_size() const {
  return items_.size();
}
inline void db_user_shop_array::clear_items() {
  items_.Clear();
}
inline const ::db_user_shop& db_user_shop_array::items(int index) const {
  return items_.Get(index);
}
inline ::db_user_shop* db_user_shop_array::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::db_user_shop* db_user_shop_array::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_shop >&
db_user_shop_array::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_shop >*
db_user_shop_array::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// db_user_mission_event

// required .db_user_mission_event.MISSION_EVENT_TYPE mission_event_type = 1;
inline bool db_user_mission_event::has_mission_event_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_mission_event::set_has_mission_event_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_mission_event::clear_has_mission_event_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_mission_event::clear_mission_event_type() {
  mission_event_type_ = 0;
  clear_has_mission_event_type();
}
inline ::db_user_mission_event_MISSION_EVENT_TYPE db_user_mission_event::mission_event_type() const {
  return static_cast< ::db_user_mission_event_MISSION_EVENT_TYPE >(mission_event_type_);
}
inline void db_user_mission_event::set_mission_event_type(::db_user_mission_event_MISSION_EVENT_TYPE value) {
  assert(::db_user_mission_event_MISSION_EVENT_TYPE_IsValid(value));
  set_has_mission_event_type();
  mission_event_type_ = value;
}

// required uint32 mission_event_sub_type = 2;
inline bool db_user_mission_event::has_mission_event_sub_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_mission_event::set_has_mission_event_sub_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_mission_event::clear_has_mission_event_sub_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_mission_event::clear_mission_event_sub_type() {
  mission_event_sub_type_ = 0u;
  clear_has_mission_event_sub_type();
}
inline ::google::protobuf::uint32 db_user_mission_event::mission_event_sub_type() const {
  return mission_event_sub_type_;
}
inline void db_user_mission_event::set_mission_event_sub_type(::google::protobuf::uint32 value) {
  set_has_mission_event_sub_type();
  mission_event_sub_type_ = value;
}

// optional uint32 last_update_timestamp = 3;
inline bool db_user_mission_event::has_last_update_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_mission_event::set_has_last_update_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_mission_event::clear_has_last_update_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_mission_event::clear_last_update_timestamp() {
  last_update_timestamp_ = 0u;
  clear_has_last_update_timestamp();
}
inline ::google::protobuf::uint32 db_user_mission_event::last_update_timestamp() const {
  return last_update_timestamp_;
}
inline void db_user_mission_event::set_last_update_timestamp(::google::protobuf::uint32 value) {
  set_has_last_update_timestamp();
  last_update_timestamp_ = value;
}

// optional uint32 last_day_value = 4;
inline bool db_user_mission_event::has_last_day_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_mission_event::set_has_last_day_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_mission_event::clear_has_last_day_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_mission_event::clear_last_day_value() {
  last_day_value_ = 0u;
  clear_has_last_day_value();
}
inline ::google::protobuf::uint32 db_user_mission_event::last_day_value() const {
  return last_day_value_;
}
inline void db_user_mission_event::set_last_day_value(::google::protobuf::uint32 value) {
  set_has_last_day_value();
  last_day_value_ = value;
}

// optional uint32 total_value = 5;
inline bool db_user_mission_event::has_total_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void db_user_mission_event::set_has_total_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void db_user_mission_event::clear_has_total_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void db_user_mission_event::clear_total_value() {
  total_value_ = 0u;
  clear_has_total_value();
}
inline ::google::protobuf::uint32 db_user_mission_event::total_value() const {
  return total_value_;
}
inline void db_user_mission_event::set_total_value(::google::protobuf::uint32 value) {
  set_has_total_value();
  total_value_ = value;
}

// -------------------------------------------------------------------

// db_user_arena_log_db_user_arena_log_hero

// required uint32 hero_id = 1;
inline bool db_user_arena_log_db_user_arena_log_hero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_arena_log_db_user_arena_log_hero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_arena_log_db_user_arena_log_hero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_arena_log_db_user_arena_log_hero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 db_user_arena_log_db_user_arena_log_hero::hero_id() const {
  return hero_id_;
}
inline void db_user_arena_log_db_user_arena_log_hero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// required uint32 quality = 2;
inline bool db_user_arena_log_db_user_arena_log_hero::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_arena_log_db_user_arena_log_hero::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_arena_log_db_user_arena_log_hero::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_arena_log_db_user_arena_log_hero::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 db_user_arena_log_db_user_arena_log_hero::quality() const {
  return quality_;
}
inline void db_user_arena_log_db_user_arena_log_hero::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// required uint32 level = 3;
inline bool db_user_arena_log_db_user_arena_log_hero::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_arena_log_db_user_arena_log_hero::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_arena_log_db_user_arena_log_hero::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_arena_log_db_user_arena_log_hero::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 db_user_arena_log_db_user_arena_log_hero::level() const {
  return level_;
}
inline void db_user_arena_log_db_user_arena_log_hero::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 star = 4;
inline bool db_user_arena_log_db_user_arena_log_hero::has_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_arena_log_db_user_arena_log_hero::set_has_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_arena_log_db_user_arena_log_hero::clear_has_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_arena_log_db_user_arena_log_hero::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 db_user_arena_log_db_user_arena_log_hero::star() const {
  return star_;
}
inline void db_user_arena_log_db_user_arena_log_hero::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// db_user_arena_log

// required bool is_attacker_win = 1;
inline bool db_user_arena_log::has_is_attacker_win() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_arena_log::set_has_is_attacker_win() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_arena_log::clear_has_is_attacker_win() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_arena_log::clear_is_attacker_win() {
  is_attacker_win_ = false;
  clear_has_is_attacker_win();
}
inline bool db_user_arena_log::is_attacker_win() const {
  return is_attacker_win_;
}
inline void db_user_arena_log::set_is_attacker_win(bool value) {
  set_has_is_attacker_win();
  is_attacker_win_ = value;
}

// required uint32 time = 2;
inline bool db_user_arena_log::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_arena_log::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_arena_log::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_arena_log::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 db_user_arena_log::time() const {
  return time_;
}
inline void db_user_arena_log::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// required bool is_me_attacker = 3;
inline bool db_user_arena_log::has_is_me_attacker() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_arena_log::set_has_is_me_attacker() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_arena_log::clear_has_is_me_attacker() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_arena_log::clear_is_me_attacker() {
  is_me_attacker_ = false;
  clear_has_is_me_attacker();
}
inline bool db_user_arena_log::is_me_attacker() const {
  return is_me_attacker_;
}
inline void db_user_arena_log::set_is_me_attacker(bool value) {
  set_has_is_me_attacker();
  is_me_attacker_ = value;
}

// required uint32 me_rank = 4;
inline bool db_user_arena_log::has_me_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_arena_log::set_has_me_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_arena_log::clear_has_me_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_arena_log::clear_me_rank() {
  me_rank_ = 0u;
  clear_has_me_rank();
}
inline ::google::protobuf::uint32 db_user_arena_log::me_rank() const {
  return me_rank_;
}
inline void db_user_arena_log::set_me_rank(::google::protobuf::uint32 value) {
  set_has_me_rank();
  me_rank_ = value;
}

// required uint32 match_user_id = 5;
inline bool db_user_arena_log::has_match_user_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void db_user_arena_log::set_has_match_user_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void db_user_arena_log::clear_has_match_user_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void db_user_arena_log::clear_match_user_id() {
  match_user_id_ = 0u;
  clear_has_match_user_id();
}
inline ::google::protobuf::uint32 db_user_arena_log::match_user_id() const {
  return match_user_id_;
}
inline void db_user_arena_log::set_match_user_id(::google::protobuf::uint32 value) {
  set_has_match_user_id();
  match_user_id_ = value;
}

// required uint32 match_rank = 6;
inline bool db_user_arena_log::has_match_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void db_user_arena_log::set_has_match_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void db_user_arena_log::clear_has_match_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void db_user_arena_log::clear_match_rank() {
  match_rank_ = 0u;
  clear_has_match_rank();
}
inline ::google::protobuf::uint32 db_user_arena_log::match_rank() const {
  return match_rank_;
}
inline void db_user_arena_log::set_match_rank(::google::protobuf::uint32 value) {
  set_has_match_rank();
  match_rank_ = value;
}

// required uint32 match_power = 7;
inline bool db_user_arena_log::has_match_power() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void db_user_arena_log::set_has_match_power() {
  _has_bits_[0] |= 0x00000040u;
}
inline void db_user_arena_log::clear_has_match_power() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void db_user_arena_log::clear_match_power() {
  match_power_ = 0u;
  clear_has_match_power();
}
inline ::google::protobuf::uint32 db_user_arena_log::match_power() const {
  return match_power_;
}
inline void db_user_arena_log::set_match_power(::google::protobuf::uint32 value) {
  set_has_match_power();
  match_power_ = value;
}

// required string match_name = 8;
inline bool db_user_arena_log::has_match_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void db_user_arena_log::set_has_match_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void db_user_arena_log::clear_has_match_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void db_user_arena_log::clear_match_name() {
  if (match_name_ != &::google::protobuf::internal::kEmptyString) {
    match_name_->clear();
  }
  clear_has_match_name();
}
inline const ::std::string& db_user_arena_log::match_name() const {
  return *match_name_;
}
inline void db_user_arena_log::set_match_name(const ::std::string& value) {
  set_has_match_name();
  if (match_name_ == &::google::protobuf::internal::kEmptyString) {
    match_name_ = new ::std::string;
  }
  match_name_->assign(value);
}
inline void db_user_arena_log::set_match_name(const char* value) {
  set_has_match_name();
  if (match_name_ == &::google::protobuf::internal::kEmptyString) {
    match_name_ = new ::std::string;
  }
  match_name_->assign(value);
}
inline void db_user_arena_log::set_match_name(const char* value, size_t size) {
  set_has_match_name();
  if (match_name_ == &::google::protobuf::internal::kEmptyString) {
    match_name_ = new ::std::string;
  }
  match_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* db_user_arena_log::mutable_match_name() {
  set_has_match_name();
  if (match_name_ == &::google::protobuf::internal::kEmptyString) {
    match_name_ = new ::std::string;
  }
  return match_name_;
}
inline ::std::string* db_user_arena_log::release_match_name() {
  clear_has_match_name();
  if (match_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = match_name_;
    match_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void db_user_arena_log::set_allocated_match_name(::std::string* match_name) {
  if (match_name_ != &::google::protobuf::internal::kEmptyString) {
    delete match_name_;
  }
  if (match_name) {
    set_has_match_name();
    match_name_ = match_name;
  } else {
    clear_has_match_name();
    match_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 match_level = 9;
inline bool db_user_arena_log::has_match_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void db_user_arena_log::set_has_match_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void db_user_arena_log::clear_has_match_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void db_user_arena_log::clear_match_level() {
  match_level_ = 0u;
  clear_has_match_level();
}
inline ::google::protobuf::uint32 db_user_arena_log::match_level() const {
  return match_level_;
}
inline void db_user_arena_log::set_match_level(::google::protobuf::uint32 value) {
  set_has_match_level();
  match_level_ = value;
}

// repeated .db_user_arena_log.db_user_arena_log_hero match_heros = 10;
inline int db_user_arena_log::match_heros_size() const {
  return match_heros_.size();
}
inline void db_user_arena_log::clear_match_heros() {
  match_heros_.Clear();
}
inline const ::db_user_arena_log_db_user_arena_log_hero& db_user_arena_log::match_heros(int index) const {
  return match_heros_.Get(index);
}
inline ::db_user_arena_log_db_user_arena_log_hero* db_user_arena_log::mutable_match_heros(int index) {
  return match_heros_.Mutable(index);
}
inline ::db_user_arena_log_db_user_arena_log_hero* db_user_arena_log::add_match_heros() {
  return match_heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >&
db_user_arena_log::match_heros() const {
  return match_heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >*
db_user_arena_log::mutable_match_heros() {
  return &match_heros_;
}

// -------------------------------------------------------------------

// db_user_mission_event_array

// repeated .db_user_mission_event events = 1;
inline int db_user_mission_event_array::events_size() const {
  return events_.size();
}
inline void db_user_mission_event_array::clear_events() {
  events_.Clear();
}
inline const ::db_user_mission_event& db_user_mission_event_array::events(int index) const {
  return events_.Get(index);
}
inline ::db_user_mission_event* db_user_mission_event_array::mutable_events(int index) {
  return events_.Mutable(index);
}
inline ::db_user_mission_event* db_user_mission_event_array::add_events() {
  return events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_mission_event >&
db_user_mission_event_array::events() const {
  return events_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_mission_event >*
db_user_mission_event_array::mutable_events() {
  return &events_;
}

// -------------------------------------------------------------------

// db_user_mission_chain

// required uint32 mission_chain_id = 1;
inline bool db_user_mission_chain::has_mission_chain_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_mission_chain::set_has_mission_chain_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_mission_chain::clear_has_mission_chain_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_mission_chain::clear_mission_chain_id() {
  mission_chain_id_ = 0u;
  clear_has_mission_chain_id();
}
inline ::google::protobuf::uint32 db_user_mission_chain::mission_chain_id() const {
  return mission_chain_id_;
}
inline void db_user_mission_chain::set_mission_chain_id(::google::protobuf::uint32 value) {
  set_has_mission_chain_id();
  mission_chain_id_ = value;
}

// required uint32 last_get_reward_mission_id = 2;
inline bool db_user_mission_chain::has_last_get_reward_mission_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_mission_chain::set_has_last_get_reward_mission_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_mission_chain::clear_has_last_get_reward_mission_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_mission_chain::clear_last_get_reward_mission_id() {
  last_get_reward_mission_id_ = 0u;
  clear_has_last_get_reward_mission_id();
}
inline ::google::protobuf::uint32 db_user_mission_chain::last_get_reward_mission_id() const {
  return last_get_reward_mission_id_;
}
inline void db_user_mission_chain::set_last_get_reward_mission_id(::google::protobuf::uint32 value) {
  set_has_last_get_reward_mission_id();
  last_get_reward_mission_id_ = value;
}

// required uint32 last_get_reward_timestamp = 3;
inline bool db_user_mission_chain::has_last_get_reward_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_mission_chain::set_has_last_get_reward_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_mission_chain::clear_has_last_get_reward_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_mission_chain::clear_last_get_reward_timestamp() {
  last_get_reward_timestamp_ = 0u;
  clear_has_last_get_reward_timestamp();
}
inline ::google::protobuf::uint32 db_user_mission_chain::last_get_reward_timestamp() const {
  return last_get_reward_timestamp_;
}
inline void db_user_mission_chain::set_last_get_reward_timestamp(::google::protobuf::uint32 value) {
  set_has_last_get_reward_timestamp();
  last_get_reward_timestamp_ = value;
}

// -------------------------------------------------------------------

// db_user_mission_chain_array

// repeated .db_user_mission_chain chains = 1;
inline int db_user_mission_chain_array::chains_size() const {
  return chains_.size();
}
inline void db_user_mission_chain_array::clear_chains() {
  chains_.Clear();
}
inline const ::db_user_mission_chain& db_user_mission_chain_array::chains(int index) const {
  return chains_.Get(index);
}
inline ::db_user_mission_chain* db_user_mission_chain_array::mutable_chains(int index) {
  return chains_.Mutable(index);
}
inline ::db_user_mission_chain* db_user_mission_chain_array::add_chains() {
  return chains_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_mission_chain >&
db_user_mission_chain_array::chains() const {
  return chains_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_mission_chain >*
db_user_mission_chain_array::mutable_chains() {
  return &chains_;
}

// -------------------------------------------------------------------

// db_user_arena

// required uint32 rank = 1;
inline bool db_user_arena::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_arena::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_arena::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_arena::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 db_user_arena::rank() const {
  return rank_;
}
inline void db_user_arena::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required uint32 score = 2;
inline bool db_user_arena::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_arena::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_arena::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_arena::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 db_user_arena::score() const {
  return score_;
}
inline void db_user_arena::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 last_challenge_time = 3;
inline bool db_user_arena::has_last_challenge_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_arena::set_has_last_challenge_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_arena::clear_has_last_challenge_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_arena::clear_last_challenge_time() {
  last_challenge_time_ = 0u;
  clear_has_last_challenge_time();
}
inline ::google::protobuf::uint32 db_user_arena::last_challenge_time() const {
  return last_challenge_time_;
}
inline void db_user_arena::set_last_challenge_time(::google::protobuf::uint32 value) {
  set_has_last_challenge_time();
  last_challenge_time_ = value;
}

// required uint32 last_day_challenge_num = 4;
inline bool db_user_arena::has_last_day_challenge_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_arena::set_has_last_day_challenge_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_arena::clear_has_last_day_challenge_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_arena::clear_last_day_challenge_num() {
  last_day_challenge_num_ = 0u;
  clear_has_last_day_challenge_num();
}
inline ::google::protobuf::uint32 db_user_arena::last_day_challenge_num() const {
  return last_day_challenge_num_;
}
inline void db_user_arena::set_last_day_challenge_num(::google::protobuf::uint32 value) {
  set_has_last_day_challenge_num();
  last_day_challenge_num_ = value;
}

// required uint32 history_highest_rank = 5;
inline bool db_user_arena::has_history_highest_rank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void db_user_arena::set_has_history_highest_rank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void db_user_arena::clear_has_history_highest_rank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void db_user_arena::clear_history_highest_rank() {
  history_highest_rank_ = 0u;
  clear_has_history_highest_rank();
}
inline ::google::protobuf::uint32 db_user_arena::history_highest_rank() const {
  return history_highest_rank_;
}
inline void db_user_arena::set_history_highest_rank(::google::protobuf::uint32 value) {
  set_has_history_highest_rank();
  history_highest_rank_ = value;
}

// repeated uint32 heros = 6;
inline int db_user_arena::heros_size() const {
  return heros_.size();
}
inline void db_user_arena::clear_heros() {
  heros_.Clear();
}
inline ::google::protobuf::uint32 db_user_arena::heros(int index) const {
  return heros_.Get(index);
}
inline void db_user_arena::set_heros(int index, ::google::protobuf::uint32 value) {
  heros_.Set(index, value);
}
inline void db_user_arena::add_heros(::google::protobuf::uint32 value) {
  heros_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
db_user_arena::heros() const {
  return heros_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
db_user_arena::mutable_heros() {
  return &heros_;
}

// required uint32 last_time_buy_arena_challenge = 7;
inline bool db_user_arena::has_last_time_buy_arena_challenge() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void db_user_arena::set_has_last_time_buy_arena_challenge() {
  _has_bits_[0] |= 0x00000040u;
}
inline void db_user_arena::clear_has_last_time_buy_arena_challenge() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void db_user_arena::clear_last_time_buy_arena_challenge() {
  last_time_buy_arena_challenge_ = 0u;
  clear_has_last_time_buy_arena_challenge();
}
inline ::google::protobuf::uint32 db_user_arena::last_time_buy_arena_challenge() const {
  return last_time_buy_arena_challenge_;
}
inline void db_user_arena::set_last_time_buy_arena_challenge(::google::protobuf::uint32 value) {
  set_has_last_time_buy_arena_challenge();
  last_time_buy_arena_challenge_ = value;
}

// required uint32 last_day_buy_arena_challenge_num = 8;
inline bool db_user_arena::has_last_day_buy_arena_challenge_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void db_user_arena::set_has_last_day_buy_arena_challenge_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void db_user_arena::clear_has_last_day_buy_arena_challenge_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void db_user_arena::clear_last_day_buy_arena_challenge_num() {
  last_day_buy_arena_challenge_num_ = 0u;
  clear_has_last_day_buy_arena_challenge_num();
}
inline ::google::protobuf::uint32 db_user_arena::last_day_buy_arena_challenge_num() const {
  return last_day_buy_arena_challenge_num_;
}
inline void db_user_arena::set_last_day_buy_arena_challenge_num(::google::protobuf::uint32 value) {
  set_has_last_day_buy_arena_challenge_num();
  last_day_buy_arena_challenge_num_ = value;
}

// repeated .db_user_arena_log logs = 9;
inline int db_user_arena::logs_size() const {
  return logs_.size();
}
inline void db_user_arena::clear_logs() {
  logs_.Clear();
}
inline const ::db_user_arena_log& db_user_arena::logs(int index) const {
  return logs_.Get(index);
}
inline ::db_user_arena_log* db_user_arena::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::db_user_arena_log* db_user_arena::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_arena_log >&
db_user_arena::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_arena_log >*
db_user_arena::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// db_user_base_info

// required uint32 user_id = 1;
inline bool db_user_base_info::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_base_info::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_base_info::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_base_info::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 db_user_base_info::user_id() const {
  return user_id_;
}
inline void db_user_base_info::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required string name = 2;
inline bool db_user_base_info::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_base_info::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_base_info::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_base_info::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& db_user_base_info::name() const {
  return *name_;
}
inline void db_user_base_info::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void db_user_base_info::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void db_user_base_info::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* db_user_base_info::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* db_user_base_info::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void db_user_base_info::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 level = 3;
inline bool db_user_base_info::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_base_info::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_base_info::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_base_info::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 db_user_base_info::level() const {
  return level_;
}
inline void db_user_base_info::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 exp = 4;
inline bool db_user_base_info::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_base_info::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_base_info::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_base_info::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 db_user_base_info::exp() const {
  return exp_;
}
inline void db_user_base_info::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// required uint32 vip = 5;
inline bool db_user_base_info::has_vip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void db_user_base_info::set_has_vip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void db_user_base_info::clear_has_vip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void db_user_base_info::clear_vip() {
  vip_ = 0u;
  clear_has_vip();
}
inline ::google::protobuf::uint32 db_user_base_info::vip() const {
  return vip_;
}
inline void db_user_base_info::set_vip(::google::protobuf::uint32 value) {
  set_has_vip();
  vip_ = value;
}

// required uint32 diamond = 6;
inline bool db_user_base_info::has_diamond() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void db_user_base_info::set_has_diamond() {
  _has_bits_[0] |= 0x00000020u;
}
inline void db_user_base_info::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void db_user_base_info::clear_diamond() {
  diamond_ = 0u;
  clear_has_diamond();
}
inline ::google::protobuf::uint32 db_user_base_info::diamond() const {
  return diamond_;
}
inline void db_user_base_info::set_diamond(::google::protobuf::uint32 value) {
  set_has_diamond();
  diamond_ = value;
}

// required uint32 gold = 7;
inline bool db_user_base_info::has_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void db_user_base_info::set_has_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void db_user_base_info::clear_has_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void db_user_base_info::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 db_user_base_info::gold() const {
  return gold_;
}
inline void db_user_base_info::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// required uint32 health_cur = 8;
inline bool db_user_base_info::has_health_cur() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void db_user_base_info::set_has_health_cur() {
  _has_bits_[0] |= 0x00000080u;
}
inline void db_user_base_info::clear_has_health_cur() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void db_user_base_info::clear_health_cur() {
  health_cur_ = 0u;
  clear_has_health_cur();
}
inline ::google::protobuf::uint32 db_user_base_info::health_cur() const {
  return health_cur_;
}
inline void db_user_base_info::set_health_cur(::google::protobuf::uint32 value) {
  set_has_health_cur();
  health_cur_ = value;
}

// required uint32 health_last_update_timestamp = 9;
inline bool db_user_base_info::has_health_last_update_timestamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void db_user_base_info::set_has_health_last_update_timestamp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void db_user_base_info::clear_has_health_last_update_timestamp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void db_user_base_info::clear_health_last_update_timestamp() {
  health_last_update_timestamp_ = 0u;
  clear_has_health_last_update_timestamp();
}
inline ::google::protobuf::uint32 db_user_base_info::health_last_update_timestamp() const {
  return health_last_update_timestamp_;
}
inline void db_user_base_info::set_health_last_update_timestamp(::google::protobuf::uint32 value) {
  set_has_health_last_update_timestamp();
  health_last_update_timestamp_ = value;
}

// required uint32 skill_point = 10;
inline bool db_user_base_info::has_skill_point() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void db_user_base_info::set_has_skill_point() {
  _has_bits_[0] |= 0x00000200u;
}
inline void db_user_base_info::clear_has_skill_point() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void db_user_base_info::clear_skill_point() {
  skill_point_ = 0u;
  clear_has_skill_point();
}
inline ::google::protobuf::uint32 db_user_base_info::skill_point() const {
  return skill_point_;
}
inline void db_user_base_info::set_skill_point(::google::protobuf::uint32 value) {
  set_has_skill_point();
  skill_point_ = value;
}

// required uint32 skill_point_last_update_timestamp = 11;
inline bool db_user_base_info::has_skill_point_last_update_timestamp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void db_user_base_info::set_has_skill_point_last_update_timestamp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void db_user_base_info::clear_has_skill_point_last_update_timestamp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void db_user_base_info::clear_skill_point_last_update_timestamp() {
  skill_point_last_update_timestamp_ = 0u;
  clear_has_skill_point_last_update_timestamp();
}
inline ::google::protobuf::uint32 db_user_base_info::skill_point_last_update_timestamp() const {
  return skill_point_last_update_timestamp_;
}
inline void db_user_base_info::set_skill_point_last_update_timestamp(::google::protobuf::uint32 value) {
  set_has_skill_point_last_update_timestamp();
  skill_point_last_update_timestamp_ = value;
}

// required uint32 invoke_gold_free_left_num = 12;
inline bool db_user_base_info::has_invoke_gold_free_left_num() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void db_user_base_info::set_has_invoke_gold_free_left_num() {
  _has_bits_[0] |= 0x00000800u;
}
inline void db_user_base_info::clear_has_invoke_gold_free_left_num() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void db_user_base_info::clear_invoke_gold_free_left_num() {
  invoke_gold_free_left_num_ = 0u;
  clear_has_invoke_gold_free_left_num();
}
inline ::google::protobuf::uint32 db_user_base_info::invoke_gold_free_left_num() const {
  return invoke_gold_free_left_num_;
}
inline void db_user_base_info::set_invoke_gold_free_left_num(::google::protobuf::uint32 value) {
  set_has_invoke_gold_free_left_num();
  invoke_gold_free_left_num_ = value;
}

// required uint32 invoke_gold_free_update_timestamp = 13;
inline bool db_user_base_info::has_invoke_gold_free_update_timestamp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void db_user_base_info::set_has_invoke_gold_free_update_timestamp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void db_user_base_info::clear_has_invoke_gold_free_update_timestamp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void db_user_base_info::clear_invoke_gold_free_update_timestamp() {
  invoke_gold_free_update_timestamp_ = 0u;
  clear_has_invoke_gold_free_update_timestamp();
}
inline ::google::protobuf::uint32 db_user_base_info::invoke_gold_free_update_timestamp() const {
  return invoke_gold_free_update_timestamp_;
}
inline void db_user_base_info::set_invoke_gold_free_update_timestamp(::google::protobuf::uint32 value) {
  set_has_invoke_gold_free_update_timestamp();
  invoke_gold_free_update_timestamp_ = value;
}

// required uint32 invoke_gold_n_total_num = 14;
inline bool db_user_base_info::has_invoke_gold_n_total_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void db_user_base_info::set_has_invoke_gold_n_total_num() {
  _has_bits_[0] |= 0x00002000u;
}
inline void db_user_base_info::clear_has_invoke_gold_n_total_num() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void db_user_base_info::clear_invoke_gold_n_total_num() {
  invoke_gold_n_total_num_ = 0u;
  clear_has_invoke_gold_n_total_num();
}
inline ::google::protobuf::uint32 db_user_base_info::invoke_gold_n_total_num() const {
  return invoke_gold_n_total_num_;
}
inline void db_user_base_info::set_invoke_gold_n_total_num(::google::protobuf::uint32 value) {
  set_has_invoke_gold_n_total_num();
  invoke_gold_n_total_num_ = value;
}

// required uint32 invoke_diamond_free_left_num = 15;
inline bool db_user_base_info::has_invoke_diamond_free_left_num() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void db_user_base_info::set_has_invoke_diamond_free_left_num() {
  _has_bits_[0] |= 0x00004000u;
}
inline void db_user_base_info::clear_has_invoke_diamond_free_left_num() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void db_user_base_info::clear_invoke_diamond_free_left_num() {
  invoke_diamond_free_left_num_ = 0u;
  clear_has_invoke_diamond_free_left_num();
}
inline ::google::protobuf::uint32 db_user_base_info::invoke_diamond_free_left_num() const {
  return invoke_diamond_free_left_num_;
}
inline void db_user_base_info::set_invoke_diamond_free_left_num(::google::protobuf::uint32 value) {
  set_has_invoke_diamond_free_left_num();
  invoke_diamond_free_left_num_ = value;
}

// required uint32 invoke_diamond_free_update_timestamp = 16;
inline bool db_user_base_info::has_invoke_diamond_free_update_timestamp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void db_user_base_info::set_has_invoke_diamond_free_update_timestamp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void db_user_base_info::clear_has_invoke_diamond_free_update_timestamp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void db_user_base_info::clear_invoke_diamond_free_update_timestamp() {
  invoke_diamond_free_update_timestamp_ = 0u;
  clear_has_invoke_diamond_free_update_timestamp();
}
inline ::google::protobuf::uint32 db_user_base_info::invoke_diamond_free_update_timestamp() const {
  return invoke_diamond_free_update_timestamp_;
}
inline void db_user_base_info::set_invoke_diamond_free_update_timestamp(::google::protobuf::uint32 value) {
  set_has_invoke_diamond_free_update_timestamp();
  invoke_diamond_free_update_timestamp_ = value;
}

// required uint32 invoke_diamond_n_total_num = 17;
inline bool db_user_base_info::has_invoke_diamond_n_total_num() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void db_user_base_info::set_has_invoke_diamond_n_total_num() {
  _has_bits_[0] |= 0x00010000u;
}
inline void db_user_base_info::clear_has_invoke_diamond_n_total_num() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void db_user_base_info::clear_invoke_diamond_n_total_num() {
  invoke_diamond_n_total_num_ = 0u;
  clear_has_invoke_diamond_n_total_num();
}
inline ::google::protobuf::uint32 db_user_base_info::invoke_diamond_n_total_num() const {
  return invoke_diamond_n_total_num_;
}
inline void db_user_base_info::set_invoke_diamond_n_total_num(::google::protobuf::uint32 value) {
  set_has_invoke_diamond_n_total_num();
  invoke_diamond_n_total_num_ = value;
}

// required uint32 head_id = 18;
inline bool db_user_base_info::has_head_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void db_user_base_info::set_has_head_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void db_user_base_info::clear_has_head_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void db_user_base_info::clear_head_id() {
  head_id_ = 0u;
  clear_has_head_id();
}
inline ::google::protobuf::uint32 db_user_base_info::head_id() const {
  return head_id_;
}
inline void db_user_base_info::set_head_id(::google::protobuf::uint32 value) {
  set_has_head_id();
  head_id_ = value;
}

// required uint32 head_frame_id = 19;
inline bool db_user_base_info::has_head_frame_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void db_user_base_info::set_has_head_frame_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void db_user_base_info::clear_has_head_frame_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void db_user_base_info::clear_head_frame_id() {
  head_frame_id_ = 0u;
  clear_has_head_frame_id();
}
inline ::google::protobuf::uint32 db_user_base_info::head_frame_id() const {
  return head_frame_id_;
}
inline void db_user_base_info::set_head_frame_id(::google::protobuf::uint32 value) {
  set_has_head_frame_id();
  head_frame_id_ = value;
}

// required uint32 friend_point = 20;
inline bool db_user_base_info::has_friend_point() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void db_user_base_info::set_has_friend_point() {
  _has_bits_[0] |= 0x00080000u;
}
inline void db_user_base_info::clear_has_friend_point() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void db_user_base_info::clear_friend_point() {
  friend_point_ = 0u;
  clear_has_friend_point();
}
inline ::google::protobuf::uint32 db_user_base_info::friend_point() const {
  return friend_point_;
}
inline void db_user_base_info::set_friend_point(::google::protobuf::uint32 value) {
  set_has_friend_point();
  friend_point_ = value;
}

// required string signature = 21;
inline bool db_user_base_info::has_signature() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void db_user_base_info::set_has_signature() {
  _has_bits_[0] |= 0x00100000u;
}
inline void db_user_base_info::clear_has_signature() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void db_user_base_info::clear_signature() {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& db_user_base_info::signature() const {
  return *signature_;
}
inline void db_user_base_info::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void db_user_base_info::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void db_user_base_info::set_signature(const char* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* db_user_base_info::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  return signature_;
}
inline ::std::string* db_user_base_info::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void db_user_base_info::set_allocated_signature(::std::string* signature) {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    delete signature_;
  }
  if (signature) {
    set_has_signature();
    signature_ = signature;
  } else {
    clear_has_signature();
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 fight_power = 22;
inline bool db_user_base_info::has_fight_power() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void db_user_base_info::set_has_fight_power() {
  _has_bits_[0] |= 0x00200000u;
}
inline void db_user_base_info::clear_has_fight_power() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void db_user_base_info::clear_fight_power() {
  fight_power_ = 0u;
  clear_has_fight_power();
}
inline ::google::protobuf::uint32 db_user_base_info::fight_power() const {
  return fight_power_;
}
inline void db_user_base_info::set_fight_power(::google::protobuf::uint32 value) {
  set_has_fight_power();
  fight_power_ = value;
}

// required uint32 crusade_point = 23;
inline bool db_user_base_info::has_crusade_point() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void db_user_base_info::set_has_crusade_point() {
  _has_bits_[0] |= 0x00400000u;
}
inline void db_user_base_info::clear_has_crusade_point() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void db_user_base_info::clear_crusade_point() {
  crusade_point_ = 0u;
  clear_has_crusade_point();
}
inline ::google::protobuf::uint32 db_user_base_info::crusade_point() const {
  return crusade_point_;
}
inline void db_user_base_info::set_crusade_point(::google::protobuf::uint32 value) {
  set_has_crusade_point();
  crusade_point_ = value;
}

// -------------------------------------------------------------------

// db_user_sign

// required uint32 sign_1_times = 1;
inline bool db_user_sign::has_sign_1_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_sign::set_has_sign_1_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_sign::clear_has_sign_1_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_sign::clear_sign_1_times() {
  sign_1_times_ = 0u;
  clear_has_sign_1_times();
}
inline ::google::protobuf::uint32 db_user_sign::sign_1_times() const {
  return sign_1_times_;
}
inline void db_user_sign::set_sign_1_times(::google::protobuf::uint32 value) {
  set_has_sign_1_times();
  sign_1_times_ = value;
}

// required string sign_n_reward_status = 2;
inline bool db_user_sign::has_sign_n_reward_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_sign::set_has_sign_n_reward_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_sign::clear_has_sign_n_reward_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_sign::clear_sign_n_reward_status() {
  if (sign_n_reward_status_ != &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_->clear();
  }
  clear_has_sign_n_reward_status();
}
inline const ::std::string& db_user_sign::sign_n_reward_status() const {
  return *sign_n_reward_status_;
}
inline void db_user_sign::set_sign_n_reward_status(const ::std::string& value) {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  sign_n_reward_status_->assign(value);
}
inline void db_user_sign::set_sign_n_reward_status(const char* value) {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  sign_n_reward_status_->assign(value);
}
inline void db_user_sign::set_sign_n_reward_status(const char* value, size_t size) {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  sign_n_reward_status_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* db_user_sign::mutable_sign_n_reward_status() {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  return sign_n_reward_status_;
}
inline ::std::string* db_user_sign::release_sign_n_reward_status() {
  clear_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_n_reward_status_;
    sign_n_reward_status_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void db_user_sign::set_allocated_sign_n_reward_status(::std::string* sign_n_reward_status) {
  if (sign_n_reward_status_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_n_reward_status_;
  }
  if (sign_n_reward_status) {
    set_has_sign_n_reward_status();
    sign_n_reward_status_ = sign_n_reward_status;
  } else {
    clear_has_sign_n_reward_status();
    sign_n_reward_status_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 last_sign_time = 3;
inline bool db_user_sign::has_last_sign_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_sign::set_has_last_sign_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_sign::clear_has_last_sign_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_sign::clear_last_sign_time() {
  last_sign_time_ = 0u;
  clear_has_last_sign_time();
}
inline ::google::protobuf::uint32 db_user_sign::last_sign_time() const {
  return last_sign_time_;
}
inline void db_user_sign::set_last_sign_time(::google::protobuf::uint32 value) {
  set_has_last_sign_time();
  last_sign_time_ = value;
}

// required uint32 add_signed_times = 4;
inline bool db_user_sign::has_add_signed_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_sign::set_has_add_signed_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_sign::clear_has_add_signed_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_sign::clear_add_signed_times() {
  add_signed_times_ = 0u;
  clear_has_add_signed_times();
}
inline ::google::protobuf::uint32 db_user_sign::add_signed_times() const {
  return add_signed_times_;
}
inline void db_user_sign::set_add_signed_times(::google::protobuf::uint32 value) {
  set_has_add_signed_times();
  add_signed_times_ = value;
}

// -------------------------------------------------------------------

// db_user_novice_guide_array

// repeated uint32 guide_ids = 14;
inline int db_user_novice_guide_array::guide_ids_size() const {
  return guide_ids_.size();
}
inline void db_user_novice_guide_array::clear_guide_ids() {
  guide_ids_.Clear();
}
inline ::google::protobuf::uint32 db_user_novice_guide_array::guide_ids(int index) const {
  return guide_ids_.Get(index);
}
inline void db_user_novice_guide_array::set_guide_ids(int index, ::google::protobuf::uint32 value) {
  guide_ids_.Set(index, value);
}
inline void db_user_novice_guide_array::add_guide_ids(::google::protobuf::uint32 value) {
  guide_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
db_user_novice_guide_array::guide_ids() const {
  return guide_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
db_user_novice_guide_array::mutable_guide_ids() {
  return &guide_ids_;
}

// -------------------------------------------------------------------

// db_user_friend_friend_info

// required .friend_base_info base_info = 1;
inline bool db_user_friend_friend_info::has_base_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_friend_friend_info::set_has_base_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_friend_friend_info::clear_has_base_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_friend_friend_info::clear_base_info() {
  if (base_info_ != NULL) base_info_->::friend_base_info::Clear();
  clear_has_base_info();
}
inline const ::friend_base_info& db_user_friend_friend_info::base_info() const {
  return base_info_ != NULL ? *base_info_ : *default_instance_->base_info_;
}
inline ::friend_base_info* db_user_friend_friend_info::mutable_base_info() {
  set_has_base_info();
  if (base_info_ == NULL) base_info_ = new ::friend_base_info;
  return base_info_;
}
inline ::friend_base_info* db_user_friend_friend_info::release_base_info() {
  clear_has_base_info();
  ::friend_base_info* temp = base_info_;
  base_info_ = NULL;
  return temp;
}
inline void db_user_friend_friend_info::set_allocated_base_info(::friend_base_info* base_info) {
  delete base_info_;
  base_info_ = base_info;
  if (base_info) {
    set_has_base_info();
  } else {
    clear_has_base_info();
  }
}

// required uint32 friend_give_timestamp = 2;
inline bool db_user_friend_friend_info::has_friend_give_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_friend_friend_info::set_has_friend_give_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_friend_friend_info::clear_has_friend_give_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_friend_friend_info::clear_friend_give_timestamp() {
  friend_give_timestamp_ = 0u;
  clear_has_friend_give_timestamp();
}
inline ::google::protobuf::uint32 db_user_friend_friend_info::friend_give_timestamp() const {
  return friend_give_timestamp_;
}
inline void db_user_friend_friend_info::set_friend_give_timestamp(::google::protobuf::uint32 value) {
  set_has_friend_give_timestamp();
  friend_give_timestamp_ = value;
}

// required uint32 me_give_timestamp = 3;
inline bool db_user_friend_friend_info::has_me_give_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_friend_friend_info::set_has_me_give_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_friend_friend_info::clear_has_me_give_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_friend_friend_info::clear_me_give_timestamp() {
  me_give_timestamp_ = 0u;
  clear_has_me_give_timestamp();
}
inline ::google::protobuf::uint32 db_user_friend_friend_info::me_give_timestamp() const {
  return me_give_timestamp_;
}
inline void db_user_friend_friend_info::set_me_give_timestamp(::google::protobuf::uint32 value) {
  set_has_me_give_timestamp();
  me_give_timestamp_ = value;
}

// -------------------------------------------------------------------

// db_user_friend

// repeated .db_user_friend.friend_info friends = 1;
inline int db_user_friend::friends_size() const {
  return friends_.size();
}
inline void db_user_friend::clear_friends() {
  friends_.Clear();
}
inline const ::db_user_friend_friend_info& db_user_friend::friends(int index) const {
  return friends_.Get(index);
}
inline ::db_user_friend_friend_info* db_user_friend::mutable_friends(int index) {
  return friends_.Mutable(index);
}
inline ::db_user_friend_friend_info* db_user_friend::add_friends() {
  return friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_friend_friend_info >&
db_user_friend::friends() const {
  return friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_friend_friend_info >*
db_user_friend::mutable_friends() {
  return &friends_;
}

// repeated .friend_base_info applies = 2;
inline int db_user_friend::applies_size() const {
  return applies_.size();
}
inline void db_user_friend::clear_applies() {
  applies_.Clear();
}
inline const ::friend_base_info& db_user_friend::applies(int index) const {
  return applies_.Get(index);
}
inline ::friend_base_info* db_user_friend::mutable_applies(int index) {
  return applies_.Mutable(index);
}
inline ::friend_base_info* db_user_friend::add_applies() {
  return applies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::friend_base_info >&
db_user_friend::applies() const {
  return applies_;
}
inline ::google::protobuf::RepeatedPtrField< ::friend_base_info >*
db_user_friend::mutable_applies() {
  return &applies_;
}

// repeated .friend_base_info confirms = 3;
inline int db_user_friend::confirms_size() const {
  return confirms_.size();
}
inline void db_user_friend::clear_confirms() {
  confirms_.Clear();
}
inline const ::friend_base_info& db_user_friend::confirms(int index) const {
  return confirms_.Get(index);
}
inline ::friend_base_info* db_user_friend::mutable_confirms(int index) {
  return confirms_.Mutable(index);
}
inline ::friend_base_info* db_user_friend::add_confirms() {
  return confirms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::friend_base_info >&
db_user_friend::confirms() const {
  return confirms_;
}
inline ::google::protobuf::RepeatedPtrField< ::friend_base_info >*
db_user_friend::mutable_confirms() {
  return &confirms_;
}

// repeated .friend_base_info recommends = 4;
inline int db_user_friend::recommends_size() const {
  return recommends_.size();
}
inline void db_user_friend::clear_recommends() {
  recommends_.Clear();
}
inline const ::friend_base_info& db_user_friend::recommends(int index) const {
  return recommends_.Get(index);
}
inline ::friend_base_info* db_user_friend::mutable_recommends(int index) {
  return recommends_.Mutable(index);
}
inline ::friend_base_info* db_user_friend::add_recommends() {
  return recommends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::friend_base_info >&
db_user_friend::recommends() const {
  return recommends_;
}
inline ::google::protobuf::RepeatedPtrField< ::friend_base_info >*
db_user_friend::mutable_recommends() {
  return &recommends_;
}

// -------------------------------------------------------------------

// db_user_crusade

// repeated .user_crusade.crusade_hero me_heros = 1;
inline int db_user_crusade::me_heros_size() const {
  return me_heros_.size();
}
inline void db_user_crusade::clear_me_heros() {
  me_heros_.Clear();
}
inline const ::user_crusade_crusade_hero& db_user_crusade::me_heros(int index) const {
  return me_heros_.Get(index);
}
inline ::user_crusade_crusade_hero* db_user_crusade::mutable_me_heros(int index) {
  return me_heros_.Mutable(index);
}
inline ::user_crusade_crusade_hero* db_user_crusade::add_me_heros() {
  return me_heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >&
db_user_crusade::me_heros() const {
  return me_heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >*
db_user_crusade::mutable_me_heros() {
  return &me_heros_;
}

// repeated .user_crusade.crusade_hero enemy_heros = 2;
inline int db_user_crusade::enemy_heros_size() const {
  return enemy_heros_.size();
}
inline void db_user_crusade::clear_enemy_heros() {
  enemy_heros_.Clear();
}
inline const ::user_crusade_crusade_hero& db_user_crusade::enemy_heros(int index) const {
  return enemy_heros_.Get(index);
}
inline ::user_crusade_crusade_hero* db_user_crusade::mutable_enemy_heros(int index) {
  return enemy_heros_.Mutable(index);
}
inline ::user_crusade_crusade_hero* db_user_crusade::add_enemy_heros() {
  return enemy_heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >&
db_user_crusade::enemy_heros() const {
  return enemy_heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >*
db_user_crusade::mutable_enemy_heros() {
  return &enemy_heros_;
}

// required uint32 wave = 3;
inline bool db_user_crusade::has_wave() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_crusade::set_has_wave() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_crusade::clear_has_wave() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_crusade::clear_wave() {
  wave_ = 0u;
  clear_has_wave();
}
inline ::google::protobuf::uint32 db_user_crusade::wave() const {
  return wave_;
}
inline void db_user_crusade::set_wave(::google::protobuf::uint32 value) {
  set_has_wave();
  wave_ = value;
}

// -------------------------------------------------------------------

// db_user_guild_info_struct_apply

// required uint32 guild_id = 1;
inline bool db_user_guild_info_struct_apply::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_guild_info_struct_apply::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_guild_info_struct_apply::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_guild_info_struct_apply::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 db_user_guild_info_struct_apply::guild_id() const {
  return guild_id_;
}
inline void db_user_guild_info_struct_apply::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// required uint32 time = 2;
inline bool db_user_guild_info_struct_apply::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_guild_info_struct_apply::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_guild_info_struct_apply::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_guild_info_struct_apply::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 db_user_guild_info_struct_apply::time() const {
  return time_;
}
inline void db_user_guild_info_struct_apply::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// db_user_guild_info_struct_boss_info_struct_dead_hero

// required uint32 hero_id = 1;
inline bool db_user_guild_info_struct_boss_info_struct_dead_hero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_guild_info_struct_boss_info_struct_dead_hero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_guild_info_struct_boss_info_struct_dead_hero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_guild_info_struct_boss_info_struct_dead_hero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 db_user_guild_info_struct_boss_info_struct_dead_hero::hero_id() const {
  return hero_id_;
}
inline void db_user_guild_info_struct_boss_info_struct_dead_hero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// required uint32 dead_time = 2;
inline bool db_user_guild_info_struct_boss_info_struct_dead_hero::has_dead_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_guild_info_struct_boss_info_struct_dead_hero::set_has_dead_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_guild_info_struct_boss_info_struct_dead_hero::clear_has_dead_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_guild_info_struct_boss_info_struct_dead_hero::clear_dead_time() {
  dead_time_ = 0u;
  clear_has_dead_time();
}
inline ::google::protobuf::uint32 db_user_guild_info_struct_boss_info_struct_dead_hero::dead_time() const {
  return dead_time_;
}
inline void db_user_guild_info_struct_boss_info_struct_dead_hero::set_dead_time(::google::protobuf::uint32 value) {
  set_has_dead_time();
  dead_time_ = value;
}

// -------------------------------------------------------------------

// db_user_guild_info_struct_boss_info

// required uint32 boss_position = 1;
inline bool db_user_guild_info_struct_boss_info::has_boss_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_guild_info_struct_boss_info::set_has_boss_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_guild_info_struct_boss_info::clear_has_boss_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_guild_info_struct_boss_info::clear_boss_position() {
  boss_position_ = 0u;
  clear_has_boss_position();
}
inline ::google::protobuf::uint32 db_user_guild_info_struct_boss_info::boss_position() const {
  return boss_position_;
}
inline void db_user_guild_info_struct_boss_info::set_boss_position(::google::protobuf::uint32 value) {
  set_has_boss_position();
  boss_position_ = value;
}

// required uint32 boss_lose_hp = 2;
inline bool db_user_guild_info_struct_boss_info::has_boss_lose_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_guild_info_struct_boss_info::set_has_boss_lose_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_guild_info_struct_boss_info::clear_has_boss_lose_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_guild_info_struct_boss_info::clear_boss_lose_hp() {
  boss_lose_hp_ = 0u;
  clear_has_boss_lose_hp();
}
inline ::google::protobuf::uint32 db_user_guild_info_struct_boss_info::boss_lose_hp() const {
  return boss_lose_hp_;
}
inline void db_user_guild_info_struct_boss_info::set_boss_lose_hp(::google::protobuf::uint32 value) {
  set_has_boss_lose_hp();
  boss_lose_hp_ = value;
}

// required uint32 last_reset_time = 3;
inline bool db_user_guild_info_struct_boss_info::has_last_reset_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_guild_info_struct_boss_info::set_has_last_reset_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_guild_info_struct_boss_info::clear_has_last_reset_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_guild_info_struct_boss_info::clear_last_reset_time() {
  last_reset_time_ = 0u;
  clear_has_last_reset_time();
}
inline ::google::protobuf::uint32 db_user_guild_info_struct_boss_info::last_reset_time() const {
  return last_reset_time_;
}
inline void db_user_guild_info_struct_boss_info::set_last_reset_time(::google::protobuf::uint32 value) {
  set_has_last_reset_time();
  last_reset_time_ = value;
}

// required uint32 last_day_reset_num = 4;
inline bool db_user_guild_info_struct_boss_info::has_last_day_reset_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_guild_info_struct_boss_info::set_has_last_day_reset_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_guild_info_struct_boss_info::clear_has_last_day_reset_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_guild_info_struct_boss_info::clear_last_day_reset_num() {
  last_day_reset_num_ = 0u;
  clear_has_last_day_reset_num();
}
inline ::google::protobuf::uint32 db_user_guild_info_struct_boss_info::last_day_reset_num() const {
  return last_day_reset_num_;
}
inline void db_user_guild_info_struct_boss_info::set_last_day_reset_num(::google::protobuf::uint32 value) {
  set_has_last_day_reset_num();
  last_day_reset_num_ = value;
}

// repeated .db_user_guild_info.struct_boss_info.struct_dead_hero dead_heros = 5;
inline int db_user_guild_info_struct_boss_info::dead_heros_size() const {
  return dead_heros_.size();
}
inline void db_user_guild_info_struct_boss_info::clear_dead_heros() {
  dead_heros_.Clear();
}
inline const ::db_user_guild_info_struct_boss_info_struct_dead_hero& db_user_guild_info_struct_boss_info::dead_heros(int index) const {
  return dead_heros_.Get(index);
}
inline ::db_user_guild_info_struct_boss_info_struct_dead_hero* db_user_guild_info_struct_boss_info::mutable_dead_heros(int index) {
  return dead_heros_.Mutable(index);
}
inline ::db_user_guild_info_struct_boss_info_struct_dead_hero* db_user_guild_info_struct_boss_info::add_dead_heros() {
  return dead_heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_boss_info_struct_dead_hero >&
db_user_guild_info_struct_boss_info::dead_heros() const {
  return dead_heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_boss_info_struct_dead_hero >*
db_user_guild_info_struct_boss_info::mutable_dead_heros() {
  return &dead_heros_;
}

// -------------------------------------------------------------------

// db_user_guild_info

// required uint32 guild_id = 1;
inline bool db_user_guild_info::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_guild_info::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_guild_info::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_guild_info::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 db_user_guild_info::guild_id() const {
  return guild_id_;
}
inline void db_user_guild_info::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// required .e_guild_position position = 2;
inline bool db_user_guild_info::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_guild_info::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_guild_info::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_guild_info::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::e_guild_position db_user_guild_info::position() const {
  return static_cast< ::e_guild_position >(position_);
}
inline void db_user_guild_info::set_position(::e_guild_position value) {
  assert(::e_guild_position_IsValid(value));
  set_has_position();
  position_ = value;
}

// required uint32 leave_time = 3;
inline bool db_user_guild_info::has_leave_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_guild_info::set_has_leave_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_guild_info::clear_has_leave_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_guild_info::clear_leave_time() {
  leave_time_ = 0u;
  clear_has_leave_time();
}
inline ::google::protobuf::uint32 db_user_guild_info::leave_time() const {
  return leave_time_;
}
inline void db_user_guild_info::set_leave_time(::google::protobuf::uint32 value) {
  set_has_leave_time();
  leave_time_ = value;
}

// required uint32 coin = 4;
inline bool db_user_guild_info::has_coin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_guild_info::set_has_coin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_guild_info::clear_has_coin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_guild_info::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 db_user_guild_info::coin() const {
  return coin_;
}
inline void db_user_guild_info::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// repeated .db_user_guild_info.struct_apply applys = 5;
inline int db_user_guild_info::applys_size() const {
  return applys_.size();
}
inline void db_user_guild_info::clear_applys() {
  applys_.Clear();
}
inline const ::db_user_guild_info_struct_apply& db_user_guild_info::applys(int index) const {
  return applys_.Get(index);
}
inline ::db_user_guild_info_struct_apply* db_user_guild_info::mutable_applys(int index) {
  return applys_.Mutable(index);
}
inline ::db_user_guild_info_struct_apply* db_user_guild_info::add_applys() {
  return applys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_apply >&
db_user_guild_info::applys() const {
  return applys_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_apply >*
db_user_guild_info::mutable_applys() {
  return &applys_;
}

// repeated .db_user_guild_info.struct_boss_info bosses = 6;
inline int db_user_guild_info::bosses_size() const {
  return bosses_.size();
}
inline void db_user_guild_info::clear_bosses() {
  bosses_.Clear();
}
inline const ::db_user_guild_info_struct_boss_info& db_user_guild_info::bosses(int index) const {
  return bosses_.Get(index);
}
inline ::db_user_guild_info_struct_boss_info* db_user_guild_info::mutable_bosses(int index) {
  return bosses_.Mutable(index);
}
inline ::db_user_guild_info_struct_boss_info* db_user_guild_info::add_bosses() {
  return bosses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_boss_info >&
db_user_guild_info::bosses() const {
  return bosses_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_guild_info_struct_boss_info >*
db_user_guild_info::mutable_bosses() {
  return &bosses_;
}

// -------------------------------------------------------------------

// db_user_info

// required .db_user_base_info user_base_info = 1;
inline bool db_user_info::has_user_base_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void db_user_info::set_has_user_base_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void db_user_info::clear_has_user_base_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void db_user_info::clear_user_base_info() {
  if (user_base_info_ != NULL) user_base_info_->::db_user_base_info::Clear();
  clear_has_user_base_info();
}
inline const ::db_user_base_info& db_user_info::user_base_info() const {
  return user_base_info_ != NULL ? *user_base_info_ : *default_instance_->user_base_info_;
}
inline ::db_user_base_info* db_user_info::mutable_user_base_info() {
  set_has_user_base_info();
  if (user_base_info_ == NULL) user_base_info_ = new ::db_user_base_info;
  return user_base_info_;
}
inline ::db_user_base_info* db_user_info::release_user_base_info() {
  clear_has_user_base_info();
  ::db_user_base_info* temp = user_base_info_;
  user_base_info_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_user_base_info(::db_user_base_info* user_base_info) {
  delete user_base_info_;
  user_base_info_ = user_base_info;
  if (user_base_info) {
    set_has_user_base_info();
  } else {
    clear_has_user_base_info();
  }
}

// optional .db_user_sub_task_array sub_tasks = 2;
inline bool db_user_info::has_sub_tasks() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void db_user_info::set_has_sub_tasks() {
  _has_bits_[0] |= 0x00000002u;
}
inline void db_user_info::clear_has_sub_tasks() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void db_user_info::clear_sub_tasks() {
  if (sub_tasks_ != NULL) sub_tasks_->::db_user_sub_task_array::Clear();
  clear_has_sub_tasks();
}
inline const ::db_user_sub_task_array& db_user_info::sub_tasks() const {
  return sub_tasks_ != NULL ? *sub_tasks_ : *default_instance_->sub_tasks_;
}
inline ::db_user_sub_task_array* db_user_info::mutable_sub_tasks() {
  set_has_sub_tasks();
  if (sub_tasks_ == NULL) sub_tasks_ = new ::db_user_sub_task_array;
  return sub_tasks_;
}
inline ::db_user_sub_task_array* db_user_info::release_sub_tasks() {
  clear_has_sub_tasks();
  ::db_user_sub_task_array* temp = sub_tasks_;
  sub_tasks_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_sub_tasks(::db_user_sub_task_array* sub_tasks) {
  delete sub_tasks_;
  sub_tasks_ = sub_tasks;
  if (sub_tasks) {
    set_has_sub_tasks();
  } else {
    clear_has_sub_tasks();
  }
}

// optional .db_user_hero_array heros = 3;
inline bool db_user_info::has_heros() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void db_user_info::set_has_heros() {
  _has_bits_[0] |= 0x00000004u;
}
inline void db_user_info::clear_has_heros() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void db_user_info::clear_heros() {
  if (heros_ != NULL) heros_->::db_user_hero_array::Clear();
  clear_has_heros();
}
inline const ::db_user_hero_array& db_user_info::heros() const {
  return heros_ != NULL ? *heros_ : *default_instance_->heros_;
}
inline ::db_user_hero_array* db_user_info::mutable_heros() {
  set_has_heros();
  if (heros_ == NULL) heros_ = new ::db_user_hero_array;
  return heros_;
}
inline ::db_user_hero_array* db_user_info::release_heros() {
  clear_has_heros();
  ::db_user_hero_array* temp = heros_;
  heros_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_heros(::db_user_hero_array* heros) {
  delete heros_;
  heros_ = heros;
  if (heros) {
    set_has_heros();
  } else {
    clear_has_heros();
  }
}

// optional .struct_game_element_array items = 4;
inline bool db_user_info::has_items() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void db_user_info::set_has_items() {
  _has_bits_[0] |= 0x00000008u;
}
inline void db_user_info::clear_has_items() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void db_user_info::clear_items() {
  if (items_ != NULL) items_->::struct_game_element_array::Clear();
  clear_has_items();
}
inline const ::struct_game_element_array& db_user_info::items() const {
  return items_ != NULL ? *items_ : *default_instance_->items_;
}
inline ::struct_game_element_array* db_user_info::mutable_items() {
  set_has_items();
  if (items_ == NULL) items_ = new ::struct_game_element_array;
  return items_;
}
inline ::struct_game_element_array* db_user_info::release_items() {
  clear_has_items();
  ::struct_game_element_array* temp = items_;
  items_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_items(::struct_game_element_array* items) {
  delete items_;
  items_ = items;
  if (items) {
    set_has_items();
  } else {
    clear_has_items();
  }
}

// optional .db_user_mail_array mails_received = 5;
inline bool db_user_info::has_mails_received() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void db_user_info::set_has_mails_received() {
  _has_bits_[0] |= 0x00000010u;
}
inline void db_user_info::clear_has_mails_received() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void db_user_info::clear_mails_received() {
  if (mails_received_ != NULL) mails_received_->::db_user_mail_array::Clear();
  clear_has_mails_received();
}
inline const ::db_user_mail_array& db_user_info::mails_received() const {
  return mails_received_ != NULL ? *mails_received_ : *default_instance_->mails_received_;
}
inline ::db_user_mail_array* db_user_info::mutable_mails_received() {
  set_has_mails_received();
  if (mails_received_ == NULL) mails_received_ = new ::db_user_mail_array;
  return mails_received_;
}
inline ::db_user_mail_array* db_user_info::release_mails_received() {
  clear_has_mails_received();
  ::db_user_mail_array* temp = mails_received_;
  mails_received_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_mails_received(::db_user_mail_array* mails_received) {
  delete mails_received_;
  mails_received_ = mails_received;
  if (mails_received) {
    set_has_mails_received();
  } else {
    clear_has_mails_received();
  }
}

// optional .db_user_mail_array mails_unreceived = 6;
inline bool db_user_info::has_mails_unreceived() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void db_user_info::set_has_mails_unreceived() {
  _has_bits_[0] |= 0x00000020u;
}
inline void db_user_info::clear_has_mails_unreceived() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void db_user_info::clear_mails_unreceived() {
  if (mails_unreceived_ != NULL) mails_unreceived_->::db_user_mail_array::Clear();
  clear_has_mails_unreceived();
}
inline const ::db_user_mail_array& db_user_info::mails_unreceived() const {
  return mails_unreceived_ != NULL ? *mails_unreceived_ : *default_instance_->mails_unreceived_;
}
inline ::db_user_mail_array* db_user_info::mutable_mails_unreceived() {
  set_has_mails_unreceived();
  if (mails_unreceived_ == NULL) mails_unreceived_ = new ::db_user_mail_array;
  return mails_unreceived_;
}
inline ::db_user_mail_array* db_user_info::release_mails_unreceived() {
  clear_has_mails_unreceived();
  ::db_user_mail_array* temp = mails_unreceived_;
  mails_unreceived_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_mails_unreceived(::db_user_mail_array* mails_unreceived) {
  delete mails_unreceived_;
  mails_unreceived_ = mails_unreceived;
  if (mails_unreceived) {
    set_has_mails_unreceived();
  } else {
    clear_has_mails_unreceived();
  }
}

// optional .db_user_shop_array shops = 7;
inline bool db_user_info::has_shops() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void db_user_info::set_has_shops() {
  _has_bits_[0] |= 0x00000040u;
}
inline void db_user_info::clear_has_shops() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void db_user_info::clear_shops() {
  if (shops_ != NULL) shops_->::db_user_shop_array::Clear();
  clear_has_shops();
}
inline const ::db_user_shop_array& db_user_info::shops() const {
  return shops_ != NULL ? *shops_ : *default_instance_->shops_;
}
inline ::db_user_shop_array* db_user_info::mutable_shops() {
  set_has_shops();
  if (shops_ == NULL) shops_ = new ::db_user_shop_array;
  return shops_;
}
inline ::db_user_shop_array* db_user_info::release_shops() {
  clear_has_shops();
  ::db_user_shop_array* temp = shops_;
  shops_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_shops(::db_user_shop_array* shops) {
  delete shops_;
  shops_ = shops;
  if (shops) {
    set_has_shops();
  } else {
    clear_has_shops();
  }
}

// optional .db_user_shop_buy_array buy_items = 8;
inline bool db_user_info::has_buy_items() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void db_user_info::set_has_buy_items() {
  _has_bits_[0] |= 0x00000080u;
}
inline void db_user_info::clear_has_buy_items() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void db_user_info::clear_buy_items() {
  if (buy_items_ != NULL) buy_items_->::db_user_shop_buy_array::Clear();
  clear_has_buy_items();
}
inline const ::db_user_shop_buy_array& db_user_info::buy_items() const {
  return buy_items_ != NULL ? *buy_items_ : *default_instance_->buy_items_;
}
inline ::db_user_shop_buy_array* db_user_info::mutable_buy_items() {
  set_has_buy_items();
  if (buy_items_ == NULL) buy_items_ = new ::db_user_shop_buy_array;
  return buy_items_;
}
inline ::db_user_shop_buy_array* db_user_info::release_buy_items() {
  clear_has_buy_items();
  ::db_user_shop_buy_array* temp = buy_items_;
  buy_items_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_buy_items(::db_user_shop_buy_array* buy_items) {
  delete buy_items_;
  buy_items_ = buy_items;
  if (buy_items) {
    set_has_buy_items();
  } else {
    clear_has_buy_items();
  }
}

// optional .db_user_mission_event_array mission_events = 10;
inline bool db_user_info::has_mission_events() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void db_user_info::set_has_mission_events() {
  _has_bits_[0] |= 0x00000100u;
}
inline void db_user_info::clear_has_mission_events() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void db_user_info::clear_mission_events() {
  if (mission_events_ != NULL) mission_events_->::db_user_mission_event_array::Clear();
  clear_has_mission_events();
}
inline const ::db_user_mission_event_array& db_user_info::mission_events() const {
  return mission_events_ != NULL ? *mission_events_ : *default_instance_->mission_events_;
}
inline ::db_user_mission_event_array* db_user_info::mutable_mission_events() {
  set_has_mission_events();
  if (mission_events_ == NULL) mission_events_ = new ::db_user_mission_event_array;
  return mission_events_;
}
inline ::db_user_mission_event_array* db_user_info::release_mission_events() {
  clear_has_mission_events();
  ::db_user_mission_event_array* temp = mission_events_;
  mission_events_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_mission_events(::db_user_mission_event_array* mission_events) {
  delete mission_events_;
  mission_events_ = mission_events;
  if (mission_events) {
    set_has_mission_events();
  } else {
    clear_has_mission_events();
  }
}

// optional .db_user_mission_chain_array mission_chains = 11;
inline bool db_user_info::has_mission_chains() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void db_user_info::set_has_mission_chains() {
  _has_bits_[0] |= 0x00000200u;
}
inline void db_user_info::clear_has_mission_chains() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void db_user_info::clear_mission_chains() {
  if (mission_chains_ != NULL) mission_chains_->::db_user_mission_chain_array::Clear();
  clear_has_mission_chains();
}
inline const ::db_user_mission_chain_array& db_user_info::mission_chains() const {
  return mission_chains_ != NULL ? *mission_chains_ : *default_instance_->mission_chains_;
}
inline ::db_user_mission_chain_array* db_user_info::mutable_mission_chains() {
  set_has_mission_chains();
  if (mission_chains_ == NULL) mission_chains_ = new ::db_user_mission_chain_array;
  return mission_chains_;
}
inline ::db_user_mission_chain_array* db_user_info::release_mission_chains() {
  clear_has_mission_chains();
  ::db_user_mission_chain_array* temp = mission_chains_;
  mission_chains_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_mission_chains(::db_user_mission_chain_array* mission_chains) {
  delete mission_chains_;
  mission_chains_ = mission_chains;
  if (mission_chains) {
    set_has_mission_chains();
  } else {
    clear_has_mission_chains();
  }
}

// optional .db_user_arena arena = 12;
inline bool db_user_info::has_arena() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void db_user_info::set_has_arena() {
  _has_bits_[0] |= 0x00000400u;
}
inline void db_user_info::clear_has_arena() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void db_user_info::clear_arena() {
  if (arena_ != NULL) arena_->::db_user_arena::Clear();
  clear_has_arena();
}
inline const ::db_user_arena& db_user_info::arena() const {
  return arena_ != NULL ? *arena_ : *default_instance_->arena_;
}
inline ::db_user_arena* db_user_info::mutable_arena() {
  set_has_arena();
  if (arena_ == NULL) arena_ = new ::db_user_arena;
  return arena_;
}
inline ::db_user_arena* db_user_info::release_arena() {
  clear_has_arena();
  ::db_user_arena* temp = arena_;
  arena_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_arena(::db_user_arena* arena) {
  delete arena_;
  arena_ = arena;
  if (arena) {
    set_has_arena();
  } else {
    clear_has_arena();
  }
}

// optional .db_user_sign sign = 13;
inline bool db_user_info::has_sign() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void db_user_info::set_has_sign() {
  _has_bits_[0] |= 0x00000800u;
}
inline void db_user_info::clear_has_sign() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void db_user_info::clear_sign() {
  if (sign_ != NULL) sign_->::db_user_sign::Clear();
  clear_has_sign();
}
inline const ::db_user_sign& db_user_info::sign() const {
  return sign_ != NULL ? *sign_ : *default_instance_->sign_;
}
inline ::db_user_sign* db_user_info::mutable_sign() {
  set_has_sign();
  if (sign_ == NULL) sign_ = new ::db_user_sign;
  return sign_;
}
inline ::db_user_sign* db_user_info::release_sign() {
  clear_has_sign();
  ::db_user_sign* temp = sign_;
  sign_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_sign(::db_user_sign* sign) {
  delete sign_;
  sign_ = sign;
  if (sign) {
    set_has_sign();
  } else {
    clear_has_sign();
  }
}

// optional .db_user_novice_guide_array guide = 14;
inline bool db_user_info::has_guide() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void db_user_info::set_has_guide() {
  _has_bits_[0] |= 0x00001000u;
}
inline void db_user_info::clear_has_guide() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void db_user_info::clear_guide() {
  if (guide_ != NULL) guide_->::db_user_novice_guide_array::Clear();
  clear_has_guide();
}
inline const ::db_user_novice_guide_array& db_user_info::guide() const {
  return guide_ != NULL ? *guide_ : *default_instance_->guide_;
}
inline ::db_user_novice_guide_array* db_user_info::mutable_guide() {
  set_has_guide();
  if (guide_ == NULL) guide_ = new ::db_user_novice_guide_array;
  return guide_;
}
inline ::db_user_novice_guide_array* db_user_info::release_guide() {
  clear_has_guide();
  ::db_user_novice_guide_array* temp = guide_;
  guide_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_guide(::db_user_novice_guide_array* guide) {
  delete guide_;
  guide_ = guide;
  if (guide) {
    set_has_guide();
  } else {
    clear_has_guide();
  }
}

// optional .db_user_crusade user_crusade = 15;
inline bool db_user_info::has_user_crusade() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void db_user_info::set_has_user_crusade() {
  _has_bits_[0] |= 0x00002000u;
}
inline void db_user_info::clear_has_user_crusade() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void db_user_info::clear_user_crusade() {
  if (user_crusade_ != NULL) user_crusade_->::db_user_crusade::Clear();
  clear_has_user_crusade();
}
inline const ::db_user_crusade& db_user_info::user_crusade() const {
  return user_crusade_ != NULL ? *user_crusade_ : *default_instance_->user_crusade_;
}
inline ::db_user_crusade* db_user_info::mutable_user_crusade() {
  set_has_user_crusade();
  if (user_crusade_ == NULL) user_crusade_ = new ::db_user_crusade;
  return user_crusade_;
}
inline ::db_user_crusade* db_user_info::release_user_crusade() {
  clear_has_user_crusade();
  ::db_user_crusade* temp = user_crusade_;
  user_crusade_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_user_crusade(::db_user_crusade* user_crusade) {
  delete user_crusade_;
  user_crusade_ = user_crusade;
  if (user_crusade) {
    set_has_user_crusade();
  } else {
    clear_has_user_crusade();
  }
}

// optional .db_user_friend user_friend = 16;
inline bool db_user_info::has_user_friend() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void db_user_info::set_has_user_friend() {
  _has_bits_[0] |= 0x00004000u;
}
inline void db_user_info::clear_has_user_friend() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void db_user_info::clear_user_friend() {
  if (user_friend_ != NULL) user_friend_->::db_user_friend::Clear();
  clear_has_user_friend();
}
inline const ::db_user_friend& db_user_info::user_friend() const {
  return user_friend_ != NULL ? *user_friend_ : *default_instance_->user_friend_;
}
inline ::db_user_friend* db_user_info::mutable_user_friend() {
  set_has_user_friend();
  if (user_friend_ == NULL) user_friend_ = new ::db_user_friend;
  return user_friend_;
}
inline ::db_user_friend* db_user_info::release_user_friend() {
  clear_has_user_friend();
  ::db_user_friend* temp = user_friend_;
  user_friend_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_user_friend(::db_user_friend* user_friend) {
  delete user_friend_;
  user_friend_ = user_friend;
  if (user_friend) {
    set_has_user_friend();
  } else {
    clear_has_user_friend();
  }
}

// optional .db_user_guild_info guild = 17;
inline bool db_user_info::has_guild() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void db_user_info::set_has_guild() {
  _has_bits_[0] |= 0x00008000u;
}
inline void db_user_info::clear_has_guild() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void db_user_info::clear_guild() {
  if (guild_ != NULL) guild_->::db_user_guild_info::Clear();
  clear_has_guild();
}
inline const ::db_user_guild_info& db_user_info::guild() const {
  return guild_ != NULL ? *guild_ : *default_instance_->guild_;
}
inline ::db_user_guild_info* db_user_info::mutable_guild() {
  set_has_guild();
  if (guild_ == NULL) guild_ = new ::db_user_guild_info;
  return guild_;
}
inline ::db_user_guild_info* db_user_info::release_guild() {
  clear_has_guild();
  ::db_user_guild_info* temp = guild_;
  guild_ = NULL;
  return temp;
}
inline void db_user_info::set_allocated_guild(::db_user_guild_info* guild) {
  delete guild_;
  guild_ = guild;
  if (guild) {
    set_has_guild();
  } else {
    clear_has_guild();
  }
}

// -------------------------------------------------------------------

// gs_dbs_user_info_req

// required uint32 user_id = 1;
inline bool gs_dbs_user_info_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_req::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_req::user_id() const {
  return user_id_;
}
inline void gs_dbs_user_info_req::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required bytes user_connect_id = 2;
inline bool gs_dbs_user_info_req::has_user_connect_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_req::set_has_user_connect_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_req::clear_has_user_connect_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_req::clear_user_connect_id() {
  if (user_connect_id_ != &::google::protobuf::internal::kEmptyString) {
    user_connect_id_->clear();
  }
  clear_has_user_connect_id();
}
inline const ::std::string& gs_dbs_user_info_req::user_connect_id() const {
  return *user_connect_id_;
}
inline void gs_dbs_user_info_req::set_user_connect_id(const ::std::string& value) {
  set_has_user_connect_id();
  if (user_connect_id_ == &::google::protobuf::internal::kEmptyString) {
    user_connect_id_ = new ::std::string;
  }
  user_connect_id_->assign(value);
}
inline void gs_dbs_user_info_req::set_user_connect_id(const char* value) {
  set_has_user_connect_id();
  if (user_connect_id_ == &::google::protobuf::internal::kEmptyString) {
    user_connect_id_ = new ::std::string;
  }
  user_connect_id_->assign(value);
}
inline void gs_dbs_user_info_req::set_user_connect_id(const void* value, size_t size) {
  set_has_user_connect_id();
  if (user_connect_id_ == &::google::protobuf::internal::kEmptyString) {
    user_connect_id_ = new ::std::string;
  }
  user_connect_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_user_info_req::mutable_user_connect_id() {
  set_has_user_connect_id();
  if (user_connect_id_ == &::google::protobuf::internal::kEmptyString) {
    user_connect_id_ = new ::std::string;
  }
  return user_connect_id_;
}
inline ::std::string* gs_dbs_user_info_req::release_user_connect_id() {
  clear_has_user_connect_id();
  if (user_connect_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_connect_id_;
    user_connect_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_user_info_req::set_allocated_user_connect_id(::std::string* user_connect_id) {
  if (user_connect_id_ != &::google::protobuf::internal::kEmptyString) {
    delete user_connect_id_;
  }
  if (user_connect_id) {
    set_has_user_connect_id();
    user_connect_id_ = user_connect_id;
  } else {
    clear_has_user_connect_id();
    user_connect_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// dbs_gs_user_info_res

// required uint32 error_code = 1;
inline bool dbs_gs_user_info_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_user_info_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_user_info_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_user_info_res::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 dbs_gs_user_info_res::error_code() const {
  return error_code_;
}
inline void dbs_gs_user_info_res::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
}

// required uint32 user_id = 2;
inline bool dbs_gs_user_info_res::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dbs_gs_user_info_res::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dbs_gs_user_info_res::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dbs_gs_user_info_res::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 dbs_gs_user_info_res::user_id() const {
  return user_id_;
}
inline void dbs_gs_user_info_res::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required bytes user_connect_id = 3;
inline bool dbs_gs_user_info_res::has_user_connect_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dbs_gs_user_info_res::set_has_user_connect_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void dbs_gs_user_info_res::clear_has_user_connect_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void dbs_gs_user_info_res::clear_user_connect_id() {
  if (user_connect_id_ != &::google::protobuf::internal::kEmptyString) {
    user_connect_id_->clear();
  }
  clear_has_user_connect_id();
}
inline const ::std::string& dbs_gs_user_info_res::user_connect_id() const {
  return *user_connect_id_;
}
inline void dbs_gs_user_info_res::set_user_connect_id(const ::std::string& value) {
  set_has_user_connect_id();
  if (user_connect_id_ == &::google::protobuf::internal::kEmptyString) {
    user_connect_id_ = new ::std::string;
  }
  user_connect_id_->assign(value);
}
inline void dbs_gs_user_info_res::set_user_connect_id(const char* value) {
  set_has_user_connect_id();
  if (user_connect_id_ == &::google::protobuf::internal::kEmptyString) {
    user_connect_id_ = new ::std::string;
  }
  user_connect_id_->assign(value);
}
inline void dbs_gs_user_info_res::set_user_connect_id(const void* value, size_t size) {
  set_has_user_connect_id();
  if (user_connect_id_ == &::google::protobuf::internal::kEmptyString) {
    user_connect_id_ = new ::std::string;
  }
  user_connect_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* dbs_gs_user_info_res::mutable_user_connect_id() {
  set_has_user_connect_id();
  if (user_connect_id_ == &::google::protobuf::internal::kEmptyString) {
    user_connect_id_ = new ::std::string;
  }
  return user_connect_id_;
}
inline ::std::string* dbs_gs_user_info_res::release_user_connect_id() {
  clear_has_user_connect_id();
  if (user_connect_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_connect_id_;
    user_connect_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void dbs_gs_user_info_res::set_allocated_user_connect_id(::std::string* user_connect_id) {
  if (user_connect_id_ != &::google::protobuf::internal::kEmptyString) {
    delete user_connect_id_;
  }
  if (user_connect_id) {
    set_has_user_connect_id();
    user_connect_id_ = user_connect_id;
  } else {
    clear_has_user_connect_id();
    user_connect_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .db_user_info user_info = 4;
inline bool dbs_gs_user_info_res::has_user_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void dbs_gs_user_info_res::set_has_user_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void dbs_gs_user_info_res::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void dbs_gs_user_info_res::clear_user_info() {
  if (user_info_ != NULL) user_info_->::db_user_info::Clear();
  clear_has_user_info();
}
inline const ::db_user_info& dbs_gs_user_info_res::user_info() const {
  return user_info_ != NULL ? *user_info_ : *default_instance_->user_info_;
}
inline ::db_user_info* dbs_gs_user_info_res::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) user_info_ = new ::db_user_info;
  return user_info_;
}
inline ::db_user_info* dbs_gs_user_info_res::release_user_info() {
  clear_has_user_info();
  ::db_user_info* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline void dbs_gs_user_info_res::set_allocated_user_info(::db_user_info* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
}

// -------------------------------------------------------------------

// gs_dbs_user_info_new_create_req

// required .db_user_info user_info = 1;
inline bool gs_dbs_user_info_new_create_req::has_user_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_new_create_req::set_has_user_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_new_create_req::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_new_create_req::clear_user_info() {
  if (user_info_ != NULL) user_info_->::db_user_info::Clear();
  clear_has_user_info();
}
inline const ::db_user_info& gs_dbs_user_info_new_create_req::user_info() const {
  return user_info_ != NULL ? *user_info_ : *default_instance_->user_info_;
}
inline ::db_user_info* gs_dbs_user_info_new_create_req::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) user_info_ = new ::db_user_info;
  return user_info_;
}
inline ::db_user_info* gs_dbs_user_info_new_create_req::release_user_info() {
  clear_has_user_info();
  ::db_user_info* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_new_create_req::set_allocated_user_info(::db_user_info* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
}

// -------------------------------------------------------------------

// dbs_gs_user_info_new_create_res

// required uint32 error_code = 1;
inline bool dbs_gs_user_info_new_create_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_user_info_new_create_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_user_info_new_create_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_user_info_new_create_res::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 dbs_gs_user_info_new_create_res::error_code() const {
  return error_code_;
}
inline void dbs_gs_user_info_new_create_res::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_base_info

// required .gs_dbs_user_info_op_req.EOPType op_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_info_op_req_EOPType gs_dbs_user_info_op_req_struct_op_base_info::op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_EOPType >(op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_op_type(::gs_dbs_user_info_op_req_EOPType value) {
  assert(::gs_dbs_user_info_op_req_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// optional string name = 2;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& gs_dbs_user_info_op_req_struct_op_base_info::name() const {
  return *name_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_user_info_op_req_struct_op_base_info::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* gs_dbs_user_info_op_req_struct_op_base_info::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 level = 3;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::level() const {
  return level_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 exp = 4;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::exp() const {
  return exp_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint32 vip = 5;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_vip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_vip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_vip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_vip() {
  vip_ = 0u;
  clear_has_vip();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::vip() const {
  return vip_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_vip(::google::protobuf::uint32 value) {
  set_has_vip();
  vip_ = value;
}

// optional uint32 diamond = 6;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_diamond() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_diamond() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_diamond() {
  diamond_ = 0u;
  clear_has_diamond();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::diamond() const {
  return diamond_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_diamond(::google::protobuf::uint32 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint32 gold = 7;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::gold() const {
  return gold_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint32 health_cur = 8;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_health_cur() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_health_cur() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_health_cur() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_health_cur() {
  health_cur_ = 0u;
  clear_has_health_cur();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::health_cur() const {
  return health_cur_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_health_cur(::google::protobuf::uint32 value) {
  set_has_health_cur();
  health_cur_ = value;
}

// optional uint32 health_last_update_timestamp = 9;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_health_last_update_timestamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_health_last_update_timestamp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_health_last_update_timestamp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_health_last_update_timestamp() {
  health_last_update_timestamp_ = 0u;
  clear_has_health_last_update_timestamp();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::health_last_update_timestamp() const {
  return health_last_update_timestamp_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_health_last_update_timestamp(::google::protobuf::uint32 value) {
  set_has_health_last_update_timestamp();
  health_last_update_timestamp_ = value;
}

// optional uint32 skill_point = 10;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_skill_point() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_skill_point() {
  _has_bits_[0] |= 0x00000200u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_skill_point() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_skill_point() {
  skill_point_ = 0u;
  clear_has_skill_point();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::skill_point() const {
  return skill_point_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_skill_point(::google::protobuf::uint32 value) {
  set_has_skill_point();
  skill_point_ = value;
}

// optional uint32 skill_point_update_timestamp = 11;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_skill_point_update_timestamp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_skill_point_update_timestamp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_skill_point_update_timestamp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_skill_point_update_timestamp() {
  skill_point_update_timestamp_ = 0u;
  clear_has_skill_point_update_timestamp();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::skill_point_update_timestamp() const {
  return skill_point_update_timestamp_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_skill_point_update_timestamp(::google::protobuf::uint32 value) {
  set_has_skill_point_update_timestamp();
  skill_point_update_timestamp_ = value;
}

// optional uint32 invoke_gold_free_left_num = 12;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_invoke_gold_free_left_num() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_invoke_gold_free_left_num() {
  _has_bits_[0] |= 0x00000800u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_invoke_gold_free_left_num() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_invoke_gold_free_left_num() {
  invoke_gold_free_left_num_ = 0u;
  clear_has_invoke_gold_free_left_num();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::invoke_gold_free_left_num() const {
  return invoke_gold_free_left_num_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_invoke_gold_free_left_num(::google::protobuf::uint32 value) {
  set_has_invoke_gold_free_left_num();
  invoke_gold_free_left_num_ = value;
}

// optional uint32 invoke_gold_free_update_timestamp = 13;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_invoke_gold_free_update_timestamp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_invoke_gold_free_update_timestamp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_invoke_gold_free_update_timestamp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_invoke_gold_free_update_timestamp() {
  invoke_gold_free_update_timestamp_ = 0u;
  clear_has_invoke_gold_free_update_timestamp();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::invoke_gold_free_update_timestamp() const {
  return invoke_gold_free_update_timestamp_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_invoke_gold_free_update_timestamp(::google::protobuf::uint32 value) {
  set_has_invoke_gold_free_update_timestamp();
  invoke_gold_free_update_timestamp_ = value;
}

// optional uint32 invoke_gold_n_total_num = 14;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_invoke_gold_n_total_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_invoke_gold_n_total_num() {
  _has_bits_[0] |= 0x00002000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_invoke_gold_n_total_num() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_invoke_gold_n_total_num() {
  invoke_gold_n_total_num_ = 0u;
  clear_has_invoke_gold_n_total_num();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::invoke_gold_n_total_num() const {
  return invoke_gold_n_total_num_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_invoke_gold_n_total_num(::google::protobuf::uint32 value) {
  set_has_invoke_gold_n_total_num();
  invoke_gold_n_total_num_ = value;
}

// optional uint32 invoke_diamond_free_left_num = 15;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_invoke_diamond_free_left_num() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_invoke_diamond_free_left_num() {
  _has_bits_[0] |= 0x00004000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_invoke_diamond_free_left_num() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_invoke_diamond_free_left_num() {
  invoke_diamond_free_left_num_ = 0u;
  clear_has_invoke_diamond_free_left_num();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::invoke_diamond_free_left_num() const {
  return invoke_diamond_free_left_num_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_invoke_diamond_free_left_num(::google::protobuf::uint32 value) {
  set_has_invoke_diamond_free_left_num();
  invoke_diamond_free_left_num_ = value;
}

// optional uint32 invoke_diamond_free_update_timestamp = 16;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_invoke_diamond_free_update_timestamp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_invoke_diamond_free_update_timestamp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_invoke_diamond_free_update_timestamp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_invoke_diamond_free_update_timestamp() {
  invoke_diamond_free_update_timestamp_ = 0u;
  clear_has_invoke_diamond_free_update_timestamp();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::invoke_diamond_free_update_timestamp() const {
  return invoke_diamond_free_update_timestamp_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_invoke_diamond_free_update_timestamp(::google::protobuf::uint32 value) {
  set_has_invoke_diamond_free_update_timestamp();
  invoke_diamond_free_update_timestamp_ = value;
}

// optional uint32 invoke_diamond_n_total_num = 17;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_invoke_diamond_n_total_num() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_invoke_diamond_n_total_num() {
  _has_bits_[0] |= 0x00010000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_invoke_diamond_n_total_num() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_invoke_diamond_n_total_num() {
  invoke_diamond_n_total_num_ = 0u;
  clear_has_invoke_diamond_n_total_num();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::invoke_diamond_n_total_num() const {
  return invoke_diamond_n_total_num_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_invoke_diamond_n_total_num(::google::protobuf::uint32 value) {
  set_has_invoke_diamond_n_total_num();
  invoke_diamond_n_total_num_ = value;
}

// optional uint32 head_id = 18;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_head_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_head_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_head_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_head_id() {
  head_id_ = 0u;
  clear_has_head_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::head_id() const {
  return head_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_head_id(::google::protobuf::uint32 value) {
  set_has_head_id();
  head_id_ = value;
}

// optional uint32 head_frame_id = 19;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_head_frame_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_head_frame_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_head_frame_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_head_frame_id() {
  head_frame_id_ = 0u;
  clear_has_head_frame_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::head_frame_id() const {
  return head_frame_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_head_frame_id(::google::protobuf::uint32 value) {
  set_has_head_frame_id();
  head_frame_id_ = value;
}

// optional uint32 friend_point = 20;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_friend_point() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_friend_point() {
  _has_bits_[0] |= 0x00080000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_friend_point() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_friend_point() {
  friend_point_ = 0u;
  clear_has_friend_point();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::friend_point() const {
  return friend_point_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_friend_point(::google::protobuf::uint32 value) {
  set_has_friend_point();
  friend_point_ = value;
}

// optional string signature = 21;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_signature() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_signature() {
  _has_bits_[0] |= 0x00100000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_signature() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_signature() {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& gs_dbs_user_info_op_req_struct_op_base_info::signature() const {
  return *signature_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_signature(const char* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_user_info_op_req_struct_op_base_info::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  return signature_;
}
inline ::std::string* gs_dbs_user_info_op_req_struct_op_base_info::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_allocated_signature(::std::string* signature) {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    delete signature_;
  }
  if (signature) {
    set_has_signature();
    signature_ = signature;
  } else {
    clear_has_signature();
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 fight_power = 22;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_fight_power() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_fight_power() {
  _has_bits_[0] |= 0x00200000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_fight_power() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_fight_power() {
  fight_power_ = 0u;
  clear_has_fight_power();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::fight_power() const {
  return fight_power_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_fight_power(::google::protobuf::uint32 value) {
  set_has_fight_power();
  fight_power_ = value;
}

// optional uint32 crusade_point = 23;
inline bool gs_dbs_user_info_op_req_struct_op_base_info::has_crusade_point() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_has_crusade_point() {
  _has_bits_[0] |= 0x00400000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_has_crusade_point() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::clear_crusade_point() {
  crusade_point_ = 0u;
  clear_has_crusade_point();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_base_info::crusade_point() const {
  return crusade_point_;
}
inline void gs_dbs_user_info_op_req_struct_op_base_info::set_crusade_point(::google::protobuf::uint32 value) {
  set_has_crusade_point();
  crusade_point_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_sub_task

// required .gs_dbs_user_info_op_req.EOPType op_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_sub_task::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_info_op_req_EOPType gs_dbs_user_info_op_req_struct_op_sub_task::op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_EOPType >(op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_op_type(::gs_dbs_user_info_op_req_EOPType value) {
  assert(::gs_dbs_user_info_op_req_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// required uint32 sub_task_id = 2;
inline bool gs_dbs_user_info_op_req_struct_op_sub_task::has_sub_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_has_sub_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_has_sub_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_sub_task_id() {
  sub_task_id_ = 0u;
  clear_has_sub_task_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_sub_task::sub_task_id() const {
  return sub_task_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_sub_task_id(::google::protobuf::uint32 value) {
  set_has_sub_task_id();
  sub_task_id_ = value;
}

// optional uint32 star = 3;
inline bool gs_dbs_user_info_op_req_struct_op_sub_task::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_sub_task::star() const {
  return star_;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// optional uint32 last_enter_timestamp = 4;
inline bool gs_dbs_user_info_op_req_struct_op_sub_task::has_last_enter_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_has_last_enter_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_has_last_enter_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_last_enter_timestamp() {
  last_enter_timestamp_ = 0u;
  clear_has_last_enter_timestamp();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_sub_task::last_enter_timestamp() const {
  return last_enter_timestamp_;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_last_enter_timestamp(::google::protobuf::uint32 value) {
  set_has_last_enter_timestamp();
  last_enter_timestamp_ = value;
}

// optional uint32 last_day_enter_num = 5;
inline bool gs_dbs_user_info_op_req_struct_op_sub_task::has_last_day_enter_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_has_last_day_enter_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_has_last_day_enter_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_last_day_enter_num() {
  last_day_enter_num_ = 0u;
  clear_has_last_day_enter_num();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_sub_task::last_day_enter_num() const {
  return last_day_enter_num_;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_last_day_enter_num(::google::protobuf::uint32 value) {
  set_has_last_day_enter_num();
  last_day_enter_num_ = value;
}

// optional uint32 total_enter_num = 6;
inline bool gs_dbs_user_info_op_req_struct_op_sub_task::has_total_enter_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_has_total_enter_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_has_total_enter_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_total_enter_num() {
  total_enter_num_ = 0u;
  clear_has_total_enter_num();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_sub_task::total_enter_num() const {
  return total_enter_num_;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_total_enter_num(::google::protobuf::uint32 value) {
  set_has_total_enter_num();
  total_enter_num_ = value;
}

// optional uint32 last_reset_time = 7;
inline bool gs_dbs_user_info_op_req_struct_op_sub_task::has_last_reset_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_has_last_reset_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_has_last_reset_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_last_reset_time() {
  last_reset_time_ = 0u;
  clear_has_last_reset_time();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_sub_task::last_reset_time() const {
  return last_reset_time_;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_last_reset_time(::google::protobuf::uint32 value) {
  set_has_last_reset_time();
  last_reset_time_ = value;
}

// optional uint32 last_day_reset_num = 8;
inline bool gs_dbs_user_info_op_req_struct_op_sub_task::has_last_day_reset_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_has_last_day_reset_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_has_last_day_reset_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::clear_last_day_reset_num() {
  last_day_reset_num_ = 0u;
  clear_has_last_day_reset_num();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_sub_task::last_day_reset_num() const {
  return last_day_reset_num_;
}
inline void gs_dbs_user_info_op_req_struct_op_sub_task::set_last_day_reset_num(::google::protobuf::uint32 value) {
  set_has_last_day_reset_num();
  last_day_reset_num_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_mail

// optional uint32 mail_id = 1;
inline bool gs_dbs_user_info_op_req_struct_op_mail::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_mail::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_mail::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_mail::clear_mail_id() {
  mail_id_ = 0u;
  clear_has_mail_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_mail::mail_id() const {
  return mail_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_mail::set_mail_id(::google::protobuf::uint32 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// required .gs_dbs_user_info_op_req.EOPType op_type = 2;
inline bool gs_dbs_user_info_op_req_struct_op_mail::has_op_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_mail::set_has_op_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_mail::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_mail::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_info_op_req_EOPType gs_dbs_user_info_op_req_struct_op_mail::op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_EOPType >(op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_mail::set_op_type(::gs_dbs_user_info_op_req_EOPType value) {
  assert(::gs_dbs_user_info_op_req_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// optional .db_user_mail mail = 3;
inline bool gs_dbs_user_info_op_req_struct_op_mail::has_mail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_mail::set_has_mail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_mail::clear_has_mail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_mail::clear_mail() {
  if (mail_ != NULL) mail_->::db_user_mail::Clear();
  clear_has_mail();
}
inline const ::db_user_mail& gs_dbs_user_info_op_req_struct_op_mail::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::db_user_mail* gs_dbs_user_info_op_req_struct_op_mail::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::db_user_mail;
  return mail_;
}
inline ::db_user_mail* gs_dbs_user_info_op_req_struct_op_mail::release_mail() {
  clear_has_mail();
  ::db_user_mail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req_struct_op_mail::set_allocated_mail(::db_user_mail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_new_hero

// required .db_user_hero hero = 1;
inline bool gs_dbs_user_info_op_req_struct_new_hero::has_hero() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_hero::set_has_hero() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_new_hero::clear_has_hero() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_new_hero::clear_hero() {
  if (hero_ != NULL) hero_->::db_user_hero::Clear();
  clear_has_hero();
}
inline const ::db_user_hero& gs_dbs_user_info_op_req_struct_new_hero::hero() const {
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::db_user_hero* gs_dbs_user_info_op_req_struct_new_hero::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::db_user_hero;
  return hero_;
}
inline ::db_user_hero* gs_dbs_user_info_op_req_struct_new_hero::release_hero() {
  clear_has_hero();
  ::db_user_hero* temp = hero_;
  hero_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req_struct_new_hero::set_allocated_hero(::db_user_hero* hero) {
  delete hero_;
  hero_ = hero;
  if (hero) {
    set_has_hero();
  } else {
    clear_has_hero();
  }
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_hero_base

// required .gs_dbs_user_info_op_req.EOPType op_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_hero_base::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_info_op_req_EOPType gs_dbs_user_info_op_req_struct_op_hero_base::op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_EOPType >(op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_op_type(::gs_dbs_user_info_op_req_EOPType value) {
  assert(::gs_dbs_user_info_op_req_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// required uint32 hero_id = 2;
inline bool gs_dbs_user_info_op_req_struct_op_hero_base::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_hero_base::hero_id() const {
  return hero_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// optional uint32 star = 3;
inline bool gs_dbs_user_info_op_req_struct_op_hero_base::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_hero_base::star() const {
  return star_;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// optional uint32 quality = 4;
inline bool gs_dbs_user_info_op_req_struct_op_hero_base::has_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_has_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_has_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_hero_base::quality() const {
  return quality_;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// optional uint32 level = 5;
inline bool gs_dbs_user_info_op_req_struct_op_hero_base::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_hero_base::level() const {
  return level_;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 cur_exp = 6;
inline bool gs_dbs_user_info_op_req_struct_op_hero_base::has_cur_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_has_cur_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_has_cur_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::clear_cur_exp() {
  cur_exp_ = 0u;
  clear_has_cur_exp();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_hero_base::cur_exp() const {
  return cur_exp_;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_base::set_cur_exp(::google::protobuf::uint32 value) {
  set_has_cur_exp();
  cur_exp_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_hero_equip

// required .gs_dbs_user_info_op_req.EOPType op_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_hero_equip::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_info_op_req_EOPType gs_dbs_user_info_op_req_struct_op_hero_equip::op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_EOPType >(op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::set_op_type(::gs_dbs_user_info_op_req_EOPType value) {
  assert(::gs_dbs_user_info_op_req_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// required uint32 hero_id = 2;
inline bool gs_dbs_user_info_op_req_struct_op_hero_equip::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_hero_equip::hero_id() const {
  return hero_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// required uint32 equip_id = 3;
inline bool gs_dbs_user_info_op_req_struct_op_hero_equip::has_equip_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::set_has_equip_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::clear_equip_id() {
  equip_id_ = 0u;
  clear_has_equip_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_hero_equip::equip_id() const {
  return equip_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::set_equip_id(::google::protobuf::uint32 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// optional uint32 level = 4;
inline bool gs_dbs_user_info_op_req_struct_op_hero_equip::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_hero_equip::level() const {
  return level_;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 evolution_equip_id = 5;
inline bool gs_dbs_user_info_op_req_struct_op_hero_equip::has_evolution_equip_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::set_has_evolution_equip_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::clear_has_evolution_equip_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::clear_evolution_equip_id() {
  evolution_equip_id_ = 0u;
  clear_has_evolution_equip_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_hero_equip::evolution_equip_id() const {
  return evolution_equip_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_equip::set_evolution_equip_id(::google::protobuf::uint32 value) {
  set_has_evolution_equip_id();
  evolution_equip_id_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_hero_skill

// required .gs_dbs_user_info_op_req.EOPType op_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_hero_skill::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_info_op_req_EOPType gs_dbs_user_info_op_req_struct_op_hero_skill::op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_EOPType >(op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::set_op_type(::gs_dbs_user_info_op_req_EOPType value) {
  assert(::gs_dbs_user_info_op_req_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// required uint32 hero_id = 2;
inline bool gs_dbs_user_info_op_req_struct_op_hero_skill::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_hero_skill::hero_id() const {
  return hero_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// required .user_hero_skill.e_skill_type type = 3;
inline bool gs_dbs_user_info_op_req_struct_op_hero_skill::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::user_hero_skill_e_skill_type gs_dbs_user_info_op_req_struct_op_hero_skill::type() const {
  return static_cast< ::user_hero_skill_e_skill_type >(type_);
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::set_type(::user_hero_skill_e_skill_type value) {
  assert(::user_hero_skill_e_skill_type_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 level = 4;
inline bool gs_dbs_user_info_op_req_struct_op_hero_skill::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_hero_skill::level() const {
  return level_;
}
inline void gs_dbs_user_info_op_req_struct_op_hero_skill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_shop

// required .gs_dbs_user_info_op_req.struct_op_shop.ESHOPOPType shop_op_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_shop::has_shop_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_shop::set_has_shop_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_shop::clear_has_shop_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_shop::clear_shop_op_type() {
  shop_op_type_ = 0;
  clear_has_shop_op_type();
}
inline ::gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType gs_dbs_user_info_op_req_struct_op_shop::shop_op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType >(shop_op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_shop::set_shop_op_type(::gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType value) {
  assert(::gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_IsValid(value));
  set_has_shop_op_type();
  shop_op_type_ = value;
}

// required .db_user_shop shop = 2;
inline bool gs_dbs_user_info_op_req_struct_op_shop::has_shop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_shop::set_has_shop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_shop::clear_has_shop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_shop::clear_shop() {
  if (shop_ != NULL) shop_->::db_user_shop::Clear();
  clear_has_shop();
}
inline const ::db_user_shop& gs_dbs_user_info_op_req_struct_op_shop::shop() const {
  return shop_ != NULL ? *shop_ : *default_instance_->shop_;
}
inline ::db_user_shop* gs_dbs_user_info_op_req_struct_op_shop::mutable_shop() {
  set_has_shop();
  if (shop_ == NULL) shop_ = new ::db_user_shop;
  return shop_;
}
inline ::db_user_shop* gs_dbs_user_info_op_req_struct_op_shop::release_shop() {
  clear_has_shop();
  ::db_user_shop* temp = shop_;
  shop_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req_struct_op_shop::set_allocated_shop(::db_user_shop* shop) {
  delete shop_;
  shop_ = shop;
  if (shop) {
    set_has_shop();
  } else {
    clear_has_shop();
  }
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_shop_item

// required .user_shop.ESHOPTYPE shop_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_shop_item::has_shop_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_shop_item::set_has_shop_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_shop_item::clear_has_shop_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_shop_item::clear_shop_type() {
  shop_type_ = 0;
  clear_has_shop_type();
}
inline ::user_shop_ESHOPTYPE gs_dbs_user_info_op_req_struct_op_shop_item::shop_type() const {
  return static_cast< ::user_shop_ESHOPTYPE >(shop_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_shop_item::set_shop_type(::user_shop_ESHOPTYPE value) {
  assert(::user_shop_ESHOPTYPE_IsValid(value));
  set_has_shop_type();
  shop_type_ = value;
}

// required .db_user_shop_item item = 2;
inline bool gs_dbs_user_info_op_req_struct_op_shop_item::has_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_shop_item::set_has_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_shop_item::clear_has_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_shop_item::clear_item() {
  if (item_ != NULL) item_->::db_user_shop_item::Clear();
  clear_has_item();
}
inline const ::db_user_shop_item& gs_dbs_user_info_op_req_struct_op_shop_item::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::db_user_shop_item* gs_dbs_user_info_op_req_struct_op_shop_item::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::db_user_shop_item;
  return item_;
}
inline ::db_user_shop_item* gs_dbs_user_info_op_req_struct_op_shop_item::release_item() {
  clear_has_item();
  ::db_user_shop_item* temp = item_;
  item_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req_struct_op_shop_item::set_allocated_item(::db_user_shop_item* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_mission

// optional .db_user_mission_event mission_event = 1;
inline bool gs_dbs_user_info_op_req_struct_op_mission::has_mission_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_mission::set_has_mission_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_mission::clear_has_mission_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_mission::clear_mission_event() {
  if (mission_event_ != NULL) mission_event_->::db_user_mission_event::Clear();
  clear_has_mission_event();
}
inline const ::db_user_mission_event& gs_dbs_user_info_op_req_struct_op_mission::mission_event() const {
  return mission_event_ != NULL ? *mission_event_ : *default_instance_->mission_event_;
}
inline ::db_user_mission_event* gs_dbs_user_info_op_req_struct_op_mission::mutable_mission_event() {
  set_has_mission_event();
  if (mission_event_ == NULL) mission_event_ = new ::db_user_mission_event;
  return mission_event_;
}
inline ::db_user_mission_event* gs_dbs_user_info_op_req_struct_op_mission::release_mission_event() {
  clear_has_mission_event();
  ::db_user_mission_event* temp = mission_event_;
  mission_event_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req_struct_op_mission::set_allocated_mission_event(::db_user_mission_event* mission_event) {
  delete mission_event_;
  mission_event_ = mission_event;
  if (mission_event) {
    set_has_mission_event();
  } else {
    clear_has_mission_event();
  }
}

// optional .db_user_mission_chain mission_chain = 2;
inline bool gs_dbs_user_info_op_req_struct_op_mission::has_mission_chain() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_mission::set_has_mission_chain() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_mission::clear_has_mission_chain() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_mission::clear_mission_chain() {
  if (mission_chain_ != NULL) mission_chain_->::db_user_mission_chain::Clear();
  clear_has_mission_chain();
}
inline const ::db_user_mission_chain& gs_dbs_user_info_op_req_struct_op_mission::mission_chain() const {
  return mission_chain_ != NULL ? *mission_chain_ : *default_instance_->mission_chain_;
}
inline ::db_user_mission_chain* gs_dbs_user_info_op_req_struct_op_mission::mutable_mission_chain() {
  set_has_mission_chain();
  if (mission_chain_ == NULL) mission_chain_ = new ::db_user_mission_chain;
  return mission_chain_;
}
inline ::db_user_mission_chain* gs_dbs_user_info_op_req_struct_op_mission::release_mission_chain() {
  clear_has_mission_chain();
  ::db_user_mission_chain* temp = mission_chain_;
  mission_chain_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req_struct_op_mission::set_allocated_mission_chain(::db_user_mission_chain* mission_chain) {
  delete mission_chain_;
  mission_chain_ = mission_chain;
  if (mission_chain) {
    set_has_mission_chain();
  } else {
    clear_has_mission_chain();
  }
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_new_arena

// required uint32 rank = 1;
inline bool gs_dbs_user_info_op_req_struct_new_arena::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_arena::rank() const {
  return rank_;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required uint32 score = 2;
inline bool gs_dbs_user_info_op_req_struct_new_arena::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_arena::score() const {
  return score_;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 last_challenge_time = 3;
inline bool gs_dbs_user_info_op_req_struct_new_arena::has_last_challenge_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_has_last_challenge_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_has_last_challenge_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_last_challenge_time() {
  last_challenge_time_ = 0u;
  clear_has_last_challenge_time();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_arena::last_challenge_time() const {
  return last_challenge_time_;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_last_challenge_time(::google::protobuf::uint32 value) {
  set_has_last_challenge_time();
  last_challenge_time_ = value;
}

// required uint32 last_day_challenge_num = 4;
inline bool gs_dbs_user_info_op_req_struct_new_arena::has_last_day_challenge_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_has_last_day_challenge_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_has_last_day_challenge_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_last_day_challenge_num() {
  last_day_challenge_num_ = 0u;
  clear_has_last_day_challenge_num();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_arena::last_day_challenge_num() const {
  return last_day_challenge_num_;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_last_day_challenge_num(::google::protobuf::uint32 value) {
  set_has_last_day_challenge_num();
  last_day_challenge_num_ = value;
}

// required uint32 history_highest_rank = 5;
inline bool gs_dbs_user_info_op_req_struct_new_arena::has_history_highest_rank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_has_history_highest_rank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_has_history_highest_rank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_history_highest_rank() {
  history_highest_rank_ = 0u;
  clear_has_history_highest_rank();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_arena::history_highest_rank() const {
  return history_highest_rank_;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_history_highest_rank(::google::protobuf::uint32 value) {
  set_has_history_highest_rank();
  history_highest_rank_ = value;
}

// repeated uint32 heros = 6;
inline int gs_dbs_user_info_op_req_struct_new_arena::heros_size() const {
  return heros_.size();
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_heros() {
  heros_.Clear();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_arena::heros(int index) const {
  return heros_.Get(index);
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_heros(int index, ::google::protobuf::uint32 value) {
  heros_.Set(index, value);
}
inline void gs_dbs_user_info_op_req_struct_new_arena::add_heros(::google::protobuf::uint32 value) {
  heros_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
gs_dbs_user_info_op_req_struct_new_arena::heros() const {
  return heros_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
gs_dbs_user_info_op_req_struct_new_arena::mutable_heros() {
  return &heros_;
}

// required uint32 last_time_buy_arena_challenge = 7;
inline bool gs_dbs_user_info_op_req_struct_new_arena::has_last_time_buy_arena_challenge() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_has_last_time_buy_arena_challenge() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_has_last_time_buy_arena_challenge() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_last_time_buy_arena_challenge() {
  last_time_buy_arena_challenge_ = 0u;
  clear_has_last_time_buy_arena_challenge();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_arena::last_time_buy_arena_challenge() const {
  return last_time_buy_arena_challenge_;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_last_time_buy_arena_challenge(::google::protobuf::uint32 value) {
  set_has_last_time_buy_arena_challenge();
  last_time_buy_arena_challenge_ = value;
}

// required uint32 last_day_buy_arena_challenge_num = 8;
inline bool gs_dbs_user_info_op_req_struct_new_arena::has_last_day_buy_arena_challenge_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_has_last_day_buy_arena_challenge_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_has_last_day_buy_arena_challenge_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::clear_last_day_buy_arena_challenge_num() {
  last_day_buy_arena_challenge_num_ = 0u;
  clear_has_last_day_buy_arena_challenge_num();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_arena::last_day_buy_arena_challenge_num() const {
  return last_day_buy_arena_challenge_num_;
}
inline void gs_dbs_user_info_op_req_struct_new_arena::set_last_day_buy_arena_challenge_num(::google::protobuf::uint32 value) {
  set_has_last_day_buy_arena_challenge_num();
  last_day_buy_arena_challenge_num_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_arena

// required .gs_dbs_user_info_op_req.EOPType op_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_arena::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_info_op_req_EOPType gs_dbs_user_info_op_req_struct_op_arena::op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_EOPType >(op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_op_type(::gs_dbs_user_info_op_req_EOPType value) {
  assert(::gs_dbs_user_info_op_req_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// optional uint32 rank = 2;
inline bool gs_dbs_user_info_op_req_struct_op_arena::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena::rank() const {
  return rank_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// optional uint32 score = 3;
inline bool gs_dbs_user_info_op_req_struct_op_arena::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena::score() const {
  return score_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 last_challenge_time = 4;
inline bool gs_dbs_user_info_op_req_struct_op_arena::has_last_challenge_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_has_last_challenge_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_has_last_challenge_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_last_challenge_time() {
  last_challenge_time_ = 0u;
  clear_has_last_challenge_time();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena::last_challenge_time() const {
  return last_challenge_time_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_last_challenge_time(::google::protobuf::uint32 value) {
  set_has_last_challenge_time();
  last_challenge_time_ = value;
}

// optional uint32 last_day_challenge_num = 5;
inline bool gs_dbs_user_info_op_req_struct_op_arena::has_last_day_challenge_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_has_last_day_challenge_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_has_last_day_challenge_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_last_day_challenge_num() {
  last_day_challenge_num_ = 0u;
  clear_has_last_day_challenge_num();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena::last_day_challenge_num() const {
  return last_day_challenge_num_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_last_day_challenge_num(::google::protobuf::uint32 value) {
  set_has_last_day_challenge_num();
  last_day_challenge_num_ = value;
}

// optional uint32 history_highest_rank = 6;
inline bool gs_dbs_user_info_op_req_struct_op_arena::has_history_highest_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_has_history_highest_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_has_history_highest_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_history_highest_rank() {
  history_highest_rank_ = 0u;
  clear_has_history_highest_rank();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena::history_highest_rank() const {
  return history_highest_rank_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_history_highest_rank(::google::protobuf::uint32 value) {
  set_has_history_highest_rank();
  history_highest_rank_ = value;
}

// repeated uint32 heros = 7;
inline int gs_dbs_user_info_op_req_struct_op_arena::heros_size() const {
  return heros_.size();
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_heros() {
  heros_.Clear();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena::heros(int index) const {
  return heros_.Get(index);
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_heros(int index, ::google::protobuf::uint32 value) {
  heros_.Set(index, value);
}
inline void gs_dbs_user_info_op_req_struct_op_arena::add_heros(::google::protobuf::uint32 value) {
  heros_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
gs_dbs_user_info_op_req_struct_op_arena::heros() const {
  return heros_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
gs_dbs_user_info_op_req_struct_op_arena::mutable_heros() {
  return &heros_;
}

// optional uint32 last_time_buy_arena_challenge = 8;
inline bool gs_dbs_user_info_op_req_struct_op_arena::has_last_time_buy_arena_challenge() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_has_last_time_buy_arena_challenge() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_has_last_time_buy_arena_challenge() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_last_time_buy_arena_challenge() {
  last_time_buy_arena_challenge_ = 0u;
  clear_has_last_time_buy_arena_challenge();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena::last_time_buy_arena_challenge() const {
  return last_time_buy_arena_challenge_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_last_time_buy_arena_challenge(::google::protobuf::uint32 value) {
  set_has_last_time_buy_arena_challenge();
  last_time_buy_arena_challenge_ = value;
}

// optional uint32 last_day_buy_arena_challenge_num = 9;
inline bool gs_dbs_user_info_op_req_struct_op_arena::has_last_day_buy_arena_challenge_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_has_last_day_buy_arena_challenge_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_has_last_day_buy_arena_challenge_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::clear_last_day_buy_arena_challenge_num() {
  last_day_buy_arena_challenge_num_ = 0u;
  clear_has_last_day_buy_arena_challenge_num();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena::last_day_buy_arena_challenge_num() const {
  return last_day_buy_arena_challenge_num_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena::set_last_day_buy_arena_challenge_num(::google::protobuf::uint32 value) {
  set_has_last_day_buy_arena_challenge_num();
  last_day_buy_arena_challenge_num_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_clear_arena_team

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_arena_challenge

// required uint32 attacker_user_id = 1;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_attacker_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_attacker_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_attacker_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_attacker_user_id() {
  attacker_user_id_ = 0u;
  clear_has_attacker_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena_challenge::attacker_user_id() const {
  return attacker_user_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_attacker_user_id(::google::protobuf::uint32 value) {
  set_has_attacker_user_id();
  attacker_user_id_ = value;
}

// required uint32 attacker_rank = 2;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_attacker_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_attacker_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_attacker_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_attacker_rank() {
  attacker_rank_ = 0u;
  clear_has_attacker_rank();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena_challenge::attacker_rank() const {
  return attacker_rank_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_attacker_rank(::google::protobuf::uint32 value) {
  set_has_attacker_rank();
  attacker_rank_ = value;
}

// required uint32 attacker_power = 3;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_attacker_power() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_attacker_power() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_attacker_power() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_attacker_power() {
  attacker_power_ = 0u;
  clear_has_attacker_power();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena_challenge::attacker_power() const {
  return attacker_power_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_attacker_power(::google::protobuf::uint32 value) {
  set_has_attacker_power();
  attacker_power_ = value;
}

// required string attacker_name = 4;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_attacker_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_attacker_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_attacker_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_attacker_name() {
  if (attacker_name_ != &::google::protobuf::internal::kEmptyString) {
    attacker_name_->clear();
  }
  clear_has_attacker_name();
}
inline const ::std::string& gs_dbs_user_info_op_req_struct_op_arena_challenge::attacker_name() const {
  return *attacker_name_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_attacker_name(const ::std::string& value) {
  set_has_attacker_name();
  if (attacker_name_ == &::google::protobuf::internal::kEmptyString) {
    attacker_name_ = new ::std::string;
  }
  attacker_name_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_attacker_name(const char* value) {
  set_has_attacker_name();
  if (attacker_name_ == &::google::protobuf::internal::kEmptyString) {
    attacker_name_ = new ::std::string;
  }
  attacker_name_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_attacker_name(const char* value, size_t size) {
  set_has_attacker_name();
  if (attacker_name_ == &::google::protobuf::internal::kEmptyString) {
    attacker_name_ = new ::std::string;
  }
  attacker_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_user_info_op_req_struct_op_arena_challenge::mutable_attacker_name() {
  set_has_attacker_name();
  if (attacker_name_ == &::google::protobuf::internal::kEmptyString) {
    attacker_name_ = new ::std::string;
  }
  return attacker_name_;
}
inline ::std::string* gs_dbs_user_info_op_req_struct_op_arena_challenge::release_attacker_name() {
  clear_has_attacker_name();
  if (attacker_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = attacker_name_;
    attacker_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_allocated_attacker_name(::std::string* attacker_name) {
  if (attacker_name_ != &::google::protobuf::internal::kEmptyString) {
    delete attacker_name_;
  }
  if (attacker_name) {
    set_has_attacker_name();
    attacker_name_ = attacker_name;
  } else {
    clear_has_attacker_name();
    attacker_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 attacker_level = 5;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_attacker_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_attacker_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_attacker_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_attacker_level() {
  attacker_level_ = 0u;
  clear_has_attacker_level();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena_challenge::attacker_level() const {
  return attacker_level_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_attacker_level(::google::protobuf::uint32 value) {
  set_has_attacker_level();
  attacker_level_ = value;
}

// repeated .db_user_arena_log.db_user_arena_log_hero attacker_heros = 6;
inline int gs_dbs_user_info_op_req_struct_op_arena_challenge::attacker_heros_size() const {
  return attacker_heros_.size();
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_attacker_heros() {
  attacker_heros_.Clear();
}
inline const ::db_user_arena_log_db_user_arena_log_hero& gs_dbs_user_info_op_req_struct_op_arena_challenge::attacker_heros(int index) const {
  return attacker_heros_.Get(index);
}
inline ::db_user_arena_log_db_user_arena_log_hero* gs_dbs_user_info_op_req_struct_op_arena_challenge::mutable_attacker_heros(int index) {
  return attacker_heros_.Mutable(index);
}
inline ::db_user_arena_log_db_user_arena_log_hero* gs_dbs_user_info_op_req_struct_op_arena_challenge::add_attacker_heros() {
  return attacker_heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >&
gs_dbs_user_info_op_req_struct_op_arena_challenge::attacker_heros() const {
  return attacker_heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >*
gs_dbs_user_info_op_req_struct_op_arena_challenge::mutable_attacker_heros() {
  return &attacker_heros_;
}

// required uint32 defender_user_id = 7;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_defender_user_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_defender_user_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_defender_user_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_defender_user_id() {
  defender_user_id_ = 0u;
  clear_has_defender_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena_challenge::defender_user_id() const {
  return defender_user_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_defender_user_id(::google::protobuf::uint32 value) {
  set_has_defender_user_id();
  defender_user_id_ = value;
}

// required uint32 defender_rank = 8;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_defender_rank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_defender_rank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_defender_rank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_defender_rank() {
  defender_rank_ = 0u;
  clear_has_defender_rank();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena_challenge::defender_rank() const {
  return defender_rank_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_defender_rank(::google::protobuf::uint32 value) {
  set_has_defender_rank();
  defender_rank_ = value;
}

// required uint32 defender_power = 9;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_defender_power() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_defender_power() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_defender_power() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_defender_power() {
  defender_power_ = 0u;
  clear_has_defender_power();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena_challenge::defender_power() const {
  return defender_power_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_defender_power(::google::protobuf::uint32 value) {
  set_has_defender_power();
  defender_power_ = value;
}

// required string defender_name = 10;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_defender_name() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_defender_name() {
  _has_bits_[0] |= 0x00000200u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_defender_name() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_defender_name() {
  if (defender_name_ != &::google::protobuf::internal::kEmptyString) {
    defender_name_->clear();
  }
  clear_has_defender_name();
}
inline const ::std::string& gs_dbs_user_info_op_req_struct_op_arena_challenge::defender_name() const {
  return *defender_name_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_defender_name(const ::std::string& value) {
  set_has_defender_name();
  if (defender_name_ == &::google::protobuf::internal::kEmptyString) {
    defender_name_ = new ::std::string;
  }
  defender_name_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_defender_name(const char* value) {
  set_has_defender_name();
  if (defender_name_ == &::google::protobuf::internal::kEmptyString) {
    defender_name_ = new ::std::string;
  }
  defender_name_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_defender_name(const char* value, size_t size) {
  set_has_defender_name();
  if (defender_name_ == &::google::protobuf::internal::kEmptyString) {
    defender_name_ = new ::std::string;
  }
  defender_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_user_info_op_req_struct_op_arena_challenge::mutable_defender_name() {
  set_has_defender_name();
  if (defender_name_ == &::google::protobuf::internal::kEmptyString) {
    defender_name_ = new ::std::string;
  }
  return defender_name_;
}
inline ::std::string* gs_dbs_user_info_op_req_struct_op_arena_challenge::release_defender_name() {
  clear_has_defender_name();
  if (defender_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = defender_name_;
    defender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_allocated_defender_name(::std::string* defender_name) {
  if (defender_name_ != &::google::protobuf::internal::kEmptyString) {
    delete defender_name_;
  }
  if (defender_name) {
    set_has_defender_name();
    defender_name_ = defender_name;
  } else {
    clear_has_defender_name();
    defender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 defender_level = 11;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_defender_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_defender_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_defender_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_defender_level() {
  defender_level_ = 0u;
  clear_has_defender_level();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena_challenge::defender_level() const {
  return defender_level_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_defender_level(::google::protobuf::uint32 value) {
  set_has_defender_level();
  defender_level_ = value;
}

// repeated .db_user_arena_log.db_user_arena_log_hero defender_heros = 12;
inline int gs_dbs_user_info_op_req_struct_op_arena_challenge::defender_heros_size() const {
  return defender_heros_.size();
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_defender_heros() {
  defender_heros_.Clear();
}
inline const ::db_user_arena_log_db_user_arena_log_hero& gs_dbs_user_info_op_req_struct_op_arena_challenge::defender_heros(int index) const {
  return defender_heros_.Get(index);
}
inline ::db_user_arena_log_db_user_arena_log_hero* gs_dbs_user_info_op_req_struct_op_arena_challenge::mutable_defender_heros(int index) {
  return defender_heros_.Mutable(index);
}
inline ::db_user_arena_log_db_user_arena_log_hero* gs_dbs_user_info_op_req_struct_op_arena_challenge::add_defender_heros() {
  return defender_heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >&
gs_dbs_user_info_op_req_struct_op_arena_challenge::defender_heros() const {
  return defender_heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_arena_log_db_user_arena_log_hero >*
gs_dbs_user_info_op_req_struct_op_arena_challenge::mutable_defender_heros() {
  return &defender_heros_;
}

// required uint32 is_win = 13;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_is_win() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_is_win() {
  _has_bits_[0] |= 0x00001000u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_is_win() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_is_win() {
  is_win_ = 0u;
  clear_has_is_win();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena_challenge::is_win() const {
  return is_win_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_is_win(::google::protobuf::uint32 value) {
  set_has_is_win();
  is_win_ = value;
}

// required uint32 time = 14;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_time() {
  _has_bits_[0] |= 0x00002000u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_time() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena_challenge::time() const {
  return time_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 score = 15;
inline bool gs_dbs_user_info_op_req_struct_op_arena_challenge::has_score() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_has_score() {
  _has_bits_[0] |= 0x00004000u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_has_score() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_arena_challenge::score() const {
  return score_;
}
inline void gs_dbs_user_info_op_req_struct_op_arena_challenge::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_sign

// required .gs_dbs_user_info_op_req.EOPType op_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_sign::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_info_op_req_EOPType gs_dbs_user_info_op_req_struct_op_sign::op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_EOPType >(op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_op_type(::gs_dbs_user_info_op_req_EOPType value) {
  assert(::gs_dbs_user_info_op_req_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// optional uint32 sign_1_times = 2;
inline bool gs_dbs_user_info_op_req_struct_op_sign::has_sign_1_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_has_sign_1_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::clear_has_sign_1_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::clear_sign_1_times() {
  sign_1_times_ = 0u;
  clear_has_sign_1_times();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_sign::sign_1_times() const {
  return sign_1_times_;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_sign_1_times(::google::protobuf::uint32 value) {
  set_has_sign_1_times();
  sign_1_times_ = value;
}

// optional string sign_n_reward_status = 3;
inline bool gs_dbs_user_info_op_req_struct_op_sign::has_sign_n_reward_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_has_sign_n_reward_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::clear_has_sign_n_reward_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::clear_sign_n_reward_status() {
  if (sign_n_reward_status_ != &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_->clear();
  }
  clear_has_sign_n_reward_status();
}
inline const ::std::string& gs_dbs_user_info_op_req_struct_op_sign::sign_n_reward_status() const {
  return *sign_n_reward_status_;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_sign_n_reward_status(const ::std::string& value) {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  sign_n_reward_status_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_sign_n_reward_status(const char* value) {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  sign_n_reward_status_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_sign_n_reward_status(const char* value, size_t size) {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  sign_n_reward_status_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_user_info_op_req_struct_op_sign::mutable_sign_n_reward_status() {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  return sign_n_reward_status_;
}
inline ::std::string* gs_dbs_user_info_op_req_struct_op_sign::release_sign_n_reward_status() {
  clear_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_n_reward_status_;
    sign_n_reward_status_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_allocated_sign_n_reward_status(::std::string* sign_n_reward_status) {
  if (sign_n_reward_status_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_n_reward_status_;
  }
  if (sign_n_reward_status) {
    set_has_sign_n_reward_status();
    sign_n_reward_status_ = sign_n_reward_status;
  } else {
    clear_has_sign_n_reward_status();
    sign_n_reward_status_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 last_sign_time = 4;
inline bool gs_dbs_user_info_op_req_struct_op_sign::has_last_sign_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_has_last_sign_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::clear_has_last_sign_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::clear_last_sign_time() {
  last_sign_time_ = 0u;
  clear_has_last_sign_time();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_sign::last_sign_time() const {
  return last_sign_time_;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_last_sign_time(::google::protobuf::uint32 value) {
  set_has_last_sign_time();
  last_sign_time_ = value;
}

// optional uint32 add_signed_times = 5;
inline bool gs_dbs_user_info_op_req_struct_op_sign::has_add_signed_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_has_add_signed_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::clear_has_add_signed_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::clear_add_signed_times() {
  add_signed_times_ = 0u;
  clear_has_add_signed_times();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_sign::add_signed_times() const {
  return add_signed_times_;
}
inline void gs_dbs_user_info_op_req_struct_op_sign::set_add_signed_times(::google::protobuf::uint32 value) {
  set_has_add_signed_times();
  add_signed_times_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_new_sign

// required uint32 sign_1_times = 1;
inline bool gs_dbs_user_info_op_req_struct_new_sign::has_sign_1_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::set_has_sign_1_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::clear_has_sign_1_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::clear_sign_1_times() {
  sign_1_times_ = 0u;
  clear_has_sign_1_times();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_sign::sign_1_times() const {
  return sign_1_times_;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::set_sign_1_times(::google::protobuf::uint32 value) {
  set_has_sign_1_times();
  sign_1_times_ = value;
}

// required string sign_n_reward_status = 2;
inline bool gs_dbs_user_info_op_req_struct_new_sign::has_sign_n_reward_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::set_has_sign_n_reward_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::clear_has_sign_n_reward_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::clear_sign_n_reward_status() {
  if (sign_n_reward_status_ != &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_->clear();
  }
  clear_has_sign_n_reward_status();
}
inline const ::std::string& gs_dbs_user_info_op_req_struct_new_sign::sign_n_reward_status() const {
  return *sign_n_reward_status_;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::set_sign_n_reward_status(const ::std::string& value) {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  sign_n_reward_status_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_new_sign::set_sign_n_reward_status(const char* value) {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  sign_n_reward_status_->assign(value);
}
inline void gs_dbs_user_info_op_req_struct_new_sign::set_sign_n_reward_status(const char* value, size_t size) {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  sign_n_reward_status_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_user_info_op_req_struct_new_sign::mutable_sign_n_reward_status() {
  set_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    sign_n_reward_status_ = new ::std::string;
  }
  return sign_n_reward_status_;
}
inline ::std::string* gs_dbs_user_info_op_req_struct_new_sign::release_sign_n_reward_status() {
  clear_has_sign_n_reward_status();
  if (sign_n_reward_status_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_n_reward_status_;
    sign_n_reward_status_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_user_info_op_req_struct_new_sign::set_allocated_sign_n_reward_status(::std::string* sign_n_reward_status) {
  if (sign_n_reward_status_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_n_reward_status_;
  }
  if (sign_n_reward_status) {
    set_has_sign_n_reward_status();
    sign_n_reward_status_ = sign_n_reward_status;
  } else {
    clear_has_sign_n_reward_status();
    sign_n_reward_status_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 last_sign_time = 3;
inline bool gs_dbs_user_info_op_req_struct_new_sign::has_last_sign_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::set_has_last_sign_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::clear_has_last_sign_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::clear_last_sign_time() {
  last_sign_time_ = 0u;
  clear_has_last_sign_time();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_sign::last_sign_time() const {
  return last_sign_time_;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::set_last_sign_time(::google::protobuf::uint32 value) {
  set_has_last_sign_time();
  last_sign_time_ = value;
}

// required uint32 add_signed_times = 4;
inline bool gs_dbs_user_info_op_req_struct_new_sign::has_add_signed_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::set_has_add_signed_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::clear_has_add_signed_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::clear_add_signed_times() {
  add_signed_times_ = 0u;
  clear_has_add_signed_times();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_sign::add_signed_times() const {
  return add_signed_times_;
}
inline void gs_dbs_user_info_op_req_struct_new_sign::set_add_signed_times(::google::protobuf::uint32 value) {
  set_has_add_signed_times();
  add_signed_times_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_novice_guide

// required .gs_dbs_user_info_op_req.EOPType op_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_novice_guide::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_novice_guide::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_novice_guide::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_novice_guide::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_info_op_req_EOPType gs_dbs_user_info_op_req_struct_op_novice_guide::op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_EOPType >(op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_novice_guide::set_op_type(::gs_dbs_user_info_op_req_EOPType value) {
  assert(::gs_dbs_user_info_op_req_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// required uint32 guide_id = 2;
inline bool gs_dbs_user_info_op_req_struct_op_novice_guide::has_guide_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_novice_guide::set_has_guide_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_novice_guide::clear_has_guide_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_novice_guide::clear_guide_id() {
  guide_id_ = 0u;
  clear_has_guide_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_novice_guide::guide_id() const {
  return guide_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_novice_guide::set_guide_id(::google::protobuf::uint32 value) {
  set_has_guide_id();
  guide_id_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_new_user_statis

// required uint32 level = 1;
inline bool gs_dbs_user_info_op_req_struct_new_user_statis::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_user_statis::level() const {
  return level_;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 fight_power = 2;
inline bool gs_dbs_user_info_op_req_struct_new_user_statis::has_fight_power() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_has_fight_power() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_has_fight_power() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_fight_power() {
  fight_power_ = 0u;
  clear_has_fight_power();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_user_statis::fight_power() const {
  return fight_power_;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_fight_power(::google::protobuf::uint32 value) {
  set_has_fight_power();
  fight_power_ = value;
}

// required uint32 vip = 3;
inline bool gs_dbs_user_info_op_req_struct_new_user_statis::has_vip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_has_vip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_has_vip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_vip() {
  vip_ = 0u;
  clear_has_vip();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_user_statis::vip() const {
  return vip_;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_vip(::google::protobuf::uint32 value) {
  set_has_vip();
  vip_ = value;
}

// required uint32 occur_time = 4;
inline bool gs_dbs_user_info_op_req_struct_new_user_statis::has_occur_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_has_occur_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_has_occur_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_occur_time() {
  occur_time_ = 0u;
  clear_has_occur_time();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_user_statis::occur_time() const {
  return occur_time_;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_occur_time(::google::protobuf::uint32 value) {
  set_has_occur_time();
  occur_time_ = value;
}

// required uint32 event_type = 5;
inline bool gs_dbs_user_info_op_req_struct_new_user_statis::has_event_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_has_event_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_event_type() {
  event_type_ = 0u;
  clear_has_event_type();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_user_statis::event_type() const {
  return event_type_;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_event_type(::google::protobuf::uint32 value) {
  set_has_event_type();
  event_type_ = value;
}

// required uint32 cur_id = 6;
inline bool gs_dbs_user_info_op_req_struct_new_user_statis::has_cur_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_has_cur_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_has_cur_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::clear_cur_id() {
  cur_id_ = 0u;
  clear_has_cur_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_new_user_statis::cur_id() const {
  return cur_id_;
}
inline void gs_dbs_user_info_op_req_struct_new_user_statis::set_cur_id(::google::protobuf::uint32 value) {
  set_has_cur_id();
  cur_id_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_new_mail

// required .db_user_mail mail = 1;
inline bool gs_dbs_user_info_op_req_struct_new_mail::has_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_new_mail::set_has_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_new_mail::clear_has_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_new_mail::clear_mail() {
  if (mail_ != NULL) mail_->::db_user_mail::Clear();
  clear_has_mail();
}
inline const ::db_user_mail& gs_dbs_user_info_op_req_struct_new_mail::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::db_user_mail* gs_dbs_user_info_op_req_struct_new_mail::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::db_user_mail;
  return mail_;
}
inline ::db_user_mail* gs_dbs_user_info_op_req_struct_new_mail::release_mail() {
  clear_has_mail();
  ::db_user_mail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req_struct_new_mail::set_allocated_mail(::db_user_mail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_friend

// required .gs_dbs_user_info_op_req.struct_op_friend.OP_TYPE op_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_friend::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_friend::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_friend::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_friend::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE gs_dbs_user_info_op_req_struct_op_friend::op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE >(op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_friend::set_op_type(::gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE value) {
  assert(::gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// optional uint32 friend_id = 2;
inline bool gs_dbs_user_info_op_req_struct_op_friend::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_friend::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_friend::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_friend::clear_friend_id() {
  friend_id_ = 0u;
  clear_has_friend_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_friend::friend_id() const {
  return friend_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_friend::set_friend_id(::google::protobuf::uint32 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// optional .friend_base_info base_info = 3;
inline bool gs_dbs_user_info_op_req_struct_op_friend::has_base_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_friend::set_has_base_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_friend::clear_has_base_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_friend::clear_base_info() {
  if (base_info_ != NULL) base_info_->::friend_base_info::Clear();
  clear_has_base_info();
}
inline const ::friend_base_info& gs_dbs_user_info_op_req_struct_op_friend::base_info() const {
  return base_info_ != NULL ? *base_info_ : *default_instance_->base_info_;
}
inline ::friend_base_info* gs_dbs_user_info_op_req_struct_op_friend::mutable_base_info() {
  set_has_base_info();
  if (base_info_ == NULL) base_info_ = new ::friend_base_info;
  return base_info_;
}
inline ::friend_base_info* gs_dbs_user_info_op_req_struct_op_friend::release_base_info() {
  clear_has_base_info();
  ::friend_base_info* temp = base_info_;
  base_info_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req_struct_op_friend::set_allocated_base_info(::friend_base_info* base_info) {
  delete base_info_;
  base_info_ = base_info;
  if (base_info) {
    set_has_base_info();
  } else {
    clear_has_base_info();
  }
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_crusade_crusade_end

// repeated .user_crusade.crusade_hero me_heros = 2;
inline int gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::me_heros_size() const {
  return me_heros_.size();
}
inline void gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::clear_me_heros() {
  me_heros_.Clear();
}
inline const ::user_crusade_crusade_hero& gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::me_heros(int index) const {
  return me_heros_.Get(index);
}
inline ::user_crusade_crusade_hero* gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::mutable_me_heros(int index) {
  return me_heros_.Mutable(index);
}
inline ::user_crusade_crusade_hero* gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::add_me_heros() {
  return me_heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >&
gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::me_heros() const {
  return me_heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >*
gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::mutable_me_heros() {
  return &me_heros_;
}

// repeated .user_crusade.crusade_hero enemy_heros = 3;
inline int gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::enemy_heros_size() const {
  return enemy_heros_.size();
}
inline void gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::clear_enemy_heros() {
  enemy_heros_.Clear();
}
inline const ::user_crusade_crusade_hero& gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::enemy_heros(int index) const {
  return enemy_heros_.Get(index);
}
inline ::user_crusade_crusade_hero* gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::mutable_enemy_heros(int index) {
  return enemy_heros_.Mutable(index);
}
inline ::user_crusade_crusade_hero* gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::add_enemy_heros() {
  return enemy_heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >&
gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::enemy_heros() const {
  return enemy_heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::user_crusade_crusade_hero >*
gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::mutable_enemy_heros() {
  return &enemy_heros_;
}

// required uint32 wave = 4;
inline bool gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::has_wave() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::set_has_wave() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::clear_has_wave() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::clear_wave() {
  wave_ = 0u;
  clear_has_wave();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::wave() const {
  return wave_;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::set_wave(::google::protobuf::uint32 value) {
  set_has_wave();
  wave_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req_struct_op_crusade

// required .gs_dbs_user_info_op_req.struct_op_crusade.CRUSADE_OP_TYPE op_type = 1;
inline bool gs_dbs_user_info_op_req_struct_op_crusade::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE gs_dbs_user_info_op_req_struct_op_crusade::op_type() const {
  return static_cast< ::gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE >(op_type_);
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::set_op_type(::gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE value) {
  assert(::gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// optional .gs_dbs_user_info_op_req.struct_op_crusade.crusade_end end = 2;
inline bool gs_dbs_user_info_op_req_struct_op_crusade::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::clear_end() {
  if (end_ != NULL) end_->::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end::Clear();
  clear_has_end();
}
inline const ::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end& gs_dbs_user_info_op_req_struct_op_crusade::end() const {
  return end_ != NULL ? *end_ : *default_instance_->end_;
}
inline ::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end* gs_dbs_user_info_op_req_struct_op_crusade::mutable_end() {
  set_has_end();
  if (end_ == NULL) end_ = new ::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end;
  return end_;
}
inline ::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end* gs_dbs_user_info_op_req_struct_op_crusade::release_end() {
  clear_has_end();
  ::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end* temp = end_;
  end_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::set_allocated_end(::gs_dbs_user_info_op_req_struct_op_crusade_crusade_end* end) {
  delete end_;
  end_ = end;
  if (end) {
    set_has_end();
  } else {
    clear_has_end();
  }
}

// optional uint32 hero_id = 3;
inline bool gs_dbs_user_info_op_req_struct_op_crusade::has_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::set_has_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req_struct_op_crusade::hero_id() const {
  return hero_id_;
}
inline void gs_dbs_user_info_op_req_struct_op_crusade::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_info_op_req

// required uint32 user_id = 1;
inline bool gs_dbs_user_info_op_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_info_op_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_info_op_req::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_info_op_req::user_id() const {
  return user_id_;
}
inline void gs_dbs_user_info_op_req::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional .gs_dbs_user_info_op_req.struct_op_base_info base_info = 2;
inline bool gs_dbs_user_info_op_req::has_base_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_base_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_info_op_req::clear_has_base_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_info_op_req::clear_base_info() {
  if (base_info_ != NULL) base_info_->::gs_dbs_user_info_op_req_struct_op_base_info::Clear();
  clear_has_base_info();
}
inline const ::gs_dbs_user_info_op_req_struct_op_base_info& gs_dbs_user_info_op_req::base_info() const {
  return base_info_ != NULL ? *base_info_ : *default_instance_->base_info_;
}
inline ::gs_dbs_user_info_op_req_struct_op_base_info* gs_dbs_user_info_op_req::mutable_base_info() {
  set_has_base_info();
  if (base_info_ == NULL) base_info_ = new ::gs_dbs_user_info_op_req_struct_op_base_info;
  return base_info_;
}
inline ::gs_dbs_user_info_op_req_struct_op_base_info* gs_dbs_user_info_op_req::release_base_info() {
  clear_has_base_info();
  ::gs_dbs_user_info_op_req_struct_op_base_info* temp = base_info_;
  base_info_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_base_info(::gs_dbs_user_info_op_req_struct_op_base_info* base_info) {
  delete base_info_;
  base_info_ = base_info;
  if (base_info) {
    set_has_base_info();
  } else {
    clear_has_base_info();
  }
}

// optional .gs_dbs_user_info_op_req.struct_op_sub_task sub_task = 3;
inline bool gs_dbs_user_info_op_req::has_sub_task() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_sub_task() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_info_op_req::clear_has_sub_task() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_info_op_req::clear_sub_task() {
  if (sub_task_ != NULL) sub_task_->::gs_dbs_user_info_op_req_struct_op_sub_task::Clear();
  clear_has_sub_task();
}
inline const ::gs_dbs_user_info_op_req_struct_op_sub_task& gs_dbs_user_info_op_req::sub_task() const {
  return sub_task_ != NULL ? *sub_task_ : *default_instance_->sub_task_;
}
inline ::gs_dbs_user_info_op_req_struct_op_sub_task* gs_dbs_user_info_op_req::mutable_sub_task() {
  set_has_sub_task();
  if (sub_task_ == NULL) sub_task_ = new ::gs_dbs_user_info_op_req_struct_op_sub_task;
  return sub_task_;
}
inline ::gs_dbs_user_info_op_req_struct_op_sub_task* gs_dbs_user_info_op_req::release_sub_task() {
  clear_has_sub_task();
  ::gs_dbs_user_info_op_req_struct_op_sub_task* temp = sub_task_;
  sub_task_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_sub_task(::gs_dbs_user_info_op_req_struct_op_sub_task* sub_task) {
  delete sub_task_;
  sub_task_ = sub_task;
  if (sub_task) {
    set_has_sub_task();
  } else {
    clear_has_sub_task();
  }
}

// repeated .gs_dbs_user_info_op_req.struct_new_hero new_heros = 4;
inline int gs_dbs_user_info_op_req::new_heros_size() const {
  return new_heros_.size();
}
inline void gs_dbs_user_info_op_req::clear_new_heros() {
  new_heros_.Clear();
}
inline const ::gs_dbs_user_info_op_req_struct_new_hero& gs_dbs_user_info_op_req::new_heros(int index) const {
  return new_heros_.Get(index);
}
inline ::gs_dbs_user_info_op_req_struct_new_hero* gs_dbs_user_info_op_req::mutable_new_heros(int index) {
  return new_heros_.Mutable(index);
}
inline ::gs_dbs_user_info_op_req_struct_new_hero* gs_dbs_user_info_op_req::add_new_heros() {
  return new_heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_new_hero >&
gs_dbs_user_info_op_req::new_heros() const {
  return new_heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_new_hero >*
gs_dbs_user_info_op_req::mutable_new_heros() {
  return &new_heros_;
}

// repeated .gs_dbs_user_info_op_req.struct_op_hero_base heros_base = 5;
inline int gs_dbs_user_info_op_req::heros_base_size() const {
  return heros_base_.size();
}
inline void gs_dbs_user_info_op_req::clear_heros_base() {
  heros_base_.Clear();
}
inline const ::gs_dbs_user_info_op_req_struct_op_hero_base& gs_dbs_user_info_op_req::heros_base(int index) const {
  return heros_base_.Get(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_hero_base* gs_dbs_user_info_op_req::mutable_heros_base(int index) {
  return heros_base_.Mutable(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_hero_base* gs_dbs_user_info_op_req::add_heros_base() {
  return heros_base_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_base >&
gs_dbs_user_info_op_req::heros_base() const {
  return heros_base_;
}
inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_base >*
gs_dbs_user_info_op_req::mutable_heros_base() {
  return &heros_base_;
}

// repeated .gs_dbs_user_info_op_req.struct_op_hero_equip hero_equips = 6;
inline int gs_dbs_user_info_op_req::hero_equips_size() const {
  return hero_equips_.size();
}
inline void gs_dbs_user_info_op_req::clear_hero_equips() {
  hero_equips_.Clear();
}
inline const ::gs_dbs_user_info_op_req_struct_op_hero_equip& gs_dbs_user_info_op_req::hero_equips(int index) const {
  return hero_equips_.Get(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_hero_equip* gs_dbs_user_info_op_req::mutable_hero_equips(int index) {
  return hero_equips_.Mutable(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_hero_equip* gs_dbs_user_info_op_req::add_hero_equips() {
  return hero_equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_equip >&
gs_dbs_user_info_op_req::hero_equips() const {
  return hero_equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_equip >*
gs_dbs_user_info_op_req::mutable_hero_equips() {
  return &hero_equips_;
}

// repeated .gs_dbs_user_info_op_req.struct_op_hero_skill hero_skills = 7;
inline int gs_dbs_user_info_op_req::hero_skills_size() const {
  return hero_skills_.size();
}
inline void gs_dbs_user_info_op_req::clear_hero_skills() {
  hero_skills_.Clear();
}
inline const ::gs_dbs_user_info_op_req_struct_op_hero_skill& gs_dbs_user_info_op_req::hero_skills(int index) const {
  return hero_skills_.Get(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_hero_skill* gs_dbs_user_info_op_req::mutable_hero_skills(int index) {
  return hero_skills_.Mutable(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_hero_skill* gs_dbs_user_info_op_req::add_hero_skills() {
  return hero_skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_skill >&
gs_dbs_user_info_op_req::hero_skills() const {
  return hero_skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_hero_skill >*
gs_dbs_user_info_op_req::mutable_hero_skills() {
  return &hero_skills_;
}

// repeated .struct_game_element items = 8;
inline int gs_dbs_user_info_op_req::items_size() const {
  return items_.size();
}
inline void gs_dbs_user_info_op_req::clear_items() {
  items_.Clear();
}
inline const ::struct_game_element& gs_dbs_user_info_op_req::items(int index) const {
  return items_.Get(index);
}
inline ::struct_game_element* gs_dbs_user_info_op_req::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::struct_game_element* gs_dbs_user_info_op_req::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::struct_game_element >&
gs_dbs_user_info_op_req::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::struct_game_element >*
gs_dbs_user_info_op_req::mutable_items() {
  return &items_;
}

// repeated .gs_dbs_user_info_op_req.struct_op_mail op_mails = 9;
inline int gs_dbs_user_info_op_req::op_mails_size() const {
  return op_mails_.size();
}
inline void gs_dbs_user_info_op_req::clear_op_mails() {
  op_mails_.Clear();
}
inline const ::gs_dbs_user_info_op_req_struct_op_mail& gs_dbs_user_info_op_req::op_mails(int index) const {
  return op_mails_.Get(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_mail* gs_dbs_user_info_op_req::mutable_op_mails(int index) {
  return op_mails_.Mutable(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_mail* gs_dbs_user_info_op_req::add_op_mails() {
  return op_mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_mail >&
gs_dbs_user_info_op_req::op_mails() const {
  return op_mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_mail >*
gs_dbs_user_info_op_req::mutable_op_mails() {
  return &op_mails_;
}

// repeated .gs_dbs_user_info_op_req.struct_op_shop shops = 10;
inline int gs_dbs_user_info_op_req::shops_size() const {
  return shops_.size();
}
inline void gs_dbs_user_info_op_req::clear_shops() {
  shops_.Clear();
}
inline const ::gs_dbs_user_info_op_req_struct_op_shop& gs_dbs_user_info_op_req::shops(int index) const {
  return shops_.Get(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_shop* gs_dbs_user_info_op_req::mutable_shops(int index) {
  return shops_.Mutable(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_shop* gs_dbs_user_info_op_req::add_shops() {
  return shops_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_shop >&
gs_dbs_user_info_op_req::shops() const {
  return shops_;
}
inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_shop >*
gs_dbs_user_info_op_req::mutable_shops() {
  return &shops_;
}

// repeated .gs_dbs_user_info_op_req.struct_op_shop_item shop_items = 11;
inline int gs_dbs_user_info_op_req::shop_items_size() const {
  return shop_items_.size();
}
inline void gs_dbs_user_info_op_req::clear_shop_items() {
  shop_items_.Clear();
}
inline const ::gs_dbs_user_info_op_req_struct_op_shop_item& gs_dbs_user_info_op_req::shop_items(int index) const {
  return shop_items_.Get(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_shop_item* gs_dbs_user_info_op_req::mutable_shop_items(int index) {
  return shop_items_.Mutable(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_shop_item* gs_dbs_user_info_op_req::add_shop_items() {
  return shop_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_shop_item >&
gs_dbs_user_info_op_req::shop_items() const {
  return shop_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_shop_item >*
gs_dbs_user_info_op_req::mutable_shop_items() {
  return &shop_items_;
}

// repeated .db_user_shop_buy buy_items = 12;
inline int gs_dbs_user_info_op_req::buy_items_size() const {
  return buy_items_.size();
}
inline void gs_dbs_user_info_op_req::clear_buy_items() {
  buy_items_.Clear();
}
inline const ::db_user_shop_buy& gs_dbs_user_info_op_req::buy_items(int index) const {
  return buy_items_.Get(index);
}
inline ::db_user_shop_buy* gs_dbs_user_info_op_req::mutable_buy_items(int index) {
  return buy_items_.Mutable(index);
}
inline ::db_user_shop_buy* gs_dbs_user_info_op_req::add_buy_items() {
  return buy_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_user_shop_buy >&
gs_dbs_user_info_op_req::buy_items() const {
  return buy_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_user_shop_buy >*
gs_dbs_user_info_op_req::mutable_buy_items() {
  return &buy_items_;
}

// optional .gs_dbs_user_info_op_req.struct_new_arena new_arena = 13;
inline bool gs_dbs_user_info_op_req::has_new_arena() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_new_arena() {
  _has_bits_[0] |= 0x00001000u;
}
inline void gs_dbs_user_info_op_req::clear_has_new_arena() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void gs_dbs_user_info_op_req::clear_new_arena() {
  if (new_arena_ != NULL) new_arena_->::gs_dbs_user_info_op_req_struct_new_arena::Clear();
  clear_has_new_arena();
}
inline const ::gs_dbs_user_info_op_req_struct_new_arena& gs_dbs_user_info_op_req::new_arena() const {
  return new_arena_ != NULL ? *new_arena_ : *default_instance_->new_arena_;
}
inline ::gs_dbs_user_info_op_req_struct_new_arena* gs_dbs_user_info_op_req::mutable_new_arena() {
  set_has_new_arena();
  if (new_arena_ == NULL) new_arena_ = new ::gs_dbs_user_info_op_req_struct_new_arena;
  return new_arena_;
}
inline ::gs_dbs_user_info_op_req_struct_new_arena* gs_dbs_user_info_op_req::release_new_arena() {
  clear_has_new_arena();
  ::gs_dbs_user_info_op_req_struct_new_arena* temp = new_arena_;
  new_arena_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_new_arena(::gs_dbs_user_info_op_req_struct_new_arena* new_arena) {
  delete new_arena_;
  new_arena_ = new_arena;
  if (new_arena) {
    set_has_new_arena();
  } else {
    clear_has_new_arena();
  }
}

// optional .gs_dbs_user_info_op_req.struct_op_arena op_arena = 14;
inline bool gs_dbs_user_info_op_req::has_op_arena() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_op_arena() {
  _has_bits_[0] |= 0x00002000u;
}
inline void gs_dbs_user_info_op_req::clear_has_op_arena() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void gs_dbs_user_info_op_req::clear_op_arena() {
  if (op_arena_ != NULL) op_arena_->::gs_dbs_user_info_op_req_struct_op_arena::Clear();
  clear_has_op_arena();
}
inline const ::gs_dbs_user_info_op_req_struct_op_arena& gs_dbs_user_info_op_req::op_arena() const {
  return op_arena_ != NULL ? *op_arena_ : *default_instance_->op_arena_;
}
inline ::gs_dbs_user_info_op_req_struct_op_arena* gs_dbs_user_info_op_req::mutable_op_arena() {
  set_has_op_arena();
  if (op_arena_ == NULL) op_arena_ = new ::gs_dbs_user_info_op_req_struct_op_arena;
  return op_arena_;
}
inline ::gs_dbs_user_info_op_req_struct_op_arena* gs_dbs_user_info_op_req::release_op_arena() {
  clear_has_op_arena();
  ::gs_dbs_user_info_op_req_struct_op_arena* temp = op_arena_;
  op_arena_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_op_arena(::gs_dbs_user_info_op_req_struct_op_arena* op_arena) {
  delete op_arena_;
  op_arena_ = op_arena;
  if (op_arena) {
    set_has_op_arena();
  } else {
    clear_has_op_arena();
  }
}

// optional .gs_dbs_user_info_op_req.struct_clear_arena_team clear_arena_team = 15;
inline bool gs_dbs_user_info_op_req::has_clear_arena_team() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_clear_arena_team() {
  _has_bits_[0] |= 0x00004000u;
}
inline void gs_dbs_user_info_op_req::clear_has_clear_arena_team() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void gs_dbs_user_info_op_req::clear_clear_arena_team() {
  if (clear_arena_team_ != NULL) clear_arena_team_->::gs_dbs_user_info_op_req_struct_clear_arena_team::Clear();
  clear_has_clear_arena_team();
}
inline const ::gs_dbs_user_info_op_req_struct_clear_arena_team& gs_dbs_user_info_op_req::clear_arena_team() const {
  return clear_arena_team_ != NULL ? *clear_arena_team_ : *default_instance_->clear_arena_team_;
}
inline ::gs_dbs_user_info_op_req_struct_clear_arena_team* gs_dbs_user_info_op_req::mutable_clear_arena_team() {
  set_has_clear_arena_team();
  if (clear_arena_team_ == NULL) clear_arena_team_ = new ::gs_dbs_user_info_op_req_struct_clear_arena_team;
  return clear_arena_team_;
}
inline ::gs_dbs_user_info_op_req_struct_clear_arena_team* gs_dbs_user_info_op_req::release_clear_arena_team() {
  clear_has_clear_arena_team();
  ::gs_dbs_user_info_op_req_struct_clear_arena_team* temp = clear_arena_team_;
  clear_arena_team_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_clear_arena_team(::gs_dbs_user_info_op_req_struct_clear_arena_team* clear_arena_team) {
  delete clear_arena_team_;
  clear_arena_team_ = clear_arena_team;
  if (clear_arena_team) {
    set_has_clear_arena_team();
  } else {
    clear_has_clear_arena_team();
  }
}

// optional .gs_dbs_user_info_op_req.struct_op_arena_challenge arena_challenge = 16;
inline bool gs_dbs_user_info_op_req::has_arena_challenge() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_arena_challenge() {
  _has_bits_[0] |= 0x00008000u;
}
inline void gs_dbs_user_info_op_req::clear_has_arena_challenge() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void gs_dbs_user_info_op_req::clear_arena_challenge() {
  if (arena_challenge_ != NULL) arena_challenge_->::gs_dbs_user_info_op_req_struct_op_arena_challenge::Clear();
  clear_has_arena_challenge();
}
inline const ::gs_dbs_user_info_op_req_struct_op_arena_challenge& gs_dbs_user_info_op_req::arena_challenge() const {
  return arena_challenge_ != NULL ? *arena_challenge_ : *default_instance_->arena_challenge_;
}
inline ::gs_dbs_user_info_op_req_struct_op_arena_challenge* gs_dbs_user_info_op_req::mutable_arena_challenge() {
  set_has_arena_challenge();
  if (arena_challenge_ == NULL) arena_challenge_ = new ::gs_dbs_user_info_op_req_struct_op_arena_challenge;
  return arena_challenge_;
}
inline ::gs_dbs_user_info_op_req_struct_op_arena_challenge* gs_dbs_user_info_op_req::release_arena_challenge() {
  clear_has_arena_challenge();
  ::gs_dbs_user_info_op_req_struct_op_arena_challenge* temp = arena_challenge_;
  arena_challenge_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_arena_challenge(::gs_dbs_user_info_op_req_struct_op_arena_challenge* arena_challenge) {
  delete arena_challenge_;
  arena_challenge_ = arena_challenge;
  if (arena_challenge) {
    set_has_arena_challenge();
  } else {
    clear_has_arena_challenge();
  }
}

// repeated .gs_dbs_user_info_op_req.struct_op_mission missions = 17;
inline int gs_dbs_user_info_op_req::missions_size() const {
  return missions_.size();
}
inline void gs_dbs_user_info_op_req::clear_missions() {
  missions_.Clear();
}
inline const ::gs_dbs_user_info_op_req_struct_op_mission& gs_dbs_user_info_op_req::missions(int index) const {
  return missions_.Get(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_mission* gs_dbs_user_info_op_req::mutable_missions(int index) {
  return missions_.Mutable(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_mission* gs_dbs_user_info_op_req::add_missions() {
  return missions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_mission >&
gs_dbs_user_info_op_req::missions() const {
  return missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_mission >*
gs_dbs_user_info_op_req::mutable_missions() {
  return &missions_;
}

// optional .gs_dbs_user_info_op_req.struct_op_sign sign = 18;
inline bool gs_dbs_user_info_op_req::has_sign() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_sign() {
  _has_bits_[0] |= 0x00020000u;
}
inline void gs_dbs_user_info_op_req::clear_has_sign() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void gs_dbs_user_info_op_req::clear_sign() {
  if (sign_ != NULL) sign_->::gs_dbs_user_info_op_req_struct_op_sign::Clear();
  clear_has_sign();
}
inline const ::gs_dbs_user_info_op_req_struct_op_sign& gs_dbs_user_info_op_req::sign() const {
  return sign_ != NULL ? *sign_ : *default_instance_->sign_;
}
inline ::gs_dbs_user_info_op_req_struct_op_sign* gs_dbs_user_info_op_req::mutable_sign() {
  set_has_sign();
  if (sign_ == NULL) sign_ = new ::gs_dbs_user_info_op_req_struct_op_sign;
  return sign_;
}
inline ::gs_dbs_user_info_op_req_struct_op_sign* gs_dbs_user_info_op_req::release_sign() {
  clear_has_sign();
  ::gs_dbs_user_info_op_req_struct_op_sign* temp = sign_;
  sign_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_sign(::gs_dbs_user_info_op_req_struct_op_sign* sign) {
  delete sign_;
  sign_ = sign;
  if (sign) {
    set_has_sign();
  } else {
    clear_has_sign();
  }
}

// optional .gs_dbs_user_info_op_req.struct_new_sign new_sign = 19;
inline bool gs_dbs_user_info_op_req::has_new_sign() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_new_sign() {
  _has_bits_[0] |= 0x00040000u;
}
inline void gs_dbs_user_info_op_req::clear_has_new_sign() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void gs_dbs_user_info_op_req::clear_new_sign() {
  if (new_sign_ != NULL) new_sign_->::gs_dbs_user_info_op_req_struct_new_sign::Clear();
  clear_has_new_sign();
}
inline const ::gs_dbs_user_info_op_req_struct_new_sign& gs_dbs_user_info_op_req::new_sign() const {
  return new_sign_ != NULL ? *new_sign_ : *default_instance_->new_sign_;
}
inline ::gs_dbs_user_info_op_req_struct_new_sign* gs_dbs_user_info_op_req::mutable_new_sign() {
  set_has_new_sign();
  if (new_sign_ == NULL) new_sign_ = new ::gs_dbs_user_info_op_req_struct_new_sign;
  return new_sign_;
}
inline ::gs_dbs_user_info_op_req_struct_new_sign* gs_dbs_user_info_op_req::release_new_sign() {
  clear_has_new_sign();
  ::gs_dbs_user_info_op_req_struct_new_sign* temp = new_sign_;
  new_sign_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_new_sign(::gs_dbs_user_info_op_req_struct_new_sign* new_sign) {
  delete new_sign_;
  new_sign_ = new_sign;
  if (new_sign) {
    set_has_new_sign();
  } else {
    clear_has_new_sign();
  }
}

// optional .gs_dbs_user_info_op_req.struct_op_novice_guide novice_guide = 20;
inline bool gs_dbs_user_info_op_req::has_novice_guide() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_novice_guide() {
  _has_bits_[0] |= 0x00080000u;
}
inline void gs_dbs_user_info_op_req::clear_has_novice_guide() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void gs_dbs_user_info_op_req::clear_novice_guide() {
  if (novice_guide_ != NULL) novice_guide_->::gs_dbs_user_info_op_req_struct_op_novice_guide::Clear();
  clear_has_novice_guide();
}
inline const ::gs_dbs_user_info_op_req_struct_op_novice_guide& gs_dbs_user_info_op_req::novice_guide() const {
  return novice_guide_ != NULL ? *novice_guide_ : *default_instance_->novice_guide_;
}
inline ::gs_dbs_user_info_op_req_struct_op_novice_guide* gs_dbs_user_info_op_req::mutable_novice_guide() {
  set_has_novice_guide();
  if (novice_guide_ == NULL) novice_guide_ = new ::gs_dbs_user_info_op_req_struct_op_novice_guide;
  return novice_guide_;
}
inline ::gs_dbs_user_info_op_req_struct_op_novice_guide* gs_dbs_user_info_op_req::release_novice_guide() {
  clear_has_novice_guide();
  ::gs_dbs_user_info_op_req_struct_op_novice_guide* temp = novice_guide_;
  novice_guide_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_novice_guide(::gs_dbs_user_info_op_req_struct_op_novice_guide* novice_guide) {
  delete novice_guide_;
  novice_guide_ = novice_guide;
  if (novice_guide) {
    set_has_novice_guide();
  } else {
    clear_has_novice_guide();
  }
}

// optional .gs_dbs_user_info_op_req.struct_new_user_statis new_user_statis = 21;
inline bool gs_dbs_user_info_op_req::has_new_user_statis() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_new_user_statis() {
  _has_bits_[0] |= 0x00100000u;
}
inline void gs_dbs_user_info_op_req::clear_has_new_user_statis() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void gs_dbs_user_info_op_req::clear_new_user_statis() {
  if (new_user_statis_ != NULL) new_user_statis_->::gs_dbs_user_info_op_req_struct_new_user_statis::Clear();
  clear_has_new_user_statis();
}
inline const ::gs_dbs_user_info_op_req_struct_new_user_statis& gs_dbs_user_info_op_req::new_user_statis() const {
  return new_user_statis_ != NULL ? *new_user_statis_ : *default_instance_->new_user_statis_;
}
inline ::gs_dbs_user_info_op_req_struct_new_user_statis* gs_dbs_user_info_op_req::mutable_new_user_statis() {
  set_has_new_user_statis();
  if (new_user_statis_ == NULL) new_user_statis_ = new ::gs_dbs_user_info_op_req_struct_new_user_statis;
  return new_user_statis_;
}
inline ::gs_dbs_user_info_op_req_struct_new_user_statis* gs_dbs_user_info_op_req::release_new_user_statis() {
  clear_has_new_user_statis();
  ::gs_dbs_user_info_op_req_struct_new_user_statis* temp = new_user_statis_;
  new_user_statis_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_new_user_statis(::gs_dbs_user_info_op_req_struct_new_user_statis* new_user_statis) {
  delete new_user_statis_;
  new_user_statis_ = new_user_statis;
  if (new_user_statis) {
    set_has_new_user_statis();
  } else {
    clear_has_new_user_statis();
  }
}

// optional .gs_dbs_user_info_op_req.struct_new_mail new_mail = 22;
inline bool gs_dbs_user_info_op_req::has_new_mail() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_new_mail() {
  _has_bits_[0] |= 0x00200000u;
}
inline void gs_dbs_user_info_op_req::clear_has_new_mail() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void gs_dbs_user_info_op_req::clear_new_mail() {
  if (new_mail_ != NULL) new_mail_->::gs_dbs_user_info_op_req_struct_new_mail::Clear();
  clear_has_new_mail();
}
inline const ::gs_dbs_user_info_op_req_struct_new_mail& gs_dbs_user_info_op_req::new_mail() const {
  return new_mail_ != NULL ? *new_mail_ : *default_instance_->new_mail_;
}
inline ::gs_dbs_user_info_op_req_struct_new_mail* gs_dbs_user_info_op_req::mutable_new_mail() {
  set_has_new_mail();
  if (new_mail_ == NULL) new_mail_ = new ::gs_dbs_user_info_op_req_struct_new_mail;
  return new_mail_;
}
inline ::gs_dbs_user_info_op_req_struct_new_mail* gs_dbs_user_info_op_req::release_new_mail() {
  clear_has_new_mail();
  ::gs_dbs_user_info_op_req_struct_new_mail* temp = new_mail_;
  new_mail_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_new_mail(::gs_dbs_user_info_op_req_struct_new_mail* new_mail) {
  delete new_mail_;
  new_mail_ = new_mail;
  if (new_mail) {
    set_has_new_mail();
  } else {
    clear_has_new_mail();
  }
}

// repeated .gs_dbs_user_info_op_req.struct_op_friend op_friends = 23;
inline int gs_dbs_user_info_op_req::op_friends_size() const {
  return op_friends_.size();
}
inline void gs_dbs_user_info_op_req::clear_op_friends() {
  op_friends_.Clear();
}
inline const ::gs_dbs_user_info_op_req_struct_op_friend& gs_dbs_user_info_op_req::op_friends(int index) const {
  return op_friends_.Get(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_friend* gs_dbs_user_info_op_req::mutable_op_friends(int index) {
  return op_friends_.Mutable(index);
}
inline ::gs_dbs_user_info_op_req_struct_op_friend* gs_dbs_user_info_op_req::add_op_friends() {
  return op_friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_friend >&
gs_dbs_user_info_op_req::op_friends() const {
  return op_friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_user_info_op_req_struct_op_friend >*
gs_dbs_user_info_op_req::mutable_op_friends() {
  return &op_friends_;
}

// optional .gs_dbs_user_info_op_req.struct_op_crusade op_crusade = 24;
inline bool gs_dbs_user_info_op_req::has_op_crusade() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void gs_dbs_user_info_op_req::set_has_op_crusade() {
  _has_bits_[0] |= 0x00800000u;
}
inline void gs_dbs_user_info_op_req::clear_has_op_crusade() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void gs_dbs_user_info_op_req::clear_op_crusade() {
  if (op_crusade_ != NULL) op_crusade_->::gs_dbs_user_info_op_req_struct_op_crusade::Clear();
  clear_has_op_crusade();
}
inline const ::gs_dbs_user_info_op_req_struct_op_crusade& gs_dbs_user_info_op_req::op_crusade() const {
  return op_crusade_ != NULL ? *op_crusade_ : *default_instance_->op_crusade_;
}
inline ::gs_dbs_user_info_op_req_struct_op_crusade* gs_dbs_user_info_op_req::mutable_op_crusade() {
  set_has_op_crusade();
  if (op_crusade_ == NULL) op_crusade_ = new ::gs_dbs_user_info_op_req_struct_op_crusade;
  return op_crusade_;
}
inline ::gs_dbs_user_info_op_req_struct_op_crusade* gs_dbs_user_info_op_req::release_op_crusade() {
  clear_has_op_crusade();
  ::gs_dbs_user_info_op_req_struct_op_crusade* temp = op_crusade_;
  op_crusade_ = NULL;
  return temp;
}
inline void gs_dbs_user_info_op_req::set_allocated_op_crusade(::gs_dbs_user_info_op_req_struct_op_crusade* op_crusade) {
  delete op_crusade_;
  op_crusade_ = op_crusade;
  if (op_crusade) {
    set_has_op_crusade();
  } else {
    clear_has_op_crusade();
  }
}

// -------------------------------------------------------------------

// dbs_gs_user_info_op_res

// required uint32 error_code = 1;
inline bool dbs_gs_user_info_op_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_user_info_op_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_user_info_op_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_user_info_op_res::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 dbs_gs_user_info_op_res::error_code() const {
  return error_code_;
}
inline void dbs_gs_user_info_op_res::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_user_new_mail_req

// repeated uint32 send_user_ids = 1;
inline int gs_dbs_user_new_mail_req::send_user_ids_size() const {
  return send_user_ids_.size();
}
inline void gs_dbs_user_new_mail_req::clear_send_user_ids() {
  send_user_ids_.Clear();
}
inline ::google::protobuf::uint32 gs_dbs_user_new_mail_req::send_user_ids(int index) const {
  return send_user_ids_.Get(index);
}
inline void gs_dbs_user_new_mail_req::set_send_user_ids(int index, ::google::protobuf::uint32 value) {
  send_user_ids_.Set(index, value);
}
inline void gs_dbs_user_new_mail_req::add_send_user_ids(::google::protobuf::uint32 value) {
  send_user_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
gs_dbs_user_new_mail_req::send_user_ids() const {
  return send_user_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
gs_dbs_user_new_mail_req::mutable_send_user_ids() {
  return &send_user_ids_;
}

// required .db_user_mail mail = 2;
inline bool gs_dbs_user_new_mail_req::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_new_mail_req::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_new_mail_req::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_new_mail_req::clear_mail() {
  if (mail_ != NULL) mail_->::db_user_mail::Clear();
  clear_has_mail();
}
inline const ::db_user_mail& gs_dbs_user_new_mail_req::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::db_user_mail* gs_dbs_user_new_mail_req::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::db_user_mail;
  return mail_;
}
inline ::db_user_mail* gs_dbs_user_new_mail_req::release_mail() {
  clear_has_mail();
  ::db_user_mail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void gs_dbs_user_new_mail_req::set_allocated_mail(::db_user_mail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// -------------------------------------------------------------------

// dbs_gs_user_new_mail_res

// required uint32 error_code = 1;
inline bool dbs_gs_user_new_mail_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_user_new_mail_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_user_new_mail_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_user_new_mail_res::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 dbs_gs_user_new_mail_res::error_code() const {
  return error_code_;
}
inline void dbs_gs_user_new_mail_res::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
}

// repeated uint32 user_ids = 2;
inline int dbs_gs_user_new_mail_res::user_ids_size() const {
  return user_ids_.size();
}
inline void dbs_gs_user_new_mail_res::clear_user_ids() {
  user_ids_.Clear();
}
inline ::google::protobuf::uint32 dbs_gs_user_new_mail_res::user_ids(int index) const {
  return user_ids_.Get(index);
}
inline void dbs_gs_user_new_mail_res::set_user_ids(int index, ::google::protobuf::uint32 value) {
  user_ids_.Set(index, value);
}
inline void dbs_gs_user_new_mail_res::add_user_ids(::google::protobuf::uint32 value) {
  user_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
dbs_gs_user_new_mail_res::user_ids() const {
  return user_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
dbs_gs_user_new_mail_res::mutable_user_ids() {
  return &user_ids_;
}

// repeated uint32 mail_ids = 3;
inline int dbs_gs_user_new_mail_res::mail_ids_size() const {
  return mail_ids_.size();
}
inline void dbs_gs_user_new_mail_res::clear_mail_ids() {
  mail_ids_.Clear();
}
inline ::google::protobuf::uint32 dbs_gs_user_new_mail_res::mail_ids(int index) const {
  return mail_ids_.Get(index);
}
inline void dbs_gs_user_new_mail_res::set_mail_ids(int index, ::google::protobuf::uint32 value) {
  mail_ids_.Set(index, value);
}
inline void dbs_gs_user_new_mail_res::add_mail_ids(::google::protobuf::uint32 value) {
  mail_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
dbs_gs_user_new_mail_res::mail_ids() const {
  return mail_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
dbs_gs_user_new_mail_res::mutable_mail_ids() {
  return &mail_ids_;
}

// repeated uint32 mail_attach_ids = 4;
inline int dbs_gs_user_new_mail_res::mail_attach_ids_size() const {
  return mail_attach_ids_.size();
}
inline void dbs_gs_user_new_mail_res::clear_mail_attach_ids() {
  mail_attach_ids_.Clear();
}
inline ::google::protobuf::uint32 dbs_gs_user_new_mail_res::mail_attach_ids(int index) const {
  return mail_attach_ids_.Get(index);
}
inline void dbs_gs_user_new_mail_res::set_mail_attach_ids(int index, ::google::protobuf::uint32 value) {
  mail_attach_ids_.Set(index, value);
}
inline void dbs_gs_user_new_mail_res::add_mail_attach_ids(::google::protobuf::uint32 value) {
  mail_attach_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
dbs_gs_user_new_mail_res::mail_attach_ids() const {
  return mail_attach_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
dbs_gs_user_new_mail_res::mutable_mail_attach_ids() {
  return &mail_attach_ids_;
}

// required .db_user_mail mail = 5;
inline bool dbs_gs_user_new_mail_res::has_mail() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void dbs_gs_user_new_mail_res::set_has_mail() {
  _has_bits_[0] |= 0x00000010u;
}
inline void dbs_gs_user_new_mail_res::clear_has_mail() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void dbs_gs_user_new_mail_res::clear_mail() {
  if (mail_ != NULL) mail_->::db_user_mail::Clear();
  clear_has_mail();
}
inline const ::db_user_mail& dbs_gs_user_new_mail_res::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::db_user_mail* dbs_gs_user_new_mail_res::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::db_user_mail;
  return mail_;
}
inline ::db_user_mail* dbs_gs_user_new_mail_res::release_mail() {
  clear_has_mail();
  ::db_user_mail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void dbs_gs_user_new_mail_res::set_allocated_mail(::db_user_mail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// -------------------------------------------------------------------

// arena_mail

// required uint32 user_id = 1;
inline bool arena_mail::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void arena_mail::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void arena_mail::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void arena_mail::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 arena_mail::user_id() const {
  return user_id_;
}
inline void arena_mail::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required .db_user_mail mail = 2;
inline bool arena_mail::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void arena_mail::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void arena_mail::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void arena_mail::clear_mail() {
  if (mail_ != NULL) mail_->::db_user_mail::Clear();
  clear_has_mail();
}
inline const ::db_user_mail& arena_mail::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::db_user_mail* arena_mail::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::db_user_mail;
  return mail_;
}
inline ::db_user_mail* arena_mail::release_mail() {
  clear_has_mail();
  ::db_user_mail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void arena_mail::set_allocated_mail(::db_user_mail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// -------------------------------------------------------------------

// gs_dbs_user_new_arena_mail_req

// repeated .arena_mail mails = 1;
inline int gs_dbs_user_new_arena_mail_req::mails_size() const {
  return mails_.size();
}
inline void gs_dbs_user_new_arena_mail_req::clear_mails() {
  mails_.Clear();
}
inline const ::arena_mail& gs_dbs_user_new_arena_mail_req::mails(int index) const {
  return mails_.Get(index);
}
inline ::arena_mail* gs_dbs_user_new_arena_mail_req::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::arena_mail* gs_dbs_user_new_arena_mail_req::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::arena_mail >&
gs_dbs_user_new_arena_mail_req::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::arena_mail >*
gs_dbs_user_new_arena_mail_req::mutable_mails() {
  return &mails_;
}

// -------------------------------------------------------------------

// dbs_gs_user_new_arena_mail_res

// required int32 error_code = 1;
inline bool dbs_gs_user_new_arena_mail_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_user_new_arena_mail_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_user_new_arena_mail_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_user_new_arena_mail_res::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 dbs_gs_user_new_arena_mail_res::error_code() const {
  return error_code_;
}
inline void dbs_gs_user_new_arena_mail_res::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// repeated .arena_mail mails = 2;
inline int dbs_gs_user_new_arena_mail_res::mails_size() const {
  return mails_.size();
}
inline void dbs_gs_user_new_arena_mail_res::clear_mails() {
  mails_.Clear();
}
inline const ::arena_mail& dbs_gs_user_new_arena_mail_res::mails(int index) const {
  return mails_.Get(index);
}
inline ::arena_mail* dbs_gs_user_new_arena_mail_res::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::arena_mail* dbs_gs_user_new_arena_mail_res::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::arena_mail >&
dbs_gs_user_new_arena_mail_res::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::arena_mail >*
dbs_gs_user_new_arena_mail_res::mutable_mails() {
  return &mails_;
}

// -------------------------------------------------------------------

// gs_dbs_edit_name_req

// required uint32 user_id = 1;
inline bool gs_dbs_edit_name_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_edit_name_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_edit_name_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_edit_name_req::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_edit_name_req::user_id() const {
  return user_id_;
}
inline void gs_dbs_edit_name_req::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required string name = 2;
inline bool gs_dbs_edit_name_req::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_edit_name_req::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_edit_name_req::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_edit_name_req::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& gs_dbs_edit_name_req::name() const {
  return *name_;
}
inline void gs_dbs_edit_name_req::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void gs_dbs_edit_name_req::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void gs_dbs_edit_name_req::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_edit_name_req::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* gs_dbs_edit_name_req::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_edit_name_req::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// dbs_gs_edit_name_res

// required uint32 error_code = 1;
inline bool dbs_gs_edit_name_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_edit_name_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_edit_name_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_edit_name_res::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 dbs_gs_edit_name_res::error_code() const {
  return error_code_;
}
inline void dbs_gs_edit_name_res::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
}

// required uint32 user_id = 2;
inline bool dbs_gs_edit_name_res::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dbs_gs_edit_name_res::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dbs_gs_edit_name_res::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dbs_gs_edit_name_res::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 dbs_gs_edit_name_res::user_id() const {
  return user_id_;
}
inline void dbs_gs_edit_name_res::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional string name = 3;
inline bool dbs_gs_edit_name_res::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dbs_gs_edit_name_res::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void dbs_gs_edit_name_res::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void dbs_gs_edit_name_res::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& dbs_gs_edit_name_res::name() const {
  return *name_;
}
inline void dbs_gs_edit_name_res::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void dbs_gs_edit_name_res::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void dbs_gs_edit_name_res::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* dbs_gs_edit_name_res::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* dbs_gs_edit_name_res::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void dbs_gs_edit_name_res::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// gs_dbs_user_friend_op_req

// required .gs_dbs_user_friend_op_req.OP_TYPE op_type = 1;
inline bool gs_dbs_user_friend_op_req::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_user_friend_op_req::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_user_friend_op_req::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_user_friend_op_req::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_user_friend_op_req_OP_TYPE gs_dbs_user_friend_op_req::op_type() const {
  return static_cast< ::gs_dbs_user_friend_op_req_OP_TYPE >(op_type_);
}
inline void gs_dbs_user_friend_op_req::set_op_type(::gs_dbs_user_friend_op_req_OP_TYPE value) {
  assert(::gs_dbs_user_friend_op_req_OP_TYPE_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// required uint32 user_id = 2;
inline bool gs_dbs_user_friend_op_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_user_friend_op_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_user_friend_op_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_user_friend_op_req::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_friend_op_req::user_id() const {
  return user_id_;
}
inline void gs_dbs_user_friend_op_req::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 friend_user_id = 3;
inline bool gs_dbs_user_friend_op_req::has_friend_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_user_friend_op_req::set_has_friend_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_user_friend_op_req::clear_has_friend_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_user_friend_op_req::clear_friend_user_id() {
  friend_user_id_ = 0u;
  clear_has_friend_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_user_friend_op_req::friend_user_id() const {
  return friend_user_id_;
}
inline void gs_dbs_user_friend_op_req::set_friend_user_id(::google::protobuf::uint32 value) {
  set_has_friend_user_id();
  friend_user_id_ = value;
}

// optional .friend_base_info base_info = 4;
inline bool gs_dbs_user_friend_op_req::has_base_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_user_friend_op_req::set_has_base_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_user_friend_op_req::clear_has_base_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_user_friend_op_req::clear_base_info() {
  if (base_info_ != NULL) base_info_->::friend_base_info::Clear();
  clear_has_base_info();
}
inline const ::friend_base_info& gs_dbs_user_friend_op_req::base_info() const {
  return base_info_ != NULL ? *base_info_ : *default_instance_->base_info_;
}
inline ::friend_base_info* gs_dbs_user_friend_op_req::mutable_base_info() {
  set_has_base_info();
  if (base_info_ == NULL) base_info_ = new ::friend_base_info;
  return base_info_;
}
inline ::friend_base_info* gs_dbs_user_friend_op_req::release_base_info() {
  clear_has_base_info();
  ::friend_base_info* temp = base_info_;
  base_info_ = NULL;
  return temp;
}
inline void gs_dbs_user_friend_op_req::set_allocated_base_info(::friend_base_info* base_info) {
  delete base_info_;
  base_info_ = base_info;
  if (base_info) {
    set_has_base_info();
  } else {
    clear_has_base_info();
  }
}

// -------------------------------------------------------------------

// dbs_gs_user_friend_op_res

// required uint32 error_code = 1;
inline bool dbs_gs_user_friend_op_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_user_friend_op_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_user_friend_op_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_user_friend_op_res::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 dbs_gs_user_friend_op_res::error_code() const {
  return error_code_;
}
inline void dbs_gs_user_friend_op_res::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_search_user_req

// required uint32 user_id = 1;
inline bool gs_dbs_search_user_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_search_user_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_search_user_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_search_user_req::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_search_user_req::user_id() const {
  return user_id_;
}
inline void gs_dbs_search_user_req::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 search_id = 2;
inline bool gs_dbs_search_user_req::has_search_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_search_user_req::set_has_search_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_search_user_req::clear_has_search_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_search_user_req::clear_search_id() {
  search_id_ = 0u;
  clear_has_search_id();
}
inline ::google::protobuf::uint32 gs_dbs_search_user_req::search_id() const {
  return search_id_;
}
inline void gs_dbs_search_user_req::set_search_id(::google::protobuf::uint32 value) {
  set_has_search_id();
  search_id_ = value;
}

// optional string search_name = 3;
inline bool gs_dbs_search_user_req::has_search_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_search_user_req::set_has_search_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_search_user_req::clear_has_search_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_search_user_req::clear_search_name() {
  if (search_name_ != &::google::protobuf::internal::kEmptyString) {
    search_name_->clear();
  }
  clear_has_search_name();
}
inline const ::std::string& gs_dbs_search_user_req::search_name() const {
  return *search_name_;
}
inline void gs_dbs_search_user_req::set_search_name(const ::std::string& value) {
  set_has_search_name();
  if (search_name_ == &::google::protobuf::internal::kEmptyString) {
    search_name_ = new ::std::string;
  }
  search_name_->assign(value);
}
inline void gs_dbs_search_user_req::set_search_name(const char* value) {
  set_has_search_name();
  if (search_name_ == &::google::protobuf::internal::kEmptyString) {
    search_name_ = new ::std::string;
  }
  search_name_->assign(value);
}
inline void gs_dbs_search_user_req::set_search_name(const char* value, size_t size) {
  set_has_search_name();
  if (search_name_ == &::google::protobuf::internal::kEmptyString) {
    search_name_ = new ::std::string;
  }
  search_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_search_user_req::mutable_search_name() {
  set_has_search_name();
  if (search_name_ == &::google::protobuf::internal::kEmptyString) {
    search_name_ = new ::std::string;
  }
  return search_name_;
}
inline ::std::string* gs_dbs_search_user_req::release_search_name() {
  clear_has_search_name();
  if (search_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = search_name_;
    search_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_search_user_req::set_allocated_search_name(::std::string* search_name) {
  if (search_name_ != &::google::protobuf::internal::kEmptyString) {
    delete search_name_;
  }
  if (search_name) {
    set_has_search_name();
    search_name_ = search_name;
  } else {
    clear_has_search_name();
    search_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// dbs_gs_search_user_res

// required uint32 error_code = 1;
inline bool dbs_gs_search_user_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_search_user_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_search_user_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_search_user_res::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 dbs_gs_search_user_res::error_code() const {
  return error_code_;
}
inline void dbs_gs_search_user_res::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
}

// required uint32 user_id = 2;
inline bool dbs_gs_search_user_res::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dbs_gs_search_user_res::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dbs_gs_search_user_res::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dbs_gs_search_user_res::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 dbs_gs_search_user_res::user_id() const {
  return user_id_;
}
inline void dbs_gs_search_user_res::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional .friend_base_info base_info = 3;
inline bool dbs_gs_search_user_res::has_base_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dbs_gs_search_user_res::set_has_base_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void dbs_gs_search_user_res::clear_has_base_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void dbs_gs_search_user_res::clear_base_info() {
  if (base_info_ != NULL) base_info_->::friend_base_info::Clear();
  clear_has_base_info();
}
inline const ::friend_base_info& dbs_gs_search_user_res::base_info() const {
  return base_info_ != NULL ? *base_info_ : *default_instance_->base_info_;
}
inline ::friend_base_info* dbs_gs_search_user_res::mutable_base_info() {
  set_has_base_info();
  if (base_info_ == NULL) base_info_ = new ::friend_base_info;
  return base_info_;
}
inline ::friend_base_info* dbs_gs_search_user_res::release_base_info() {
  clear_has_base_info();
  ::friend_base_info* temp = base_info_;
  base_info_ = NULL;
  return temp;
}
inline void dbs_gs_search_user_res::set_allocated_base_info(::friend_base_info* base_info) {
  delete base_info_;
  base_info_ = base_info;
  if (base_info) {
    set_has_base_info();
  } else {
    clear_has_base_info();
  }
}

// -------------------------------------------------------------------

// gs_dbs_friend_offline_req

// required .gs_dbs_friend_offline_req.OP_TYPE op_type = 1;
inline bool gs_dbs_friend_offline_req::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_friend_offline_req::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_friend_offline_req::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_friend_offline_req::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_friend_offline_req_OP_TYPE gs_dbs_friend_offline_req::op_type() const {
  return static_cast< ::gs_dbs_friend_offline_req_OP_TYPE >(op_type_);
}
inline void gs_dbs_friend_offline_req::set_op_type(::gs_dbs_friend_offline_req_OP_TYPE value) {
  assert(::gs_dbs_friend_offline_req_OP_TYPE_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// required uint32 user_id = 2;
inline bool gs_dbs_friend_offline_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_friend_offline_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_friend_offline_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_friend_offline_req::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_friend_offline_req::user_id() const {
  return user_id_;
}
inline void gs_dbs_friend_offline_req::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 friend_id = 3;
inline bool gs_dbs_friend_offline_req::has_friend_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_friend_offline_req::set_has_friend_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_friend_offline_req::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_friend_offline_req::clear_friend_id() {
  friend_id_ = 0u;
  clear_has_friend_id();
}
inline ::google::protobuf::uint32 gs_dbs_friend_offline_req::friend_id() const {
  return friend_id_;
}
inline void gs_dbs_friend_offline_req::set_friend_id(::google::protobuf::uint32 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// optional .friend_base_info friend_info = 4;
inline bool gs_dbs_friend_offline_req::has_friend_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_friend_offline_req::set_has_friend_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_friend_offline_req::clear_has_friend_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_friend_offline_req::clear_friend_info() {
  if (friend_info_ != NULL) friend_info_->::friend_base_info::Clear();
  clear_has_friend_info();
}
inline const ::friend_base_info& gs_dbs_friend_offline_req::friend_info() const {
  return friend_info_ != NULL ? *friend_info_ : *default_instance_->friend_info_;
}
inline ::friend_base_info* gs_dbs_friend_offline_req::mutable_friend_info() {
  set_has_friend_info();
  if (friend_info_ == NULL) friend_info_ = new ::friend_base_info;
  return friend_info_;
}
inline ::friend_base_info* gs_dbs_friend_offline_req::release_friend_info() {
  clear_has_friend_info();
  ::friend_base_info* temp = friend_info_;
  friend_info_ = NULL;
  return temp;
}
inline void gs_dbs_friend_offline_req::set_allocated_friend_info(::friend_base_info* friend_info) {
  delete friend_info_;
  friend_info_ = friend_info;
  if (friend_info) {
    set_has_friend_info();
  } else {
    clear_has_friend_info();
  }
}

// optional .friend_base_info me_info = 5;
inline bool gs_dbs_friend_offline_req::has_me_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_friend_offline_req::set_has_me_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_friend_offline_req::clear_has_me_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_friend_offline_req::clear_me_info() {
  if (me_info_ != NULL) me_info_->::friend_base_info::Clear();
  clear_has_me_info();
}
inline const ::friend_base_info& gs_dbs_friend_offline_req::me_info() const {
  return me_info_ != NULL ? *me_info_ : *default_instance_->me_info_;
}
inline ::friend_base_info* gs_dbs_friend_offline_req::mutable_me_info() {
  set_has_me_info();
  if (me_info_ == NULL) me_info_ = new ::friend_base_info;
  return me_info_;
}
inline ::friend_base_info* gs_dbs_friend_offline_req::release_me_info() {
  clear_has_me_info();
  ::friend_base_info* temp = me_info_;
  me_info_ = NULL;
  return temp;
}
inline void gs_dbs_friend_offline_req::set_allocated_me_info(::friend_base_info* me_info) {
  delete me_info_;
  me_info_ = me_info;
  if (me_info) {
    set_has_me_info();
  } else {
    clear_has_me_info();
  }
}

// repeated uint32 affirm_ids = 6;
inline int gs_dbs_friend_offline_req::affirm_ids_size() const {
  return affirm_ids_.size();
}
inline void gs_dbs_friend_offline_req::clear_affirm_ids() {
  affirm_ids_.Clear();
}
inline ::google::protobuf::uint32 gs_dbs_friend_offline_req::affirm_ids(int index) const {
  return affirm_ids_.Get(index);
}
inline void gs_dbs_friend_offline_req::set_affirm_ids(int index, ::google::protobuf::uint32 value) {
  affirm_ids_.Set(index, value);
}
inline void gs_dbs_friend_offline_req::add_affirm_ids(::google::protobuf::uint32 value) {
  affirm_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
gs_dbs_friend_offline_req::affirm_ids() const {
  return affirm_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
gs_dbs_friend_offline_req::mutable_affirm_ids() {
  return &affirm_ids_;
}

// -------------------------------------------------------------------

// dbs_gs_friend_offline_res

// required uint32 error_code = 1;
inline bool dbs_gs_friend_offline_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_friend_offline_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_friend_offline_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_friend_offline_res::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 dbs_gs_friend_offline_res::error_code() const {
  return error_code_;
}
inline void dbs_gs_friend_offline_res::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
}

// required .gs_dbs_friend_offline_req.OP_TYPE op_type = 2;
inline bool dbs_gs_friend_offline_res::has_op_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dbs_gs_friend_offline_res::set_has_op_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dbs_gs_friend_offline_res::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dbs_gs_friend_offline_res::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_friend_offline_req_OP_TYPE dbs_gs_friend_offline_res::op_type() const {
  return static_cast< ::gs_dbs_friend_offline_req_OP_TYPE >(op_type_);
}
inline void dbs_gs_friend_offline_res::set_op_type(::gs_dbs_friend_offline_req_OP_TYPE value) {
  assert(::gs_dbs_friend_offline_req_OP_TYPE_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// required uint32 user_id = 3;
inline bool dbs_gs_friend_offline_res::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dbs_gs_friend_offline_res::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void dbs_gs_friend_offline_res::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void dbs_gs_friend_offline_res::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 dbs_gs_friend_offline_res::user_id() const {
  return user_id_;
}
inline void dbs_gs_friend_offline_res::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional .friend_base_info info = 4;
inline bool dbs_gs_friend_offline_res::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void dbs_gs_friend_offline_res::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void dbs_gs_friend_offline_res::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void dbs_gs_friend_offline_res::clear_info() {
  if (info_ != NULL) info_->::friend_base_info::Clear();
  clear_has_info();
}
inline const ::friend_base_info& dbs_gs_friend_offline_res::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::friend_base_info* dbs_gs_friend_offline_res::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::friend_base_info;
  return info_;
}
inline ::friend_base_info* dbs_gs_friend_offline_res::release_info() {
  clear_has_info();
  ::friend_base_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void dbs_gs_friend_offline_res::set_allocated_info(::friend_base_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// repeated uint32 affirm_ids = 5;
inline int dbs_gs_friend_offline_res::affirm_ids_size() const {
  return affirm_ids_.size();
}
inline void dbs_gs_friend_offline_res::clear_affirm_ids() {
  affirm_ids_.Clear();
}
inline ::google::protobuf::uint32 dbs_gs_friend_offline_res::affirm_ids(int index) const {
  return affirm_ids_.Get(index);
}
inline void dbs_gs_friend_offline_res::set_affirm_ids(int index, ::google::protobuf::uint32 value) {
  affirm_ids_.Set(index, value);
}
inline void dbs_gs_friend_offline_res::add_affirm_ids(::google::protobuf::uint32 value) {
  affirm_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
dbs_gs_friend_offline_res::affirm_ids() const {
  return affirm_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
dbs_gs_friend_offline_res::mutable_affirm_ids() {
  return &affirm_ids_;
}

// -------------------------------------------------------------------

// gs_dbs_rank_req

// -------------------------------------------------------------------

// dbs_gs_rank_res_rank_brief_info

// required uint32 rank = 1;
inline bool dbs_gs_rank_res_rank_brief_info::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_rank_res_rank_brief_info::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_rank_res_rank_brief_info::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_rank_res_rank_brief_info::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 dbs_gs_rank_res_rank_brief_info::rank() const {
  return rank_;
}
inline void dbs_gs_rank_res_rank_brief_info::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required uint32 user_id = 2;
inline bool dbs_gs_rank_res_rank_brief_info::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dbs_gs_rank_res_rank_brief_info::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dbs_gs_rank_res_rank_brief_info::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dbs_gs_rank_res_rank_brief_info::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 dbs_gs_rank_res_rank_brief_info::user_id() const {
  return user_id_;
}
inline void dbs_gs_rank_res_rank_brief_info::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// dbs_gs_rank_res_rank_info

// required uint32 user_id = 1;
inline bool dbs_gs_rank_res_rank_info::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_rank_res_rank_info::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_rank_res_rank_info::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_rank_res_rank_info::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 dbs_gs_rank_res_rank_info::user_id() const {
  return user_id_;
}
inline void dbs_gs_rank_res_rank_info::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required uint32 head_id = 2;
inline bool dbs_gs_rank_res_rank_info::has_head_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dbs_gs_rank_res_rank_info::set_has_head_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dbs_gs_rank_res_rank_info::clear_has_head_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dbs_gs_rank_res_rank_info::clear_head_id() {
  head_id_ = 0u;
  clear_has_head_id();
}
inline ::google::protobuf::uint32 dbs_gs_rank_res_rank_info::head_id() const {
  return head_id_;
}
inline void dbs_gs_rank_res_rank_info::set_head_id(::google::protobuf::uint32 value) {
  set_has_head_id();
  head_id_ = value;
}

// required uint32 head_frame_id = 3;
inline bool dbs_gs_rank_res_rank_info::has_head_frame_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dbs_gs_rank_res_rank_info::set_has_head_frame_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void dbs_gs_rank_res_rank_info::clear_has_head_frame_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void dbs_gs_rank_res_rank_info::clear_head_frame_id() {
  head_frame_id_ = 0u;
  clear_has_head_frame_id();
}
inline ::google::protobuf::uint32 dbs_gs_rank_res_rank_info::head_frame_id() const {
  return head_frame_id_;
}
inline void dbs_gs_rank_res_rank_info::set_head_frame_id(::google::protobuf::uint32 value) {
  set_has_head_frame_id();
  head_frame_id_ = value;
}

// required uint32 level = 4;
inline bool dbs_gs_rank_res_rank_info::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void dbs_gs_rank_res_rank_info::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void dbs_gs_rank_res_rank_info::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void dbs_gs_rank_res_rank_info::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 dbs_gs_rank_res_rank_info::level() const {
  return level_;
}
inline void dbs_gs_rank_res_rank_info::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required string name = 5;
inline bool dbs_gs_rank_res_rank_info::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void dbs_gs_rank_res_rank_info::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void dbs_gs_rank_res_rank_info::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void dbs_gs_rank_res_rank_info::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& dbs_gs_rank_res_rank_info::name() const {
  return *name_;
}
inline void dbs_gs_rank_res_rank_info::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void dbs_gs_rank_res_rank_info::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void dbs_gs_rank_res_rank_info::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* dbs_gs_rank_res_rank_info::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* dbs_gs_rank_res_rank_info::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void dbs_gs_rank_res_rank_info::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 vip = 6;
inline bool dbs_gs_rank_res_rank_info::has_vip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void dbs_gs_rank_res_rank_info::set_has_vip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void dbs_gs_rank_res_rank_info::clear_has_vip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void dbs_gs_rank_res_rank_info::clear_vip() {
  vip_ = 0u;
  clear_has_vip();
}
inline ::google::protobuf::uint32 dbs_gs_rank_res_rank_info::vip() const {
  return vip_;
}
inline void dbs_gs_rank_res_rank_info::set_vip(::google::protobuf::uint32 value) {
  set_has_vip();
  vip_ = value;
}

// required uint32 fight_power = 7;
inline bool dbs_gs_rank_res_rank_info::has_fight_power() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void dbs_gs_rank_res_rank_info::set_has_fight_power() {
  _has_bits_[0] |= 0x00000040u;
}
inline void dbs_gs_rank_res_rank_info::clear_has_fight_power() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void dbs_gs_rank_res_rank_info::clear_fight_power() {
  fight_power_ = 0u;
  clear_has_fight_power();
}
inline ::google::protobuf::uint32 dbs_gs_rank_res_rank_info::fight_power() const {
  return fight_power_;
}
inline void dbs_gs_rank_res_rank_info::set_fight_power(::google::protobuf::uint32 value) {
  set_has_fight_power();
  fight_power_ = value;
}

// -------------------------------------------------------------------

// dbs_gs_rank_res

// required uint32 error_code = 1;
inline bool dbs_gs_rank_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_rank_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_rank_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_rank_res::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 dbs_gs_rank_res::error_code() const {
  return error_code_;
}
inline void dbs_gs_rank_res::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
}

// repeated .dbs_gs_rank_res.rank_brief_info level_brief_ranks = 2;
inline int dbs_gs_rank_res::level_brief_ranks_size() const {
  return level_brief_ranks_.size();
}
inline void dbs_gs_rank_res::clear_level_brief_ranks() {
  level_brief_ranks_.Clear();
}
inline const ::dbs_gs_rank_res_rank_brief_info& dbs_gs_rank_res::level_brief_ranks(int index) const {
  return level_brief_ranks_.Get(index);
}
inline ::dbs_gs_rank_res_rank_brief_info* dbs_gs_rank_res::mutable_level_brief_ranks(int index) {
  return level_brief_ranks_.Mutable(index);
}
inline ::dbs_gs_rank_res_rank_brief_info* dbs_gs_rank_res::add_level_brief_ranks() {
  return level_brief_ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_brief_info >&
dbs_gs_rank_res::level_brief_ranks() const {
  return level_brief_ranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_brief_info >*
dbs_gs_rank_res::mutable_level_brief_ranks() {
  return &level_brief_ranks_;
}

// repeated .dbs_gs_rank_res.rank_brief_info fight_power_brief_ranks = 3;
inline int dbs_gs_rank_res::fight_power_brief_ranks_size() const {
  return fight_power_brief_ranks_.size();
}
inline void dbs_gs_rank_res::clear_fight_power_brief_ranks() {
  fight_power_brief_ranks_.Clear();
}
inline const ::dbs_gs_rank_res_rank_brief_info& dbs_gs_rank_res::fight_power_brief_ranks(int index) const {
  return fight_power_brief_ranks_.Get(index);
}
inline ::dbs_gs_rank_res_rank_brief_info* dbs_gs_rank_res::mutable_fight_power_brief_ranks(int index) {
  return fight_power_brief_ranks_.Mutable(index);
}
inline ::dbs_gs_rank_res_rank_brief_info* dbs_gs_rank_res::add_fight_power_brief_ranks() {
  return fight_power_brief_ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_brief_info >&
dbs_gs_rank_res::fight_power_brief_ranks() const {
  return fight_power_brief_ranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_brief_info >*
dbs_gs_rank_res::mutable_fight_power_brief_ranks() {
  return &fight_power_brief_ranks_;
}

// repeated .dbs_gs_rank_res.rank_info level_ranks = 4;
inline int dbs_gs_rank_res::level_ranks_size() const {
  return level_ranks_.size();
}
inline void dbs_gs_rank_res::clear_level_ranks() {
  level_ranks_.Clear();
}
inline const ::dbs_gs_rank_res_rank_info& dbs_gs_rank_res::level_ranks(int index) const {
  return level_ranks_.Get(index);
}
inline ::dbs_gs_rank_res_rank_info* dbs_gs_rank_res::mutable_level_ranks(int index) {
  return level_ranks_.Mutable(index);
}
inline ::dbs_gs_rank_res_rank_info* dbs_gs_rank_res::add_level_ranks() {
  return level_ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >&
dbs_gs_rank_res::level_ranks() const {
  return level_ranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >*
dbs_gs_rank_res::mutable_level_ranks() {
  return &level_ranks_;
}

// repeated .dbs_gs_rank_res.rank_info fight_power_ranks = 5;
inline int dbs_gs_rank_res::fight_power_ranks_size() const {
  return fight_power_ranks_.size();
}
inline void dbs_gs_rank_res::clear_fight_power_ranks() {
  fight_power_ranks_.Clear();
}
inline const ::dbs_gs_rank_res_rank_info& dbs_gs_rank_res::fight_power_ranks(int index) const {
  return fight_power_ranks_.Get(index);
}
inline ::dbs_gs_rank_res_rank_info* dbs_gs_rank_res::mutable_fight_power_ranks(int index) {
  return fight_power_ranks_.Mutable(index);
}
inline ::dbs_gs_rank_res_rank_info* dbs_gs_rank_res::add_fight_power_ranks() {
  return fight_power_ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >&
dbs_gs_rank_res::fight_power_ranks() const {
  return fight_power_ranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >*
dbs_gs_rank_res::mutable_fight_power_ranks() {
  return &fight_power_ranks_;
}

// repeated .dbs_gs_rank_res.rank_info arena_ranks = 6;
inline int dbs_gs_rank_res::arena_ranks_size() const {
  return arena_ranks_.size();
}
inline void dbs_gs_rank_res::clear_arena_ranks() {
  arena_ranks_.Clear();
}
inline const ::dbs_gs_rank_res_rank_info& dbs_gs_rank_res::arena_ranks(int index) const {
  return arena_ranks_.Get(index);
}
inline ::dbs_gs_rank_res_rank_info* dbs_gs_rank_res::mutable_arena_ranks(int index) {
  return arena_ranks_.Mutable(index);
}
inline ::dbs_gs_rank_res_rank_info* dbs_gs_rank_res::add_arena_ranks() {
  return arena_ranks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >&
dbs_gs_rank_res::arena_ranks() const {
  return arena_ranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::dbs_gs_rank_res_rank_info >*
dbs_gs_rank_res::mutable_arena_ranks() {
  return &arena_ranks_;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_new_guild

// required string id = 1;
inline bool gs_dbs_guild_op_req_struct_new_guild::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& gs_dbs_guild_op_req_struct_new_guild::id() const {
  return *id_;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_guild_op_req_struct_new_guild::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* gs_dbs_guild_op_req_struct_new_guild::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string name = 2;
inline bool gs_dbs_guild_op_req_struct_new_guild::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& gs_dbs_guild_op_req_struct_new_guild::name() const {
  return *name_;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_guild_op_req_struct_new_guild::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* gs_dbs_guild_op_req_struct_new_guild::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 creator_user_id = 3;
inline bool gs_dbs_guild_op_req_struct_new_guild::has_creator_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_has_creator_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_has_creator_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_creator_user_id() {
  creator_user_id_ = 0u;
  clear_has_creator_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_guild::creator_user_id() const {
  return creator_user_id_;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_creator_user_id(::google::protobuf::uint32 value) {
  set_has_creator_user_id();
  creator_user_id_ = value;
}

// required uint32 create_time = 4;
inline bool gs_dbs_guild_op_req_struct_new_guild::has_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_has_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_create_time() {
  create_time_ = 0u;
  clear_has_create_time();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_guild::create_time() const {
  return create_time_;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_create_time(::google::protobuf::uint32 value) {
  set_has_create_time();
  create_time_ = value;
}

// required uint32 president_user_id = 5;
inline bool gs_dbs_guild_op_req_struct_new_guild::has_president_user_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_has_president_user_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_has_president_user_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_president_user_id() {
  president_user_id_ = 0u;
  clear_has_president_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_guild::president_user_id() const {
  return president_user_id_;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_president_user_id(::google::protobuf::uint32 value) {
  set_has_president_user_id();
  president_user_id_ = value;
}

// required .e_apply_switch_status status = 6;
inline bool gs_dbs_guild_op_req_struct_new_guild::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::e_apply_switch_status gs_dbs_guild_op_req_struct_new_guild::status() const {
  return static_cast< ::e_apply_switch_status >(status_);
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_status(::e_apply_switch_status value) {
  assert(::e_apply_switch_status_IsValid(value));
  set_has_status();
  status_ = value;
}

// required uint32 flag = 7;
inline bool gs_dbs_guild_op_req_struct_new_guild::has_flag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_has_flag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_has_flag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_guild::flag() const {
  return flag_;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
}

// required uint32 contribution_point = 9;
inline bool gs_dbs_guild_op_req_struct_new_guild::has_contribution_point() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_has_contribution_point() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_has_contribution_point() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_contribution_point() {
  contribution_point_ = 0u;
  clear_has_contribution_point();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_guild::contribution_point() const {
  return contribution_point_;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_contribution_point(::google::protobuf::uint32 value) {
  set_has_contribution_point();
  contribution_point_ = value;
}

// required uint32 coin = 10;
inline bool gs_dbs_guild_op_req_struct_new_guild::has_coin() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_has_coin() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_has_coin() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_guild::coin() const {
  return coin_;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// required string announcement = 11;
inline bool gs_dbs_guild_op_req_struct_new_guild::has_announcement() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_has_announcement() {
  _has_bits_[0] |= 0x00000200u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void gs_dbs_guild_op_req_struct_new_guild::clear_announcement() {
  if (announcement_ != &::google::protobuf::internal::kEmptyString) {
    announcement_->clear();
  }
  clear_has_announcement();
}
inline const ::std::string& gs_dbs_guild_op_req_struct_new_guild::announcement() const {
  return *announcement_;
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_announcement(const ::std::string& value) {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  announcement_->assign(value);
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_announcement(const char* value) {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  announcement_->assign(value);
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  announcement_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_guild_op_req_struct_new_guild::mutable_announcement() {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  return announcement_;
}
inline ::std::string* gs_dbs_guild_op_req_struct_new_guild::release_announcement() {
  clear_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = announcement_;
    announcement_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_guild_op_req_struct_new_guild::set_allocated_announcement(::std::string* announcement) {
  if (announcement_ != &::google::protobuf::internal::kEmptyString) {
    delete announcement_;
  }
  if (announcement) {
    set_has_announcement();
    announcement_ = announcement;
  } else {
    clear_has_announcement();
    announcement_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_update_guild

// required uint32 guild_id = 1;
inline bool gs_dbs_guild_op_req_struct_update_guild::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_guild::guild_id() const {
  return guild_id_;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// optional string name = 2;
inline bool gs_dbs_guild_op_req_struct_update_guild::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& gs_dbs_guild_op_req_struct_update_guild::name() const {
  return *name_;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_guild_op_req_struct_update_guild::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* gs_dbs_guild_op_req_struct_update_guild::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 president_user_id = 3;
inline bool gs_dbs_guild_op_req_struct_update_guild::has_president_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_has_president_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_has_president_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_president_user_id() {
  president_user_id_ = 0u;
  clear_has_president_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_guild::president_user_id() const {
  return president_user_id_;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_president_user_id(::google::protobuf::uint32 value) {
  set_has_president_user_id();
  president_user_id_ = value;
}

// optional .e_apply_switch_status status = 4;
inline bool gs_dbs_guild_op_req_struct_update_guild::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::e_apply_switch_status gs_dbs_guild_op_req_struct_update_guild::status() const {
  return static_cast< ::e_apply_switch_status >(status_);
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_status(::e_apply_switch_status value) {
  assert(::e_apply_switch_status_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 flag = 5;
inline bool gs_dbs_guild_op_req_struct_update_guild::has_flag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_has_flag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_has_flag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_guild::flag() const {
  return flag_;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
}

// optional uint32 contribution_point = 6;
inline bool gs_dbs_guild_op_req_struct_update_guild::has_contribution_point() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_has_contribution_point() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_has_contribution_point() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_contribution_point() {
  contribution_point_ = 0u;
  clear_has_contribution_point();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_guild::contribution_point() const {
  return contribution_point_;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_contribution_point(::google::protobuf::uint32 value) {
  set_has_contribution_point();
  contribution_point_ = value;
}

// optional uint32 coin = 7;
inline bool gs_dbs_guild_op_req_struct_update_guild::has_coin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_has_coin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_has_coin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_guild::coin() const {
  return coin_;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// optional string announcement = 8;
inline bool gs_dbs_guild_op_req_struct_update_guild::has_announcement() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_has_announcement() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gs_dbs_guild_op_req_struct_update_guild::clear_announcement() {
  if (announcement_ != &::google::protobuf::internal::kEmptyString) {
    announcement_->clear();
  }
  clear_has_announcement();
}
inline const ::std::string& gs_dbs_guild_op_req_struct_update_guild::announcement() const {
  return *announcement_;
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_announcement(const ::std::string& value) {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  announcement_->assign(value);
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_announcement(const char* value) {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  announcement_->assign(value);
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  announcement_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_dbs_guild_op_req_struct_update_guild::mutable_announcement() {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  return announcement_;
}
inline ::std::string* gs_dbs_guild_op_req_struct_update_guild::release_announcement() {
  clear_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = announcement_;
    announcement_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_dbs_guild_op_req_struct_update_guild::set_allocated_announcement(::std::string* announcement) {
  if (announcement_ != &::google::protobuf::internal::kEmptyString) {
    delete announcement_;
  }
  if (announcement) {
    set_has_announcement();
    announcement_ = announcement;
  } else {
    clear_has_announcement();
    announcement_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_delete_guild

// required uint32 guild_id = 1;
inline bool gs_dbs_guild_op_req_struct_delete_guild::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_guild::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_delete_guild::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_delete_guild::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_delete_guild::guild_id() const {
  return guild_id_;
}
inline void gs_dbs_guild_op_req_struct_delete_guild::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_new_apply

// repeated uint32 guild_ids = 1;
inline int gs_dbs_guild_op_req_struct_new_apply::guild_ids_size() const {
  return guild_ids_.size();
}
inline void gs_dbs_guild_op_req_struct_new_apply::clear_guild_ids() {
  guild_ids_.Clear();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_apply::guild_ids(int index) const {
  return guild_ids_.Get(index);
}
inline void gs_dbs_guild_op_req_struct_new_apply::set_guild_ids(int index, ::google::protobuf::uint32 value) {
  guild_ids_.Set(index, value);
}
inline void gs_dbs_guild_op_req_struct_new_apply::add_guild_ids(::google::protobuf::uint32 value) {
  guild_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
gs_dbs_guild_op_req_struct_new_apply::guild_ids() const {
  return guild_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
gs_dbs_guild_op_req_struct_new_apply::mutable_guild_ids() {
  return &guild_ids_;
}

// required uint32 user_id = 2;
inline bool gs_dbs_guild_op_req_struct_new_apply::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_apply::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_apply::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_apply::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_apply::user_id() const {
  return user_id_;
}
inline void gs_dbs_guild_op_req_struct_new_apply::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required uint32 time = 3;
inline bool gs_dbs_guild_op_req_struct_new_apply::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_apply::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_new_apply::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_new_apply::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_apply::time() const {
  return time_;
}
inline void gs_dbs_guild_op_req_struct_new_apply::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_delete_apply

// required .gs_dbs_guild_op_req.struct_delete_apply.EOPType op_type = 1;
inline bool gs_dbs_guild_op_req_struct_delete_apply::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_apply::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_delete_apply::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_delete_apply::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_guild_op_req_struct_delete_apply_EOPType gs_dbs_guild_op_req_struct_delete_apply::op_type() const {
  return static_cast< ::gs_dbs_guild_op_req_struct_delete_apply_EOPType >(op_type_);
}
inline void gs_dbs_guild_op_req_struct_delete_apply::set_op_type(::gs_dbs_guild_op_req_struct_delete_apply_EOPType value) {
  assert(::gs_dbs_guild_op_req_struct_delete_apply_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// optional uint32 guild_id = 2;
inline bool gs_dbs_guild_op_req_struct_delete_apply::has_guild_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_apply::set_has_guild_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_delete_apply::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_delete_apply::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_delete_apply::guild_id() const {
  return guild_id_;
}
inline void gs_dbs_guild_op_req_struct_delete_apply::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// optional uint32 user_id = 3;
inline bool gs_dbs_guild_op_req_struct_delete_apply::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_apply::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_delete_apply::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_delete_apply::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_delete_apply::user_id() const {
  return user_id_;
}
inline void gs_dbs_guild_op_req_struct_delete_apply::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_new_member

// required uint32 guild_id = 1;
inline bool gs_dbs_guild_op_req_struct_new_member::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_member::guild_id() const {
  return guild_id_;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// required uint32 user_id = 2;
inline bool gs_dbs_guild_op_req_struct_new_member::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_member::user_id() const {
  return user_id_;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required .e_guild_position position = 3;
inline bool gs_dbs_guild_op_req_struct_new_member::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::e_guild_position gs_dbs_guild_op_req_struct_new_member::position() const {
  return static_cast< ::e_guild_position >(position_);
}
inline void gs_dbs_guild_op_req_struct_new_member::set_position(::e_guild_position value) {
  assert(::e_guild_position_IsValid(value));
  set_has_position();
  position_ = value;
}

// required uint32 join_time = 4;
inline bool gs_dbs_guild_op_req_struct_new_member::has_join_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_has_join_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_has_join_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_join_time() {
  join_time_ = 0u;
  clear_has_join_time();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_member::join_time() const {
  return join_time_;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_join_time(::google::protobuf::uint32 value) {
  set_has_join_time();
  join_time_ = value;
}

// required uint32 leave_time = 5;
inline bool gs_dbs_guild_op_req_struct_new_member::has_leave_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_has_leave_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_has_leave_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_leave_time() {
  leave_time_ = 0u;
  clear_has_leave_time();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_member::leave_time() const {
  return leave_time_;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_leave_time(::google::protobuf::uint32 value) {
  set_has_leave_time();
  leave_time_ = value;
}

// required uint32 contribution_point = 6;
inline bool gs_dbs_guild_op_req_struct_new_member::has_contribution_point() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_has_contribution_point() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_has_contribution_point() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_contribution_point() {
  contribution_point_ = 0u;
  clear_has_contribution_point();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_member::contribution_point() const {
  return contribution_point_;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_contribution_point(::google::protobuf::uint32 value) {
  set_has_contribution_point();
  contribution_point_ = value;
}

// required uint32 coin = 7;
inline bool gs_dbs_guild_op_req_struct_new_member::has_coin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_has_coin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_has_coin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gs_dbs_guild_op_req_struct_new_member::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_member::coin() const {
  return coin_;
}
inline void gs_dbs_guild_op_req_struct_new_member::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_update_member

// required uint32 user_id = 1;
inline bool gs_dbs_guild_op_req_struct_update_member::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_member::user_id() const {
  return user_id_;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional .e_guild_position position = 2;
inline bool gs_dbs_guild_op_req_struct_update_member::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::e_guild_position gs_dbs_guild_op_req_struct_update_member::position() const {
  return static_cast< ::e_guild_position >(position_);
}
inline void gs_dbs_guild_op_req_struct_update_member::set_position(::e_guild_position value) {
  assert(::e_guild_position_IsValid(value));
  set_has_position();
  position_ = value;
}

// optional uint32 join_time = 3;
inline bool gs_dbs_guild_op_req_struct_update_member::has_join_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_has_join_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_has_join_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_join_time() {
  join_time_ = 0u;
  clear_has_join_time();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_member::join_time() const {
  return join_time_;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_join_time(::google::protobuf::uint32 value) {
  set_has_join_time();
  join_time_ = value;
}

// optional uint32 leave_time = 4;
inline bool gs_dbs_guild_op_req_struct_update_member::has_leave_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_has_leave_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_has_leave_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_leave_time() {
  leave_time_ = 0u;
  clear_has_leave_time();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_member::leave_time() const {
  return leave_time_;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_leave_time(::google::protobuf::uint32 value) {
  set_has_leave_time();
  leave_time_ = value;
}

// optional uint32 contribution_point = 5;
inline bool gs_dbs_guild_op_req_struct_update_member::has_contribution_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_has_contribution_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_has_contribution_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_contribution_point() {
  contribution_point_ = 0u;
  clear_has_contribution_point();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_member::contribution_point() const {
  return contribution_point_;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_contribution_point(::google::protobuf::uint32 value) {
  set_has_contribution_point();
  contribution_point_ = value;
}

// optional uint32 coin = 6;
inline bool gs_dbs_guild_op_req_struct_update_member::has_coin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_has_coin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_has_coin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_member::coin() const {
  return coin_;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// optional uint32 new_guild_id = 7;
inline bool gs_dbs_guild_op_req_struct_update_member::has_new_guild_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_has_new_guild_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_has_new_guild_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gs_dbs_guild_op_req_struct_update_member::clear_new_guild_id() {
  new_guild_id_ = 0u;
  clear_has_new_guild_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_member::new_guild_id() const {
  return new_guild_id_;
}
inline void gs_dbs_guild_op_req_struct_update_member::set_new_guild_id(::google::protobuf::uint32 value) {
  set_has_new_guild_id();
  new_guild_id_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_new_boss

// required uint32 guild_id = 1;
inline bool gs_dbs_guild_op_req_struct_new_boss::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_boss::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_new_boss::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_new_boss::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_boss::guild_id() const {
  return guild_id_;
}
inline void gs_dbs_guild_op_req_struct_new_boss::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// required uint32 position = 2;
inline bool gs_dbs_guild_op_req_struct_new_boss::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_boss::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_boss::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_boss::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_boss::position() const {
  return position_;
}
inline void gs_dbs_guild_op_req_struct_new_boss::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
}

// required uint32 lose_hp = 3;
inline bool gs_dbs_guild_op_req_struct_new_boss::has_lose_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_boss::set_has_lose_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_new_boss::clear_has_lose_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_new_boss::clear_lose_hp() {
  lose_hp_ = 0u;
  clear_has_lose_hp();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_boss::lose_hp() const {
  return lose_hp_;
}
inline void gs_dbs_guild_op_req_struct_new_boss::set_lose_hp(::google::protobuf::uint32 value) {
  set_has_lose_hp();
  lose_hp_ = value;
}

// required uint32 killer_user_id = 4;
inline bool gs_dbs_guild_op_req_struct_new_boss::has_killer_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_boss::set_has_killer_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_new_boss::clear_has_killer_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_new_boss::clear_killer_user_id() {
  killer_user_id_ = 0u;
  clear_has_killer_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_boss::killer_user_id() const {
  return killer_user_id_;
}
inline void gs_dbs_guild_op_req_struct_new_boss::set_killer_user_id(::google::protobuf::uint32 value) {
  set_has_killer_user_id();
  killer_user_id_ = value;
}

// required uint32 killed_num = 5;
inline bool gs_dbs_guild_op_req_struct_new_boss::has_killed_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_boss::set_has_killed_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_new_boss::clear_has_killed_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_new_boss::clear_killed_num() {
  killed_num_ = 0u;
  clear_has_killed_num();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_boss::killed_num() const {
  return killed_num_;
}
inline void gs_dbs_guild_op_req_struct_new_boss::set_killed_num(::google::protobuf::uint32 value) {
  set_has_killed_num();
  killed_num_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_update_boss

// required uint32 guild_id = 1;
inline bool gs_dbs_guild_op_req_struct_update_boss::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_boss::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_update_boss::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_update_boss::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_boss::guild_id() const {
  return guild_id_;
}
inline void gs_dbs_guild_op_req_struct_update_boss::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// required uint32 position = 2;
inline bool gs_dbs_guild_op_req_struct_update_boss::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_boss::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_update_boss::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_update_boss::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_boss::position() const {
  return position_;
}
inline void gs_dbs_guild_op_req_struct_update_boss::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
}

// optional uint32 lose_hp = 3;
inline bool gs_dbs_guild_op_req_struct_update_boss::has_lose_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_boss::set_has_lose_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_update_boss::clear_has_lose_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_update_boss::clear_lose_hp() {
  lose_hp_ = 0u;
  clear_has_lose_hp();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_boss::lose_hp() const {
  return lose_hp_;
}
inline void gs_dbs_guild_op_req_struct_update_boss::set_lose_hp(::google::protobuf::uint32 value) {
  set_has_lose_hp();
  lose_hp_ = value;
}

// optional uint32 killer_user_id = 4;
inline bool gs_dbs_guild_op_req_struct_update_boss::has_killer_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_boss::set_has_killer_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_update_boss::clear_has_killer_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_update_boss::clear_killer_user_id() {
  killer_user_id_ = 0u;
  clear_has_killer_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_boss::killer_user_id() const {
  return killer_user_id_;
}
inline void gs_dbs_guild_op_req_struct_update_boss::set_killer_user_id(::google::protobuf::uint32 value) {
  set_has_killer_user_id();
  killer_user_id_ = value;
}

// optional uint32 killed_num = 5;
inline bool gs_dbs_guild_op_req_struct_update_boss::has_killed_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_guild_op_req_struct_update_boss::set_has_killed_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_update_boss::clear_has_killed_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_update_boss::clear_killed_num() {
  killed_num_ = 0u;
  clear_has_killed_num();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_update_boss::killed_num() const {
  return killed_num_;
}
inline void gs_dbs_guild_op_req_struct_update_boss::set_killed_num(::google::protobuf::uint32 value) {
  set_has_killed_num();
  killed_num_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_new_boss_attacker

// required uint32 user_id = 1;
inline bool gs_dbs_guild_op_req_struct_new_boss_attacker::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_boss_attacker::user_id() const {
  return user_id_;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required uint32 boss_position = 2;
inline bool gs_dbs_guild_op_req_struct_new_boss_attacker::has_boss_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::set_has_boss_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::clear_has_boss_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::clear_boss_position() {
  boss_position_ = 0u;
  clear_has_boss_position();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_boss_attacker::boss_position() const {
  return boss_position_;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::set_boss_position(::google::protobuf::uint32 value) {
  set_has_boss_position();
  boss_position_ = value;
}

// required uint32 boss_lose_hp = 3;
inline bool gs_dbs_guild_op_req_struct_new_boss_attacker::has_boss_lose_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::set_has_boss_lose_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::clear_has_boss_lose_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::clear_boss_lose_hp() {
  boss_lose_hp_ = 0u;
  clear_has_boss_lose_hp();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_boss_attacker::boss_lose_hp() const {
  return boss_lose_hp_;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::set_boss_lose_hp(::google::protobuf::uint32 value) {
  set_has_boss_lose_hp();
  boss_lose_hp_ = value;
}

// required uint32 last_reset_time = 4;
inline bool gs_dbs_guild_op_req_struct_new_boss_attacker::has_last_reset_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::set_has_last_reset_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::clear_has_last_reset_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::clear_last_reset_time() {
  last_reset_time_ = 0u;
  clear_has_last_reset_time();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_boss_attacker::last_reset_time() const {
  return last_reset_time_;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::set_last_reset_time(::google::protobuf::uint32 value) {
  set_has_last_reset_time();
  last_reset_time_ = value;
}

// required uint32 last_day_reset_num = 5;
inline bool gs_dbs_guild_op_req_struct_new_boss_attacker::has_last_day_reset_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::set_has_last_day_reset_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::clear_has_last_day_reset_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::clear_last_day_reset_num() {
  last_day_reset_num_ = 0u;
  clear_has_last_day_reset_num();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_boss_attacker::last_day_reset_num() const {
  return last_day_reset_num_;
}
inline void gs_dbs_guild_op_req_struct_new_boss_attacker::set_last_day_reset_num(::google::protobuf::uint32 value) {
  set_has_last_day_reset_num();
  last_day_reset_num_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_delete_boss_attacker

// required .gs_dbs_guild_op_req.struct_delete_boss_attacker.EOPType op_type = 1;
inline bool gs_dbs_guild_op_req_struct_delete_boss_attacker::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType gs_dbs_guild_op_req_struct_delete_boss_attacker::op_type() const {
  return static_cast< ::gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType >(op_type_);
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::set_op_type(::gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType value) {
  assert(::gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// optional uint32 user_id = 2;
inline bool gs_dbs_guild_op_req_struct_delete_boss_attacker::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_delete_boss_attacker::user_id() const {
  return user_id_;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 boss_position = 3;
inline bool gs_dbs_guild_op_req_struct_delete_boss_attacker::has_boss_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::set_has_boss_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::clear_has_boss_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::clear_boss_position() {
  boss_position_ = 0u;
  clear_has_boss_position();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_delete_boss_attacker::boss_position() const {
  return boss_position_;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::set_boss_position(::google::protobuf::uint32 value) {
  set_has_boss_position();
  boss_position_ = value;
}

// optional uint32 guild_id = 4;
inline bool gs_dbs_guild_op_req_struct_delete_boss_attacker::has_guild_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::set_has_guild_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_delete_boss_attacker::guild_id() const {
  return guild_id_;
}
inline void gs_dbs_guild_op_req_struct_delete_boss_attacker::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_new_dead_hero

// required uint32 user_id = 1;
inline bool gs_dbs_guild_op_req_struct_new_dead_hero::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_dead_hero::user_id() const {
  return user_id_;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required uint32 boss_position = 2;
inline bool gs_dbs_guild_op_req_struct_new_dead_hero::has_boss_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::set_has_boss_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::clear_has_boss_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::clear_boss_position() {
  boss_position_ = 0u;
  clear_has_boss_position();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_dead_hero::boss_position() const {
  return boss_position_;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::set_boss_position(::google::protobuf::uint32 value) {
  set_has_boss_position();
  boss_position_ = value;
}

// repeated uint32 heros_id = 3;
inline int gs_dbs_guild_op_req_struct_new_dead_hero::heros_id_size() const {
  return heros_id_.size();
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::clear_heros_id() {
  heros_id_.Clear();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_dead_hero::heros_id(int index) const {
  return heros_id_.Get(index);
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::set_heros_id(int index, ::google::protobuf::uint32 value) {
  heros_id_.Set(index, value);
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::add_heros_id(::google::protobuf::uint32 value) {
  heros_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
gs_dbs_guild_op_req_struct_new_dead_hero::heros_id() const {
  return heros_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
gs_dbs_guild_op_req_struct_new_dead_hero::mutable_heros_id() {
  return &heros_id_;
}

// required uint32 dead_time = 4;
inline bool gs_dbs_guild_op_req_struct_new_dead_hero::has_dead_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::set_has_dead_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::clear_has_dead_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::clear_dead_time() {
  dead_time_ = 0u;
  clear_has_dead_time();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_new_dead_hero::dead_time() const {
  return dead_time_;
}
inline void gs_dbs_guild_op_req_struct_new_dead_hero::set_dead_time(::google::protobuf::uint32 value) {
  set_has_dead_time();
  dead_time_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req_struct_delete_dead_hero

// required .gs_dbs_guild_op_req.struct_delete_dead_hero.EOPType op_type = 1;
inline bool gs_dbs_guild_op_req_struct_delete_dead_hero::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::clear_op_type() {
  op_type_ = 1;
  clear_has_op_type();
}
inline ::gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType gs_dbs_guild_op_req_struct_delete_dead_hero::op_type() const {
  return static_cast< ::gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType >(op_type_);
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::set_op_type(::gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType value) {
  assert(::gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_IsValid(value));
  set_has_op_type();
  op_type_ = value;
}

// required uint32 boss_position = 2;
inline bool gs_dbs_guild_op_req_struct_delete_dead_hero::has_boss_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::set_has_boss_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::clear_has_boss_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::clear_boss_position() {
  boss_position_ = 0u;
  clear_has_boss_position();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_delete_dead_hero::boss_position() const {
  return boss_position_;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::set_boss_position(::google::protobuf::uint32 value) {
  set_has_boss_position();
  boss_position_ = value;
}

// optional uint32 user_id = 3;
inline bool gs_dbs_guild_op_req_struct_delete_dead_hero::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_delete_dead_hero::user_id() const {
  return user_id_;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 guild_id = 4;
inline bool gs_dbs_guild_op_req_struct_delete_dead_hero::has_guild_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::set_has_guild_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::clear_guild_id() {
  guild_id_ = 0u;
  clear_has_guild_id();
}
inline ::google::protobuf::uint32 gs_dbs_guild_op_req_struct_delete_dead_hero::guild_id() const {
  return guild_id_;
}
inline void gs_dbs_guild_op_req_struct_delete_dead_hero::set_guild_id(::google::protobuf::uint32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// -------------------------------------------------------------------

// gs_dbs_guild_op_req

// optional .gs_dbs_guild_op_req.struct_new_guild new_guild = 1;
inline bool gs_dbs_guild_op_req::has_new_guild() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_new_guild() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_dbs_guild_op_req::clear_has_new_guild() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_dbs_guild_op_req::clear_new_guild() {
  if (new_guild_ != NULL) new_guild_->::gs_dbs_guild_op_req_struct_new_guild::Clear();
  clear_has_new_guild();
}
inline const ::gs_dbs_guild_op_req_struct_new_guild& gs_dbs_guild_op_req::new_guild() const {
  return new_guild_ != NULL ? *new_guild_ : *default_instance_->new_guild_;
}
inline ::gs_dbs_guild_op_req_struct_new_guild* gs_dbs_guild_op_req::mutable_new_guild() {
  set_has_new_guild();
  if (new_guild_ == NULL) new_guild_ = new ::gs_dbs_guild_op_req_struct_new_guild;
  return new_guild_;
}
inline ::gs_dbs_guild_op_req_struct_new_guild* gs_dbs_guild_op_req::release_new_guild() {
  clear_has_new_guild();
  ::gs_dbs_guild_op_req_struct_new_guild* temp = new_guild_;
  new_guild_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_new_guild(::gs_dbs_guild_op_req_struct_new_guild* new_guild) {
  delete new_guild_;
  new_guild_ = new_guild;
  if (new_guild) {
    set_has_new_guild();
  } else {
    clear_has_new_guild();
  }
}

// optional .gs_dbs_guild_op_req.struct_update_guild update_guild = 2;
inline bool gs_dbs_guild_op_req::has_update_guild() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_update_guild() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_dbs_guild_op_req::clear_has_update_guild() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_dbs_guild_op_req::clear_update_guild() {
  if (update_guild_ != NULL) update_guild_->::gs_dbs_guild_op_req_struct_update_guild::Clear();
  clear_has_update_guild();
}
inline const ::gs_dbs_guild_op_req_struct_update_guild& gs_dbs_guild_op_req::update_guild() const {
  return update_guild_ != NULL ? *update_guild_ : *default_instance_->update_guild_;
}
inline ::gs_dbs_guild_op_req_struct_update_guild* gs_dbs_guild_op_req::mutable_update_guild() {
  set_has_update_guild();
  if (update_guild_ == NULL) update_guild_ = new ::gs_dbs_guild_op_req_struct_update_guild;
  return update_guild_;
}
inline ::gs_dbs_guild_op_req_struct_update_guild* gs_dbs_guild_op_req::release_update_guild() {
  clear_has_update_guild();
  ::gs_dbs_guild_op_req_struct_update_guild* temp = update_guild_;
  update_guild_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_update_guild(::gs_dbs_guild_op_req_struct_update_guild* update_guild) {
  delete update_guild_;
  update_guild_ = update_guild;
  if (update_guild) {
    set_has_update_guild();
  } else {
    clear_has_update_guild();
  }
}

// optional .gs_dbs_guild_op_req.struct_delete_guild delete_guild = 3;
inline bool gs_dbs_guild_op_req::has_delete_guild() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_delete_guild() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gs_dbs_guild_op_req::clear_has_delete_guild() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gs_dbs_guild_op_req::clear_delete_guild() {
  if (delete_guild_ != NULL) delete_guild_->::gs_dbs_guild_op_req_struct_delete_guild::Clear();
  clear_has_delete_guild();
}
inline const ::gs_dbs_guild_op_req_struct_delete_guild& gs_dbs_guild_op_req::delete_guild() const {
  return delete_guild_ != NULL ? *delete_guild_ : *default_instance_->delete_guild_;
}
inline ::gs_dbs_guild_op_req_struct_delete_guild* gs_dbs_guild_op_req::mutable_delete_guild() {
  set_has_delete_guild();
  if (delete_guild_ == NULL) delete_guild_ = new ::gs_dbs_guild_op_req_struct_delete_guild;
  return delete_guild_;
}
inline ::gs_dbs_guild_op_req_struct_delete_guild* gs_dbs_guild_op_req::release_delete_guild() {
  clear_has_delete_guild();
  ::gs_dbs_guild_op_req_struct_delete_guild* temp = delete_guild_;
  delete_guild_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_delete_guild(::gs_dbs_guild_op_req_struct_delete_guild* delete_guild) {
  delete delete_guild_;
  delete_guild_ = delete_guild;
  if (delete_guild) {
    set_has_delete_guild();
  } else {
    clear_has_delete_guild();
  }
}

// optional .gs_dbs_guild_op_req.struct_new_apply new_apply = 4;
inline bool gs_dbs_guild_op_req::has_new_apply() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_new_apply() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gs_dbs_guild_op_req::clear_has_new_apply() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gs_dbs_guild_op_req::clear_new_apply() {
  if (new_apply_ != NULL) new_apply_->::gs_dbs_guild_op_req_struct_new_apply::Clear();
  clear_has_new_apply();
}
inline const ::gs_dbs_guild_op_req_struct_new_apply& gs_dbs_guild_op_req::new_apply() const {
  return new_apply_ != NULL ? *new_apply_ : *default_instance_->new_apply_;
}
inline ::gs_dbs_guild_op_req_struct_new_apply* gs_dbs_guild_op_req::mutable_new_apply() {
  set_has_new_apply();
  if (new_apply_ == NULL) new_apply_ = new ::gs_dbs_guild_op_req_struct_new_apply;
  return new_apply_;
}
inline ::gs_dbs_guild_op_req_struct_new_apply* gs_dbs_guild_op_req::release_new_apply() {
  clear_has_new_apply();
  ::gs_dbs_guild_op_req_struct_new_apply* temp = new_apply_;
  new_apply_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_new_apply(::gs_dbs_guild_op_req_struct_new_apply* new_apply) {
  delete new_apply_;
  new_apply_ = new_apply;
  if (new_apply) {
    set_has_new_apply();
  } else {
    clear_has_new_apply();
  }
}

// optional .gs_dbs_guild_op_req.struct_delete_apply delete_apply = 5;
inline bool gs_dbs_guild_op_req::has_delete_apply() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_delete_apply() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gs_dbs_guild_op_req::clear_has_delete_apply() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gs_dbs_guild_op_req::clear_delete_apply() {
  if (delete_apply_ != NULL) delete_apply_->::gs_dbs_guild_op_req_struct_delete_apply::Clear();
  clear_has_delete_apply();
}
inline const ::gs_dbs_guild_op_req_struct_delete_apply& gs_dbs_guild_op_req::delete_apply() const {
  return delete_apply_ != NULL ? *delete_apply_ : *default_instance_->delete_apply_;
}
inline ::gs_dbs_guild_op_req_struct_delete_apply* gs_dbs_guild_op_req::mutable_delete_apply() {
  set_has_delete_apply();
  if (delete_apply_ == NULL) delete_apply_ = new ::gs_dbs_guild_op_req_struct_delete_apply;
  return delete_apply_;
}
inline ::gs_dbs_guild_op_req_struct_delete_apply* gs_dbs_guild_op_req::release_delete_apply() {
  clear_has_delete_apply();
  ::gs_dbs_guild_op_req_struct_delete_apply* temp = delete_apply_;
  delete_apply_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_delete_apply(::gs_dbs_guild_op_req_struct_delete_apply* delete_apply) {
  delete delete_apply_;
  delete_apply_ = delete_apply;
  if (delete_apply) {
    set_has_delete_apply();
  } else {
    clear_has_delete_apply();
  }
}

// optional .gs_dbs_guild_op_req.struct_new_member new_member = 6;
inline bool gs_dbs_guild_op_req::has_new_member() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_new_member() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gs_dbs_guild_op_req::clear_has_new_member() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gs_dbs_guild_op_req::clear_new_member() {
  if (new_member_ != NULL) new_member_->::gs_dbs_guild_op_req_struct_new_member::Clear();
  clear_has_new_member();
}
inline const ::gs_dbs_guild_op_req_struct_new_member& gs_dbs_guild_op_req::new_member() const {
  return new_member_ != NULL ? *new_member_ : *default_instance_->new_member_;
}
inline ::gs_dbs_guild_op_req_struct_new_member* gs_dbs_guild_op_req::mutable_new_member() {
  set_has_new_member();
  if (new_member_ == NULL) new_member_ = new ::gs_dbs_guild_op_req_struct_new_member;
  return new_member_;
}
inline ::gs_dbs_guild_op_req_struct_new_member* gs_dbs_guild_op_req::release_new_member() {
  clear_has_new_member();
  ::gs_dbs_guild_op_req_struct_new_member* temp = new_member_;
  new_member_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_new_member(::gs_dbs_guild_op_req_struct_new_member* new_member) {
  delete new_member_;
  new_member_ = new_member;
  if (new_member) {
    set_has_new_member();
  } else {
    clear_has_new_member();
  }
}

// repeated .gs_dbs_guild_op_req.struct_update_member update_members = 7;
inline int gs_dbs_guild_op_req::update_members_size() const {
  return update_members_.size();
}
inline void gs_dbs_guild_op_req::clear_update_members() {
  update_members_.Clear();
}
inline const ::gs_dbs_guild_op_req_struct_update_member& gs_dbs_guild_op_req::update_members(int index) const {
  return update_members_.Get(index);
}
inline ::gs_dbs_guild_op_req_struct_update_member* gs_dbs_guild_op_req::mutable_update_members(int index) {
  return update_members_.Mutable(index);
}
inline ::gs_dbs_guild_op_req_struct_update_member* gs_dbs_guild_op_req::add_update_members() {
  return update_members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gs_dbs_guild_op_req_struct_update_member >&
gs_dbs_guild_op_req::update_members() const {
  return update_members_;
}
inline ::google::protobuf::RepeatedPtrField< ::gs_dbs_guild_op_req_struct_update_member >*
gs_dbs_guild_op_req::mutable_update_members() {
  return &update_members_;
}

// optional .gs_dbs_guild_op_req.struct_new_boss new_boss = 9;
inline bool gs_dbs_guild_op_req::has_new_boss() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_new_boss() {
  _has_bits_[0] |= 0x00000080u;
}
inline void gs_dbs_guild_op_req::clear_has_new_boss() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void gs_dbs_guild_op_req::clear_new_boss() {
  if (new_boss_ != NULL) new_boss_->::gs_dbs_guild_op_req_struct_new_boss::Clear();
  clear_has_new_boss();
}
inline const ::gs_dbs_guild_op_req_struct_new_boss& gs_dbs_guild_op_req::new_boss() const {
  return new_boss_ != NULL ? *new_boss_ : *default_instance_->new_boss_;
}
inline ::gs_dbs_guild_op_req_struct_new_boss* gs_dbs_guild_op_req::mutable_new_boss() {
  set_has_new_boss();
  if (new_boss_ == NULL) new_boss_ = new ::gs_dbs_guild_op_req_struct_new_boss;
  return new_boss_;
}
inline ::gs_dbs_guild_op_req_struct_new_boss* gs_dbs_guild_op_req::release_new_boss() {
  clear_has_new_boss();
  ::gs_dbs_guild_op_req_struct_new_boss* temp = new_boss_;
  new_boss_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_new_boss(::gs_dbs_guild_op_req_struct_new_boss* new_boss) {
  delete new_boss_;
  new_boss_ = new_boss;
  if (new_boss) {
    set_has_new_boss();
  } else {
    clear_has_new_boss();
  }
}

// optional .gs_dbs_guild_op_req.struct_update_boss update_boss = 10;
inline bool gs_dbs_guild_op_req::has_update_boss() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_update_boss() {
  _has_bits_[0] |= 0x00000100u;
}
inline void gs_dbs_guild_op_req::clear_has_update_boss() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void gs_dbs_guild_op_req::clear_update_boss() {
  if (update_boss_ != NULL) update_boss_->::gs_dbs_guild_op_req_struct_update_boss::Clear();
  clear_has_update_boss();
}
inline const ::gs_dbs_guild_op_req_struct_update_boss& gs_dbs_guild_op_req::update_boss() const {
  return update_boss_ != NULL ? *update_boss_ : *default_instance_->update_boss_;
}
inline ::gs_dbs_guild_op_req_struct_update_boss* gs_dbs_guild_op_req::mutable_update_boss() {
  set_has_update_boss();
  if (update_boss_ == NULL) update_boss_ = new ::gs_dbs_guild_op_req_struct_update_boss;
  return update_boss_;
}
inline ::gs_dbs_guild_op_req_struct_update_boss* gs_dbs_guild_op_req::release_update_boss() {
  clear_has_update_boss();
  ::gs_dbs_guild_op_req_struct_update_boss* temp = update_boss_;
  update_boss_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_update_boss(::gs_dbs_guild_op_req_struct_update_boss* update_boss) {
  delete update_boss_;
  update_boss_ = update_boss;
  if (update_boss) {
    set_has_update_boss();
  } else {
    clear_has_update_boss();
  }
}

// optional .gs_dbs_guild_op_req.struct_new_boss_attacker new_boss_attacker = 11;
inline bool gs_dbs_guild_op_req::has_new_boss_attacker() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_new_boss_attacker() {
  _has_bits_[0] |= 0x00000200u;
}
inline void gs_dbs_guild_op_req::clear_has_new_boss_attacker() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void gs_dbs_guild_op_req::clear_new_boss_attacker() {
  if (new_boss_attacker_ != NULL) new_boss_attacker_->::gs_dbs_guild_op_req_struct_new_boss_attacker::Clear();
  clear_has_new_boss_attacker();
}
inline const ::gs_dbs_guild_op_req_struct_new_boss_attacker& gs_dbs_guild_op_req::new_boss_attacker() const {
  return new_boss_attacker_ != NULL ? *new_boss_attacker_ : *default_instance_->new_boss_attacker_;
}
inline ::gs_dbs_guild_op_req_struct_new_boss_attacker* gs_dbs_guild_op_req::mutable_new_boss_attacker() {
  set_has_new_boss_attacker();
  if (new_boss_attacker_ == NULL) new_boss_attacker_ = new ::gs_dbs_guild_op_req_struct_new_boss_attacker;
  return new_boss_attacker_;
}
inline ::gs_dbs_guild_op_req_struct_new_boss_attacker* gs_dbs_guild_op_req::release_new_boss_attacker() {
  clear_has_new_boss_attacker();
  ::gs_dbs_guild_op_req_struct_new_boss_attacker* temp = new_boss_attacker_;
  new_boss_attacker_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_new_boss_attacker(::gs_dbs_guild_op_req_struct_new_boss_attacker* new_boss_attacker) {
  delete new_boss_attacker_;
  new_boss_attacker_ = new_boss_attacker;
  if (new_boss_attacker) {
    set_has_new_boss_attacker();
  } else {
    clear_has_new_boss_attacker();
  }
}

// optional .gs_dbs_guild_op_req.struct_delete_boss_attacker delete_boss_attacker = 13;
inline bool gs_dbs_guild_op_req::has_delete_boss_attacker() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_delete_boss_attacker() {
  _has_bits_[0] |= 0x00000400u;
}
inline void gs_dbs_guild_op_req::clear_has_delete_boss_attacker() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void gs_dbs_guild_op_req::clear_delete_boss_attacker() {
  if (delete_boss_attacker_ != NULL) delete_boss_attacker_->::gs_dbs_guild_op_req_struct_delete_boss_attacker::Clear();
  clear_has_delete_boss_attacker();
}
inline const ::gs_dbs_guild_op_req_struct_delete_boss_attacker& gs_dbs_guild_op_req::delete_boss_attacker() const {
  return delete_boss_attacker_ != NULL ? *delete_boss_attacker_ : *default_instance_->delete_boss_attacker_;
}
inline ::gs_dbs_guild_op_req_struct_delete_boss_attacker* gs_dbs_guild_op_req::mutable_delete_boss_attacker() {
  set_has_delete_boss_attacker();
  if (delete_boss_attacker_ == NULL) delete_boss_attacker_ = new ::gs_dbs_guild_op_req_struct_delete_boss_attacker;
  return delete_boss_attacker_;
}
inline ::gs_dbs_guild_op_req_struct_delete_boss_attacker* gs_dbs_guild_op_req::release_delete_boss_attacker() {
  clear_has_delete_boss_attacker();
  ::gs_dbs_guild_op_req_struct_delete_boss_attacker* temp = delete_boss_attacker_;
  delete_boss_attacker_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_delete_boss_attacker(::gs_dbs_guild_op_req_struct_delete_boss_attacker* delete_boss_attacker) {
  delete delete_boss_attacker_;
  delete_boss_attacker_ = delete_boss_attacker;
  if (delete_boss_attacker) {
    set_has_delete_boss_attacker();
  } else {
    clear_has_delete_boss_attacker();
  }
}

// optional .gs_dbs_guild_op_req.struct_new_dead_hero new_dead_hero = 14;
inline bool gs_dbs_guild_op_req::has_new_dead_hero() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_new_dead_hero() {
  _has_bits_[0] |= 0x00000800u;
}
inline void gs_dbs_guild_op_req::clear_has_new_dead_hero() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void gs_dbs_guild_op_req::clear_new_dead_hero() {
  if (new_dead_hero_ != NULL) new_dead_hero_->::gs_dbs_guild_op_req_struct_new_dead_hero::Clear();
  clear_has_new_dead_hero();
}
inline const ::gs_dbs_guild_op_req_struct_new_dead_hero& gs_dbs_guild_op_req::new_dead_hero() const {
  return new_dead_hero_ != NULL ? *new_dead_hero_ : *default_instance_->new_dead_hero_;
}
inline ::gs_dbs_guild_op_req_struct_new_dead_hero* gs_dbs_guild_op_req::mutable_new_dead_hero() {
  set_has_new_dead_hero();
  if (new_dead_hero_ == NULL) new_dead_hero_ = new ::gs_dbs_guild_op_req_struct_new_dead_hero;
  return new_dead_hero_;
}
inline ::gs_dbs_guild_op_req_struct_new_dead_hero* gs_dbs_guild_op_req::release_new_dead_hero() {
  clear_has_new_dead_hero();
  ::gs_dbs_guild_op_req_struct_new_dead_hero* temp = new_dead_hero_;
  new_dead_hero_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_new_dead_hero(::gs_dbs_guild_op_req_struct_new_dead_hero* new_dead_hero) {
  delete new_dead_hero_;
  new_dead_hero_ = new_dead_hero;
  if (new_dead_hero) {
    set_has_new_dead_hero();
  } else {
    clear_has_new_dead_hero();
  }
}

// optional .gs_dbs_guild_op_req.struct_delete_dead_hero delete_dead_hero = 15;
inline bool gs_dbs_guild_op_req::has_delete_dead_hero() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void gs_dbs_guild_op_req::set_has_delete_dead_hero() {
  _has_bits_[0] |= 0x00001000u;
}
inline void gs_dbs_guild_op_req::clear_has_delete_dead_hero() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void gs_dbs_guild_op_req::clear_delete_dead_hero() {
  if (delete_dead_hero_ != NULL) delete_dead_hero_->::gs_dbs_guild_op_req_struct_delete_dead_hero::Clear();
  clear_has_delete_dead_hero();
}
inline const ::gs_dbs_guild_op_req_struct_delete_dead_hero& gs_dbs_guild_op_req::delete_dead_hero() const {
  return delete_dead_hero_ != NULL ? *delete_dead_hero_ : *default_instance_->delete_dead_hero_;
}
inline ::gs_dbs_guild_op_req_struct_delete_dead_hero* gs_dbs_guild_op_req::mutable_delete_dead_hero() {
  set_has_delete_dead_hero();
  if (delete_dead_hero_ == NULL) delete_dead_hero_ = new ::gs_dbs_guild_op_req_struct_delete_dead_hero;
  return delete_dead_hero_;
}
inline ::gs_dbs_guild_op_req_struct_delete_dead_hero* gs_dbs_guild_op_req::release_delete_dead_hero() {
  clear_has_delete_dead_hero();
  ::gs_dbs_guild_op_req_struct_delete_dead_hero* temp = delete_dead_hero_;
  delete_dead_hero_ = NULL;
  return temp;
}
inline void gs_dbs_guild_op_req::set_allocated_delete_dead_hero(::gs_dbs_guild_op_req_struct_delete_dead_hero* delete_dead_hero) {
  delete delete_dead_hero_;
  delete_dead_hero_ = delete_dead_hero;
  if (delete_dead_hero) {
    set_has_delete_dead_hero();
  } else {
    clear_has_delete_dead_hero();
  }
}

// -------------------------------------------------------------------

// dbs_gs_guild_op_res

// required int32 error_code = 1;
inline bool dbs_gs_guild_op_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dbs_gs_guild_op_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dbs_gs_guild_op_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dbs_gs_guild_op_res::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 dbs_gs_guild_op_res::error_code() const {
  return error_code_;
}
inline void dbs_gs_guild_op_res::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::db_user_mission_event_MISSION_EVENT_TYPE>() {
  return ::db_user_mission_event_MISSION_EVENT_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::db_user_mission_event_MISSION_EVENT_SUB_TYPE>() {
  return ::db_user_mission_event_MISSION_EVENT_SUB_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType>() {
  return ::gs_dbs_user_info_op_req_struct_op_shop_ESHOPOPType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE>() {
  return ::gs_dbs_user_info_op_req_struct_op_friend_OP_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE>() {
  return ::gs_dbs_user_info_op_req_struct_op_crusade_CRUSADE_OP_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gs_dbs_user_info_op_req_EOPType>() {
  return ::gs_dbs_user_info_op_req_EOPType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gs_dbs_user_friend_op_req_OP_TYPE>() {
  return ::gs_dbs_user_friend_op_req_OP_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gs_dbs_friend_offline_req_OP_TYPE>() {
  return ::gs_dbs_friend_offline_req_OP_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gs_dbs_guild_op_req_struct_delete_apply_EOPType>() {
  return ::gs_dbs_guild_op_req_struct_delete_apply_EOPType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType>() {
  return ::gs_dbs_guild_op_req_struct_delete_boss_attacker_EOPType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType>() {
  return ::gs_dbs_guild_op_req_struct_delete_dead_hero_EOPType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_msg_gs_dbs>() {
  return ::e_msg_gs_dbs_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_msg_dbs_gs>() {
  return ::e_msg_dbs_gs_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_dbsgs_errorcode>() {
  return ::e_dbsgs_errorcode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dbs_5fgs_5fproto_2eproto__INCLUDED
