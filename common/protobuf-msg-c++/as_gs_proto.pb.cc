// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: as_gs_proto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "as_gs_proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* as_gs_enter_area_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  as_gs_enter_area_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* gs_as_enter_area_res_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  gs_as_enter_area_res_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* e_msg_as_gs_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_msg_gs_as_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_asgs_errorcode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_as_5fgs_5fproto_2eproto() {
  protobuf_AddDesc_as_5fgs_5fproto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "as_gs_proto.proto");
  GOOGLE_CHECK(file != NULL);
  as_gs_enter_area_req_descriptor_ = file->message_type(0);
  static const int as_gs_enter_area_req_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(as_gs_enter_area_req, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(as_gs_enter_area_req, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(as_gs_enter_area_req, user_id_),
  };
  as_gs_enter_area_req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      as_gs_enter_area_req_descriptor_,
      as_gs_enter_area_req::default_instance_,
      as_gs_enter_area_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(as_gs_enter_area_req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(as_gs_enter_area_req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(as_gs_enter_area_req));
  gs_as_enter_area_res_descriptor_ = file->message_type(1);
  static const int gs_as_enter_area_res_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs_as_enter_area_res, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs_as_enter_area_res, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs_as_enter_area_res, token_),
  };
  gs_as_enter_area_res_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      gs_as_enter_area_res_descriptor_,
      gs_as_enter_area_res::default_instance_,
      gs_as_enter_area_res_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs_as_enter_area_res, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs_as_enter_area_res, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(gs_as_enter_area_res));
  e_msg_as_gs_descriptor_ = file->enum_type(0);
  e_msg_gs_as_descriptor_ = file->enum_type(1);
  e_asgs_errorcode_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_as_5fgs_5fproto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    as_gs_enter_area_req_descriptor_, &as_gs_enter_area_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    gs_as_enter_area_res_descriptor_, &gs_as_enter_area_res::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_as_5fgs_5fproto_2eproto() {
  delete as_gs_enter_area_req::default_instance_;
  delete as_gs_enter_area_req_reflection_;
  delete gs_as_enter_area_res::default_instance_;
  delete gs_as_enter_area_res_reflection_;
}

void protobuf_AddDesc_as_5fgs_5fproto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021as_gs_proto.proto\"I\n\024as_gs_enter_area_"
    "req\022\021\n\tclient_id\030\001 \002(\014\022\r\n\005token\030\002 \002(\014\022\017\n"
    "\007user_id\030\003 \002(\005\"L\n\024gs_as_enter_area_res\022\022"
    "\n\nerror_code\030\001 \002(\005\022\021\n\tclient_id\030\002 \002(\014\022\r\n"
    "\005token\030\003 \001(\014*W\n\013e_msg_as_gs\022\023\n\017e_msg_as_"
    "gs_min\020\000\022\036\n\032e_msg_as_gs_enter_area_req\020\001"
    "\022\023\n\017e_msg_as_gs_max\020\002*W\n\013e_msg_gs_as\022\023\n\017"
    "e_msg_gs_as_min\020\000\022\036\n\032e_msg_gs_as_enter_a"
    "rea_res\020\001\022\023\n\017e_msg_gs_as_max\020\002*\310\001\n\020e_asg"
    "s_errorcode\022\030\n\024e_asgs_errorcode_min\020\000\022\034\n"
    "\030e_asgs_errorcode_success\020\001\022!\n\035e_asgs_er"
    "rorcode_unkown_error\020\002\022\032\n\026e_asgs_errorco"
    "de_token\020\003\022#\n\037e_asgs_errorcode_has_same_"
    "token\020\004\022\030\n\024e_asgs_errorcode_max\020\005", 553);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "as_gs_proto.proto", &protobuf_RegisterTypes);
  as_gs_enter_area_req::default_instance_ = new as_gs_enter_area_req();
  gs_as_enter_area_res::default_instance_ = new gs_as_enter_area_res();
  as_gs_enter_area_req::default_instance_->InitAsDefaultInstance();
  gs_as_enter_area_res::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_as_5fgs_5fproto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_as_5fgs_5fproto_2eproto {
  StaticDescriptorInitializer_as_5fgs_5fproto_2eproto() {
    protobuf_AddDesc_as_5fgs_5fproto_2eproto();
  }
} static_descriptor_initializer_as_5fgs_5fproto_2eproto_;
const ::google::protobuf::EnumDescriptor* e_msg_as_gs_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_msg_as_gs_descriptor_;
}
bool e_msg_as_gs_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_msg_gs_as_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_msg_gs_as_descriptor_;
}
bool e_msg_gs_as_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_asgs_errorcode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_asgs_errorcode_descriptor_;
}
bool e_asgs_errorcode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int as_gs_enter_area_req::kClientIdFieldNumber;
const int as_gs_enter_area_req::kTokenFieldNumber;
const int as_gs_enter_area_req::kUserIdFieldNumber;
#endif  // !_MSC_VER

as_gs_enter_area_req::as_gs_enter_area_req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void as_gs_enter_area_req::InitAsDefaultInstance() {
}

as_gs_enter_area_req::as_gs_enter_area_req(const as_gs_enter_area_req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void as_gs_enter_area_req::SharedCtor() {
  _cached_size_ = 0;
  client_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  user_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

as_gs_enter_area_req::~as_gs_enter_area_req() {
  SharedDtor();
}

void as_gs_enter_area_req::SharedDtor() {
  if (client_id_ != &::google::protobuf::internal::kEmptyString) {
    delete client_id_;
  }
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (this != default_instance_) {
  }
}

void as_gs_enter_area_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* as_gs_enter_area_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return as_gs_enter_area_req_descriptor_;
}

const as_gs_enter_area_req& as_gs_enter_area_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_as_5fgs_5fproto_2eproto();
  return *default_instance_;
}

as_gs_enter_area_req* as_gs_enter_area_req::default_instance_ = NULL;

as_gs_enter_area_req* as_gs_enter_area_req::New() const {
  return new as_gs_enter_area_req;
}

void as_gs_enter_area_req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_client_id()) {
      if (client_id_ != &::google::protobuf::internal::kEmptyString) {
        client_id_->clear();
      }
    }
    if (has_token()) {
      if (token_ != &::google::protobuf::internal::kEmptyString) {
        token_->clear();
      }
    }
    user_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool as_gs_enter_area_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes client_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_token;
        break;
      }

      // required bytes token = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_user_id;
        break;
      }

      // required int32 user_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void as_gs_enter_area_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bytes client_id = 1;
  if (has_client_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->client_id(), output);
  }

  // required bytes token = 2;
  if (has_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->token(), output);
  }

  // required int32 user_id = 3;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->user_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* as_gs_enter_area_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes client_id = 1;
  if (has_client_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->client_id(), target);
  }

  // required bytes token = 2;
  if (has_token()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->token(), target);
  }

  // required int32 user_id = 3;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->user_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int as_gs_enter_area_req::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes client_id = 1;
    if (has_client_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->client_id());
    }

    // required bytes token = 2;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // required int32 user_id = 3;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void as_gs_enter_area_req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const as_gs_enter_area_req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const as_gs_enter_area_req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void as_gs_enter_area_req::MergeFrom(const as_gs_enter_area_req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_client_id()) {
      set_client_id(from.client_id());
    }
    if (from.has_token()) {
      set_token(from.token());
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void as_gs_enter_area_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void as_gs_enter_area_req::CopyFrom(const as_gs_enter_area_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool as_gs_enter_area_req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void as_gs_enter_area_req::Swap(as_gs_enter_area_req* other) {
  if (other != this) {
    std::swap(client_id_, other->client_id_);
    std::swap(token_, other->token_);
    std::swap(user_id_, other->user_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata as_gs_enter_area_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = as_gs_enter_area_req_descriptor_;
  metadata.reflection = as_gs_enter_area_req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int gs_as_enter_area_res::kErrorCodeFieldNumber;
const int gs_as_enter_area_res::kClientIdFieldNumber;
const int gs_as_enter_area_res::kTokenFieldNumber;
#endif  // !_MSC_VER

gs_as_enter_area_res::gs_as_enter_area_res()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void gs_as_enter_area_res::InitAsDefaultInstance() {
}

gs_as_enter_area_res::gs_as_enter_area_res(const gs_as_enter_area_res& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void gs_as_enter_area_res::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  client_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

gs_as_enter_area_res::~gs_as_enter_area_res() {
  SharedDtor();
}

void gs_as_enter_area_res::SharedDtor() {
  if (client_id_ != &::google::protobuf::internal::kEmptyString) {
    delete client_id_;
  }
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (this != default_instance_) {
  }
}

void gs_as_enter_area_res::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* gs_as_enter_area_res::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return gs_as_enter_area_res_descriptor_;
}

const gs_as_enter_area_res& gs_as_enter_area_res::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_as_5fgs_5fproto_2eproto();
  return *default_instance_;
}

gs_as_enter_area_res* gs_as_enter_area_res::default_instance_ = NULL;

gs_as_enter_area_res* gs_as_enter_area_res::New() const {
  return new gs_as_enter_area_res;
}

void gs_as_enter_area_res::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_code_ = 0;
    if (has_client_id()) {
      if (client_id_ != &::google::protobuf::internal::kEmptyString) {
        client_id_->clear();
      }
    }
    if (has_token()) {
      if (token_ != &::google::protobuf::internal::kEmptyString) {
        token_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool gs_as_enter_area_res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 error_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_client_id;
        break;
      }

      // required bytes client_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_client_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_token;
        break;
      }

      // optional bytes token = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void gs_as_enter_area_res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_code(), output);
  }

  // required bytes client_id = 2;
  if (has_client_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->client_id(), output);
  }

  // optional bytes token = 3;
  if (has_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->token(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* gs_as_enter_area_res::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_code(), target);
  }

  // required bytes client_id = 2;
  if (has_client_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->client_id(), target);
  }

  // optional bytes token = 3;
  if (has_token()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->token(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int gs_as_enter_area_res::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error_code());
    }

    // required bytes client_id = 2;
    if (has_client_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->client_id());
    }

    // optional bytes token = 3;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void gs_as_enter_area_res::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const gs_as_enter_area_res* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const gs_as_enter_area_res*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void gs_as_enter_area_res::MergeFrom(const gs_as_enter_area_res& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
    if (from.has_client_id()) {
      set_client_id(from.client_id());
    }
    if (from.has_token()) {
      set_token(from.token());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void gs_as_enter_area_res::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gs_as_enter_area_res::CopyFrom(const gs_as_enter_area_res& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gs_as_enter_area_res::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void gs_as_enter_area_res::Swap(gs_as_enter_area_res* other) {
  if (other != this) {
    std::swap(error_code_, other->error_code_);
    std::swap(client_id_, other->client_id_);
    std::swap(token_, other->token_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata gs_as_enter_area_res::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = gs_as_enter_area_res_descriptor_;
  metadata.reflection = gs_as_enter_area_res_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
