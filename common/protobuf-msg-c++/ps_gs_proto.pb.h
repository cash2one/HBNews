// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ps_gs_proto.proto

#ifndef PROTOBUF_ps_5fgs_5fproto_2eproto__INCLUDED
#define PROTOBUF_ps_5fgs_5fproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ps_5fgs_5fproto_2eproto();
void protobuf_AssignDesc_ps_5fgs_5fproto_2eproto();
void protobuf_ShutdownFile_ps_5fgs_5fproto_2eproto();

class ps_gs_paied_req;
class ps_gs_paied_req_game_element;
class gs_ps_paied_res;

enum e_psgs_proto_version {
  PSGS_VERSION = 1
};
bool e_psgs_proto_version_IsValid(int value);
const e_psgs_proto_version e_psgs_proto_version_MIN = PSGS_VERSION;
const e_psgs_proto_version e_psgs_proto_version_MAX = PSGS_VERSION;
const int e_psgs_proto_version_ARRAYSIZE = e_psgs_proto_version_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_psgs_proto_version_descriptor();
inline const ::std::string& e_psgs_proto_version_Name(e_psgs_proto_version value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_psgs_proto_version_descriptor(), value);
}
inline bool e_psgs_proto_version_Parse(
    const ::std::string& name, e_psgs_proto_version* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_psgs_proto_version>(
    e_psgs_proto_version_descriptor(), name, value);
}
enum e_msg_ps_gs {
  e_msg_ps_gs_min = 0,
  e_msg_ps_gs_paied_req = 1,
  e_msg_ps_gs_max = 5
};
bool e_msg_ps_gs_IsValid(int value);
const e_msg_ps_gs e_msg_ps_gs_MIN = e_msg_ps_gs_min;
const e_msg_ps_gs e_msg_ps_gs_MAX = e_msg_ps_gs_max;
const int e_msg_ps_gs_ARRAYSIZE = e_msg_ps_gs_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_msg_ps_gs_descriptor();
inline const ::std::string& e_msg_ps_gs_Name(e_msg_ps_gs value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_msg_ps_gs_descriptor(), value);
}
inline bool e_msg_ps_gs_Parse(
    const ::std::string& name, e_msg_ps_gs* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_msg_ps_gs>(
    e_msg_ps_gs_descriptor(), name, value);
}
enum e_msg_gs_ps {
  e_msg_gs_ps_min = 0,
  e_msg_gs_ps_paied_res = 1,
  e_msg_gs_ps_max = 5
};
bool e_msg_gs_ps_IsValid(int value);
const e_msg_gs_ps e_msg_gs_ps_MIN = e_msg_gs_ps_min;
const e_msg_gs_ps e_msg_gs_ps_MAX = e_msg_gs_ps_max;
const int e_msg_gs_ps_ARRAYSIZE = e_msg_gs_ps_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_msg_gs_ps_descriptor();
inline const ::std::string& e_msg_gs_ps_Name(e_msg_gs_ps value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_msg_gs_ps_descriptor(), value);
}
inline bool e_msg_gs_ps_Parse(
    const ::std::string& name, e_msg_gs_ps* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_msg_gs_ps>(
    e_msg_gs_ps_descriptor(), name, value);
}
enum e_psgs_errorcode {
  e_psgs_errorcode_min = 0,
  e_psgs_errorcode_success = 1,
  e_psgs_errorcode_unkown_error = 2,
  e_psgs_errorcode_max = 4
};
bool e_psgs_errorcode_IsValid(int value);
const e_psgs_errorcode e_psgs_errorcode_MIN = e_psgs_errorcode_min;
const e_psgs_errorcode e_psgs_errorcode_MAX = e_psgs_errorcode_max;
const int e_psgs_errorcode_ARRAYSIZE = e_psgs_errorcode_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_psgs_errorcode_descriptor();
inline const ::std::string& e_psgs_errorcode_Name(e_psgs_errorcode value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_psgs_errorcode_descriptor(), value);
}
inline bool e_psgs_errorcode_Parse(
    const ::std::string& name, e_psgs_errorcode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_psgs_errorcode>(
    e_psgs_errorcode_descriptor(), name, value);
}
// ===================================================================

class ps_gs_paied_req_game_element : public ::google::protobuf::Message {
 public:
  ps_gs_paied_req_game_element();
  virtual ~ps_gs_paied_req_game_element();

  ps_gs_paied_req_game_element(const ps_gs_paied_req_game_element& from);

  inline ps_gs_paied_req_game_element& operator=(const ps_gs_paied_req_game_element& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ps_gs_paied_req_game_element& default_instance();

  void Swap(ps_gs_paied_req_game_element* other);

  // implements Message ----------------------------------------------

  ps_gs_paied_req_game_element* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ps_gs_paied_req_game_element& from);
  void MergeFrom(const ps_gs_paied_req_game_element& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ps_gs_paied_req.game_element)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ps_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_ps_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_ps_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static ps_gs_paied_req_game_element* default_instance_;
};
// -------------------------------------------------------------------

class ps_gs_paied_req : public ::google::protobuf::Message {
 public:
  ps_gs_paied_req();
  virtual ~ps_gs_paied_req();

  ps_gs_paied_req(const ps_gs_paied_req& from);

  inline ps_gs_paied_req& operator=(const ps_gs_paied_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ps_gs_paied_req& default_instance();

  void Swap(ps_gs_paied_req* other);

  // implements Message ----------------------------------------------

  ps_gs_paied_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ps_gs_paied_req& from);
  void MergeFrom(const ps_gs_paied_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ps_gs_paied_req_game_element game_element;

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required string order_id = 2;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  inline const ::std::string& order_id() const;
  inline void set_order_id(const ::std::string& value);
  inline void set_order_id(const char* value);
  inline void set_order_id(const char* value, size_t size);
  inline ::std::string* mutable_order_id();
  inline ::std::string* release_order_id();
  inline void set_allocated_order_id(::std::string* order_id);

  // repeated .ps_gs_paied_req.game_element eles = 3;
  inline int eles_size() const;
  inline void clear_eles();
  static const int kElesFieldNumber = 3;
  inline const ::ps_gs_paied_req_game_element& eles(int index) const;
  inline ::ps_gs_paied_req_game_element* mutable_eles(int index);
  inline ::ps_gs_paied_req_game_element* add_eles();
  inline const ::google::protobuf::RepeatedPtrField< ::ps_gs_paied_req_game_element >&
      eles() const;
  inline ::google::protobuf::RepeatedPtrField< ::ps_gs_paied_req_game_element >*
      mutable_eles();

  // @@protoc_insertion_point(class_scope:ps_gs_paied_req)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_order_id();
  inline void clear_has_order_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* order_id_;
  ::google::protobuf::RepeatedPtrField< ::ps_gs_paied_req_game_element > eles_;
  ::google::protobuf::uint32 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ps_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_ps_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_ps_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static ps_gs_paied_req* default_instance_;
};
// -------------------------------------------------------------------

class gs_ps_paied_res : public ::google::protobuf::Message {
 public:
  gs_ps_paied_res();
  virtual ~gs_ps_paied_res();

  gs_ps_paied_res(const gs_ps_paied_res& from);

  inline gs_ps_paied_res& operator=(const gs_ps_paied_res& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gs_ps_paied_res& default_instance();

  void Swap(gs_ps_paied_res* other);

  // implements Message ----------------------------------------------

  gs_ps_paied_res* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gs_ps_paied_res& from);
  void MergeFrom(const gs_ps_paied_res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);

  // optional string order_id = 2;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  inline const ::std::string& order_id() const;
  inline void set_order_id(const ::std::string& value);
  inline void set_order_id(const char* value);
  inline void set_order_id(const char* value, size_t size);
  inline ::std::string* mutable_order_id();
  inline ::std::string* release_order_id();
  inline void set_allocated_order_id(::std::string* order_id);

  // @@protoc_insertion_point(class_scope:gs_ps_paied_res)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_order_id();
  inline void clear_has_order_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* order_id_;
  ::google::protobuf::int32 error_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ps_5fgs_5fproto_2eproto();
  friend void protobuf_AssignDesc_ps_5fgs_5fproto_2eproto();
  friend void protobuf_ShutdownFile_ps_5fgs_5fproto_2eproto();

  void InitAsDefaultInstance();
  static gs_ps_paied_res* default_instance_;
};
// ===================================================================


// ===================================================================

// ps_gs_paied_req_game_element

// required uint32 type = 1;
inline bool ps_gs_paied_req_game_element::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ps_gs_paied_req_game_element::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ps_gs_paied_req_game_element::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ps_gs_paied_req_game_element::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ps_gs_paied_req_game_element::type() const {
  return type_;
}
inline void ps_gs_paied_req_game_element::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 id = 2;
inline bool ps_gs_paied_req_game_element::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ps_gs_paied_req_game_element::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ps_gs_paied_req_game_element::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ps_gs_paied_req_game_element::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ps_gs_paied_req_game_element::id() const {
  return id_;
}
inline void ps_gs_paied_req_game_element::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 3;
inline bool ps_gs_paied_req_game_element::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ps_gs_paied_req_game_element::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ps_gs_paied_req_game_element::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ps_gs_paied_req_game_element::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 ps_gs_paied_req_game_element::num() const {
  return num_;
}
inline void ps_gs_paied_req_game_element::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// ps_gs_paied_req

// required uint32 user_id = 1;
inline bool ps_gs_paied_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ps_gs_paied_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ps_gs_paied_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ps_gs_paied_req::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 ps_gs_paied_req::user_id() const {
  return user_id_;
}
inline void ps_gs_paied_req::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
}

// required string order_id = 2;
inline bool ps_gs_paied_req::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ps_gs_paied_req::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ps_gs_paied_req::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ps_gs_paied_req::clear_order_id() {
  if (order_id_ != &::google::protobuf::internal::kEmptyString) {
    order_id_->clear();
  }
  clear_has_order_id();
}
inline const ::std::string& ps_gs_paied_req::order_id() const {
  return *order_id_;
}
inline void ps_gs_paied_req::set_order_id(const ::std::string& value) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(value);
}
inline void ps_gs_paied_req::set_order_id(const char* value) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(value);
}
inline void ps_gs_paied_req::set_order_id(const char* value, size_t size) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ps_gs_paied_req::mutable_order_id() {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  return order_id_;
}
inline ::std::string* ps_gs_paied_req::release_order_id() {
  clear_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = order_id_;
    order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ps_gs_paied_req::set_allocated_order_id(::std::string* order_id) {
  if (order_id_ != &::google::protobuf::internal::kEmptyString) {
    delete order_id_;
  }
  if (order_id) {
    set_has_order_id();
    order_id_ = order_id;
  } else {
    clear_has_order_id();
    order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .ps_gs_paied_req.game_element eles = 3;
inline int ps_gs_paied_req::eles_size() const {
  return eles_.size();
}
inline void ps_gs_paied_req::clear_eles() {
  eles_.Clear();
}
inline const ::ps_gs_paied_req_game_element& ps_gs_paied_req::eles(int index) const {
  return eles_.Get(index);
}
inline ::ps_gs_paied_req_game_element* ps_gs_paied_req::mutable_eles(int index) {
  return eles_.Mutable(index);
}
inline ::ps_gs_paied_req_game_element* ps_gs_paied_req::add_eles() {
  return eles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ps_gs_paied_req_game_element >&
ps_gs_paied_req::eles() const {
  return eles_;
}
inline ::google::protobuf::RepeatedPtrField< ::ps_gs_paied_req_game_element >*
ps_gs_paied_req::mutable_eles() {
  return &eles_;
}

// -------------------------------------------------------------------

// gs_ps_paied_res

// required int32 error_code = 1;
inline bool gs_ps_paied_res::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gs_ps_paied_res::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gs_ps_paied_res::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gs_ps_paied_res::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 gs_ps_paied_res::error_code() const {
  return error_code_;
}
inline void gs_ps_paied_res::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// optional string order_id = 2;
inline bool gs_ps_paied_res::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gs_ps_paied_res::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gs_ps_paied_res::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gs_ps_paied_res::clear_order_id() {
  if (order_id_ != &::google::protobuf::internal::kEmptyString) {
    order_id_->clear();
  }
  clear_has_order_id();
}
inline const ::std::string& gs_ps_paied_res::order_id() const {
  return *order_id_;
}
inline void gs_ps_paied_res::set_order_id(const ::std::string& value) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(value);
}
inline void gs_ps_paied_res::set_order_id(const char* value) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(value);
}
inline void gs_ps_paied_res::set_order_id(const char* value, size_t size) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gs_ps_paied_res::mutable_order_id() {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    order_id_ = new ::std::string;
  }
  return order_id_;
}
inline ::std::string* gs_ps_paied_res::release_order_id() {
  clear_has_order_id();
  if (order_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = order_id_;
    order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gs_ps_paied_res::set_allocated_order_id(::std::string* order_id) {
  if (order_id_ != &::google::protobuf::internal::kEmptyString) {
    delete order_id_;
  }
  if (order_id) {
    set_has_order_id();
    order_id_ = order_id;
  } else {
    clear_has_order_id();
    order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_psgs_proto_version>() {
  return ::e_psgs_proto_version_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_msg_ps_gs>() {
  return ::e_msg_ps_gs_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_msg_gs_ps>() {
  return ::e_msg_gs_ps_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_psgs_errorcode>() {
  return ::e_psgs_errorcode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ps_5fgs_5fproto_2eproto__INCLUDED
